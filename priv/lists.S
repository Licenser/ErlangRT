{module, lists}.  %% version = 0

{exports, [{all,2},
           {any,2},
           {append,1},
           {append,2},
           {concat,1},
           {delete,2},
           {droplast,1},
           {dropwhile,2},
           {duplicate,2},
           {filter,2},
           {filtermap,2},
           {flatlength,1},
           {flatmap,2},
           {flatten,1},
           {flatten,2},
           {foldl,3},
           {foldr,3},
           {foreach,2},
           {join,2},
           {keydelete,3},
           {keyfind,3},
           {keymap,3},
           {keymember,3},
           {keymerge,3},
           {keyreplace,4},
           {keysearch,3},
           {keysort,2},
           {keystore,4},
           {keytake,3},
           {last,1},
           {map,2},
           {mapfoldl,3},
           {mapfoldr,3},
           {max,1},
           {member,2},
           {merge,1},
           {merge,2},
           {merge,3},
           {merge3,3},
           {min,1},
           {module_info,0},
           {module_info,1},
           {nth,2},
           {nthtail,2},
           {partition,2},
           {prefix,2},
           {reverse,1},
           {reverse,2},
           {rkeymerge,3},
           {rmerge,2},
           {rmerge,3},
           {rmerge3,3},
           {rukeymerge,3},
           {rumerge,2},
           {rumerge,3},
           {rumerge3,3},
           {seq,2},
           {seq,3},
           {sort,1},
           {sort,2},
           {split,2},
           {splitwith,2},
           {sublist,2},
           {sublist,3},
           {subtract,2},
           {suffix,2},
           {sum,1},
           {takewhile,2},
           {ukeymerge,3},
           {ukeysort,2},
           {umerge,1},
           {umerge,2},
           {umerge,3},
           {umerge3,3},
           {unzip,1},
           {unzip3,1},
           {usort,1},
           {usort,2},
           {zf,2},
           {zip,2},
           {zip3,3},
           {zipwith,3},
           {zipwith3,4}]}.

{attributes, [{dialyzer,[{no_improper_lists,{ukeymergel,3}}]}]}.

{labels, 1049}.


{function, keyfind, 3, 2}.
  {label,1}.
    {line,[{location,"lists.erl",55}]}.
    {func_info,{atom,lists},{atom,keyfind},3}.
  {label,2}.
    {move,{atom,undef},{x,0}}.
    {line,[{location,"lists.erl",56}]}.
    {call_ext_only,1,{extfunc,erlang,nif_error,1}}.


{function, keymember, 3, 4}.
  {label,3}.
    {line,[{location,"lists.erl",65}]}.
    {func_info,{atom,lists},{atom,keymember},3}.
  {label,4}.
    {move,{atom,undef},{x,0}}.
    {line,[{location,"lists.erl",66}]}.
    {call_ext_only,1,{extfunc,erlang,nif_error,1}}.


{function, keysearch, 3, 6}.
  {label,5}.
    {line,[{location,"lists.erl",75}]}.
    {func_info,{atom,lists},{atom,keysearch},3}.
  {label,6}.
    {move,{atom,undef},{x,0}}.
    {line,[{location,"lists.erl",76}]}.
    {call_ext_only,1,{extfunc,erlang,nif_error,1}}.


{function, member, 2, 8}.
  {label,7}.
    {line,[{location,"lists.erl",84}]}.
    {func_info,{atom,lists},{atom,member},2}.
  {label,8}.
    {move,{atom,undef},{x,0}}.
    {line,[{location,"lists.erl",85}]}.
    {call_ext_only,1,{extfunc,erlang,nif_error,1}}.


{function, reverse, 2, 10}.
  {label,9}.
    {line,[{location,"lists.erl",94}]}.
    {func_info,{atom,lists},{atom,reverse},2}.
  {label,10}.
    {move,{atom,undef},{x,0}}.
    {line,[{location,"lists.erl",95}]}.
    {call_ext_only,1,{extfunc,erlang,nif_error,1}}.


{function, append, 2, 12}.
  {label,11}.
    {line,[{location,"lists.erl",116}]}.
    {func_info,{atom,lists},{atom,append},2}.
  {label,12}.
    {line,[{location,"lists.erl",116}]}.
    {call_ext_only,2,{extfunc,erlang,'++',2}}.


{function, append, 1, 14}.
  {label,13}.
    {line,[{location,"lists.erl",126}]}.
    {func_info,{atom,lists},{atom,append},1}.
  {label,14}.
    {test,is_nonempty_list,{f,16},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_nil,{f,15},[{x,2}]}.
    {move,{x,1},{x,0}}.
    return.
  {label,15}.
    {allocate,1,3}.
    {move,{x,2},{x,0}}.
    {move,{x,1},{y,0}}.
    {line,[{location,"lists.erl",127}]}.
    {call,1,{f,14}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"lists.erl",127}]}.
    {call_ext_last,2,{extfunc,erlang,'++',2},1}.
  {label,16}.
    {test,is_nil,{f,13},[{x,0}]}.
    return.


{function, subtract, 2, 18}.
  {label,17}.
    {line,[{location,"lists.erl",138}]}.
    {func_info,{atom,lists},{atom,subtract},2}.
  {label,18}.
    {line,[{location,"lists.erl",138}]}.
    {call_ext_only,2,{extfunc,erlang,'--',2}}.


{function, reverse, 1, 20}.
  {label,19}.
    {line,[{location,"lists.erl",147}]}.
    {func_info,{atom,lists},{atom,reverse},1}.
  {label,20}.
    {test,is_nonempty_list,{f,23},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_nonempty_list,{f,22},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {test,is_nil,{f,21},[{x,4}]}.
    {test_heap,4,4}.
    {put_list,{x,1},nil,{x,1}}.
    {put_list,{x,3},{x,1},{x,0}}.
    return.
  {label,21}.
    {test_heap,4,5}.
    {put_list,{x,1},nil,{x,2}}.
    {put_list,{x,3},{x,2},{x,1}}.
    {move,{x,4},{x,0}}.
    {line,[{location,"lists.erl",154}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.
  {label,22}.
    {test,is_nil,{f,19},[{x,2}]}.
    return.
  {label,23}.
    {test,is_nil,{f,19},[{x,0}]}.
    return.


{function, nth, 2, 25}.
  {label,24}.
    {line,[{location,"lists.erl",170}]}.
    {func_info,{atom,lists},{atom,nth},2}.
  {label,25}.
    {test,is_eq_exact,{f,26},[{x,0},{integer,1}]}.
    {test,is_nonempty_list,{f,24},[{x,1}]}.
    {get_list,{x,1},{x,0},{x,3}}.
    return.
  {label,26}.
    {test,is_nonempty_list,{f,24},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,3}}.
    {test,is_lt,{f,24},[{integer,1},{x,0}]}.
    {line,[{location,"lists.erl",172}]}.
    {gc_bif,'-',{f,0},4,[{x,0},{integer,1}],{x,0}}.
    {move,{x,3},{x,1}}.
    {call_only,2,{f,25}}.


{function, nthtail, 2, 28}.
  {label,27}.
    {line,[{location,"lists.erl",180}]}.
    {func_info,{atom,lists},{atom,nthtail},2}.
  {label,28}.
    {test,is_eq_exact,{f,29},[{x,0},{integer,1}]}.
    {test,is_nonempty_list,{f,30},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,0}}.
    return.
  {label,29}.
    {test,is_nonempty_list,{f,30},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,3}}.
    {test,is_lt,{f,30},[{integer,1},{x,0}]}.
    {line,[{location,"lists.erl",182}]}.
    {gc_bif,'-',{f,0},4,[{x,0},{integer,1}],{x,0}}.
    {move,{x,3},{x,1}}.
    {call_only,2,{f,28}}.
  {label,30}.
    {test,is_eq_exact,{f,27},[{x,0},{integer,0}]}.
    {test,is_list,{f,27},[{x,1}]}.
    {move,{x,1},{x,0}}.
    return.


{function, prefix, 2, 32}.
  {label,31}.
    {line,[{location,"lists.erl",192}]}.
    {func_info,{atom,lists},{atom,prefix},2}.
  {label,32}.
    {test,is_nonempty_list,{f,34},[{x,0}]}.
    {get_list,{x,0},{x,2},{x,3}}.
    {test,is_nonempty_list,{f,33},[{x,1}]}.
    {get_list,{x,1},{x,4},{x,5}}.
    {test,is_eq_exact,{f,33},[{x,4},{x,2}]}.
    {move,{x,5},{x,1}}.
    {move,{x,3},{x,0}}.
    {call_only,2,{f,32}}.
  {label,33}.
    {test,is_list,{f,31},[{x,1}]}.
    {move,{atom,false},{x,0}}.
    return.
  {label,34}.
    {test,is_nil,{f,31},[{x,0}]}.
    {test,is_list,{f,31},[{x,1}]}.
    {move,{atom,true},{x,0}}.
    return.


{function, suffix, 2, 36}.
  {label,35}.
    {line,[{location,"lists.erl",204}]}.
    {func_info,{atom,lists},{atom,suffix},2}.
  {label,36}.
    {allocate_zero,1,2}.
    {line,[{location,"lists.erl",205}]}.
    {gc_bif,length,{f,0},2,[{x,1}],{x,2}}.
    {line,[{location,"lists.erl",205}]}.
    {gc_bif,length,{f,0},3,[{x,0}],{x,3}}.
    {line,[{location,"lists.erl",205}]}.
    {gc_bif,'-',{f,0},4,[{x,2},{x,3}],{x,2}}.
    {test,is_ge,{f,37},[{x,2},{integer,0}]}.
    {move,{x,0},{y,0}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"lists.erl",206}]}.
    {call,2,{f,28}}.
    {bif,'=:=',{f,0},[{x,0},{y,0}],{x,0}}.
    {deallocate,1}.
    return.
  {label,37}.
    {move,{atom,false},{x,0}}.
    {deallocate,1}.
    return.


{function, droplast, 1, 39}.
  {label,38}.
    {line,[{location,"lists.erl",218}]}.
    {func_info,{atom,lists},{atom,droplast},1}.
  {label,39}.
    {test,is_nonempty_list,{f,38},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_nil,{f,40},[{x,2}]}.
    {move,nil,{x,0}}.
    return.
  {label,40}.
    {allocate,1,3}.
    {move,{x,2},{x,0}}.
    {move,{x,1},{y,0}}.
    {line,[{location,"lists.erl",219}]}.
    {call,1,{f,39}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.


{function, last, 1, 42}.
  {label,41}.
    {line,[{location,"lists.erl",228}]}.
    {func_info,{atom,lists},{atom,last},1}.
  {label,42}.
    {test,is_nonempty_list,{f,41},[{x,0}]}.
    {get_list,{x,0},{x,0},{x,1}}.
    {call_only,2,{f,44}}.


{function, last, 2, 44}.
  {label,43}.
    {line,[{location,"lists.erl",230}]}.
    {func_info,{atom,lists},{atom,last},2}.
  {label,44}.
    {test,is_nonempty_list,{f,45},[{x,1}]}.
    {get_list,{x,1},{x,0},{x,1}}.
    {call_only,2,{f,44}}.
  {label,45}.
    {test,is_nil,{f,43},[{x,1}]}.
    return.


{function, seq, 2, 47}.
  {label,46}.
    {line,[{location,"lists.erl",243}]}.
    {func_info,{atom,lists},{atom,seq},2}.
  {label,47}.
    {gc_bif,'-',{f,46},2,[{x,0},{integer,1}],{x,2}}.
    {test,is_integer,{f,46},[{x,0}]}.
    {test,is_integer,{f,46},[{x,1}]}.
    {test,is_ge,{f,46},[{x,1},{x,2}]}.
    {line,[{location,"lists.erl",245}]}.
    {gc_bif,'-',{f,0},2,[{x,1},{x,0}],{x,0}}.
    {line,[{location,"lists.erl",245}]}.
    {gc_bif,'+',{f,0},2,[{x,0},{integer,1}],{x,0}}.
    {move,nil,{x,2}}.
    {call_only,3,{f,49}}.


{function, seq_loop, 3, 49}.
  {label,48}.
    {line,[{location,"lists.erl",247}]}.
    {func_info,{atom,lists},{atom,seq_loop},3}.
  {label,49}.
    {test,is_ge,{f,50},[{x,0},{integer,4}]}.
    {line,[{location,"lists.erl",248}]}.
    {gc_bif,'-',{f,0},3,[{x,0},{integer,4}],{x,0}}.
    {line,[{location,"lists.erl",248}]}.
    {gc_bif,'-',{f,0},3,[{x,1},{integer,4}],{x,3}}.
    {line,[{location,"lists.erl",248}]}.
    {gc_bif,'-',{f,0},4,[{x,1},{integer,3}],{x,4}}.
    {line,[{location,"lists.erl",248}]}.
    {gc_bif,'-',{f,0},5,[{x,1},{integer,2}],{x,5}}.
    {line,[{location,"lists.erl",248}]}.
    {gc_bif,'-',{f,0},6,[{x,1},{integer,1}],{x,6}}.
    {test_heap,8,7}.
    {put_list,{x,1},{x,2},{x,7}}.
    {put_list,{x,6},{x,7},{x,6}}.
    {put_list,{x,5},{x,6},{x,5}}.
    {put_list,{x,4},{x,5},{x,2}}.
    {move,{x,3},{x,1}}.
    {call_only,3,{f,49}}.
  {label,50}.
    {test,is_ge,{f,51},[{x,0},{integer,2}]}.
    {line,[{location,"lists.erl",250}]}.
    {gc_bif,'-',{f,0},3,[{x,0},{integer,2}],{x,0}}.
    {line,[{location,"lists.erl",250}]}.
    {gc_bif,'-',{f,0},3,[{x,1},{integer,2}],{x,3}}.
    {line,[{location,"lists.erl",250}]}.
    {gc_bif,'-',{f,0},4,[{x,1},{integer,1}],{x,4}}.
    {test_heap,4,5}.
    {put_list,{x,1},{x,2},{x,5}}.
    {put_list,{x,4},{x,5},{x,2}}.
    {move,{x,3},{x,1}}.
    {call_only,3,{f,49}}.
  {label,51}.
    {test,is_integer,{f,48},[{x,0}]}.
    {select_val,{x,0},{f,48},{list,[{integer,1},{f,52},{integer,0},{f,53}]}}.
  {label,52}.
    {test_heap,2,3}.
    {put_list,{x,1},{x,2},{x,0}}.
    return.
  {label,53}.
    {move,{x,2},{x,0}}.
    return.


{function, seq, 3, 55}.
  {label,54}.
    {line,[{location,"lists.erl",262}]}.
    {func_info,{atom,lists},{atom,seq},3}.
  {label,55}.
    {test,is_integer,{f,54},[{x,0}]}.
    {test,is_integer,{f,54},[{x,1}]}.
    {test,is_integer,{f,54},[{x,2}]}.
    {gc_bif,'-',{f,56},3,[{x,0},{x,2}],{x,3}}.
    {test,is_lt,{f,56},[{integer,0},{x,2}]}.
    {test,is_lt,{f,57},[{x,1},{x,3}]}.
  {label,56}.
    {gc_bif,'-',{f,58},3,[{x,0},{x,2}],{x,3}}.
    {test,is_lt,{f,58},[{x,2},{integer,0}]}.
    {test,is_ge,{f,58},[{x,3},{x,1}]}.
  {label,57}.
    {line,[{location,"lists.erl",267}]}.
    {gc_bif,'-',{f,0},3,[{x,1},{x,0}],{x,1}}.
    {line,[{location,"lists.erl",267}]}.
    {gc_bif,'+',{f,0},3,[{x,1},{x,2}],{x,1}}.
    {line,[{location,"lists.erl",267}]}.
    {gc_bif,'div',{f,0},3,[{x,1},{x,2}],{x,1}}.
    {line,[{location,"lists.erl",268}]}.
    {gc_bif,'-',{f,0},3,[{x,1},{integer,1}],{x,3}}.
    {line,[{location,"lists.erl",268}]}.
    {gc_bif,'*',{f,0},4,[{x,2},{x,3}],{x,3}}.
    {line,[{location,"lists.erl",268}]}.
    {gc_bif,'+',{f,0},4,[{x,3},{x,0}],{x,0}}.
    {move,nil,{x,3}}.
    {move,{x,1},{x,4}}.
    {move,{x,0},{x,1}}.
    {move,{x,4},{x,0}}.
    {call_only,4,{f,61}}.
  {label,58}.
    {test,is_eq_exact,{f,59},[{x,2},{integer,0}]}.
    {test,is_eq_exact,{f,59},[{x,0},{x,1}]}.
    {move,{x,0},{x,1}}.
    {move,nil,{x,3}}.
    {move,{integer,1},{x,0}}.
    {call_only,4,{f,61}}.
  {label,59}.
    {line,[{location,"lists.erl",264}]}.
    if_end.


{function, seq_loop, 4, 61}.
  {label,60}.
    {line,[{location,"lists.erl",273}]}.
    {func_info,{atom,lists},{atom,seq_loop},4}.
  {label,61}.
    {test,is_ge,{f,62},[{x,0},{integer,4}]}.
    {line,[{location,"lists.erl",274}]}.
    {gc_bif,'-',{f,0},4,[{x,1},{x,2}],{x,4}}.
    {line,[{location,"lists.erl",274}]}.
    {gc_bif,'-',{f,0},5,[{x,4},{x,2}],{x,5}}.
    {line,[{location,"lists.erl",274}]}.
    {gc_bif,'-',{f,0},6,[{x,5},{x,2}],{x,6}}.
    {line,[{location,"lists.erl",275}]}.
    {gc_bif,'-',{f,0},7,[{x,0},{integer,4}],{x,0}}.
    {line,[{location,"lists.erl",275}]}.
    {gc_bif,'-',{f,0},7,[{x,6},{x,2}],{x,7}}.
    {test_heap,8,8}.
    {put_list,{x,1},{x,3},{x,8}}.
    {put_list,{x,4},{x,8},{x,4}}.
    {put_list,{x,5},{x,4},{x,4}}.
    {put_list,{x,6},{x,4},{x,3}}.
    {move,{x,7},{x,1}}.
    {call_only,4,{f,61}}.
  {label,62}.
    {test,is_ge,{f,63},[{x,0},{integer,2}]}.
    {line,[{location,"lists.erl",277}]}.
    {gc_bif,'-',{f,0},4,[{x,1},{x,2}],{x,4}}.
    {line,[{location,"lists.erl",278}]}.
    {gc_bif,'-',{f,0},5,[{x,0},{integer,2}],{x,0}}.
    {line,[{location,"lists.erl",278}]}.
    {gc_bif,'-',{f,0},5,[{x,4},{x,2}],{x,5}}.
    {test_heap,4,6}.
    {put_list,{x,1},{x,3},{x,6}}.
    {put_list,{x,4},{x,6},{x,3}}.
    {move,{x,5},{x,1}}.
    {call_only,4,{f,61}}.
  {label,63}.
    {test,is_integer,{f,60},[{x,0}]}.
    {select_val,{x,0},{f,60},{list,[{integer,1},{f,64},{integer,0},{f,65}]}}.
  {label,64}.
    {test_heap,2,4}.
    {put_list,{x,1},{x,3},{x,0}}.
    return.
  {label,65}.
    {move,{x,3},{x,0}}.
    return.


{function, sum, 1, 67}.
  {label,66}.
    {line,[{location,"lists.erl",289}]}.
    {func_info,{atom,lists},{atom,sum},1}.
  {label,67}.
    {move,{integer,0},{x,1}}.
    {call_only,2,{f,69}}.


{function, sum, 2, 69}.
  {label,68}.
    {line,[{location,"lists.erl",291}]}.
    {func_info,{atom,lists},{atom,sum},2}.
  {label,69}.
    {test,is_nonempty_list,{f,70},[{x,0}]}.
    {get_list,{x,0},{x,2},{x,3}}.
    {line,[{location,"lists.erl",291}]}.
    {gc_bif,'+',{f,0},4,[{x,1},{x,2}],{x,1}}.
    {move,{x,3},{x,0}}.
    {call_only,2,{f,69}}.
  {label,70}.
    {test,is_nil,{f,68},[{x,0}]}.
    {move,{x,1},{x,0}}.
    return.


{function, duplicate, 2, 72}.
  {label,71}.
    {line,[{location,"lists.erl",303}]}.
    {func_info,{atom,lists},{atom,duplicate},2}.
  {label,72}.
    {test,is_integer,{f,71},[{x,0}]}.
    {test,is_ge,{f,71},[{x,0},{integer,0}]}.
    {move,nil,{x,2}}.
    {call_only,3,{f,74}}.


{function, duplicate, 3, 74}.
  {label,73}.
    {line,[{location,"lists.erl",305}]}.
    {func_info,{atom,lists},{atom,duplicate},3}.
  {label,74}.
    {test,is_eq_exact,{f,75},[{x,0},{integer,0}]}.
    {move,{x,2},{x,0}}.
    return.
  {label,75}.
    {line,[{location,"lists.erl",306}]}.
    {gc_bif,'-',{f,0},3,[{x,0},{integer,1}],{x,0}}.
    {test_heap,2,3}.
    {put_list,{x,1},{x,2},{x,2}}.
    {call_only,3,{f,74}}.


{function, min, 1, 77}.
  {label,76}.
    {line,[{location,"lists.erl",315}]}.
    {func_info,{atom,lists},{atom,min},1}.
  {label,77}.
    {test,is_nonempty_list,{f,76},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,0}}.
    {call_only,2,{f,79}}.


{function, min, 2, 79}.
  {label,78}.
    {line,[{location,"lists.erl",317}]}.
    {func_info,{atom,lists},{atom,min},2}.
  {label,79}.
    {test,is_nonempty_list,{f,81},[{x,0}]}.
    {get_list,{x,0},{x,2},{x,3}}.
    {test,is_lt,{f,80},[{x,2},{x,1}]}.
    {move,{x,2},{x,1}}.
    {move,{x,3},{x,0}}.
    {call_only,2,{f,79}}.
  {label,80}.
    {move,{x,3},{x,0}}.
    {call_only,2,{f,79}}.
  {label,81}.
    {test,is_nil,{f,78},[{x,0}]}.
    {move,{x,1},{x,0}}.
    return.


{function, max, 1, 83}.
  {label,82}.
    {line,[{location,"lists.erl",328}]}.
    {func_info,{atom,lists},{atom,max},1}.
  {label,83}.
    {test,is_nonempty_list,{f,82},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,0}}.
    {call_only,2,{f,85}}.


{function, max, 2, 85}.
  {label,84}.
    {line,[{location,"lists.erl",330}]}.
    {func_info,{atom,lists},{atom,max},2}.
  {label,85}.
    {test,is_nonempty_list,{f,87},[{x,0}]}.
    {get_list,{x,0},{x,2},{x,3}}.
    {test,is_lt,{f,86},[{x,1},{x,2}]}.
    {move,{x,2},{x,1}}.
    {move,{x,3},{x,0}}.
    {call_only,2,{f,85}}.
  {label,86}.
    {move,{x,3},{x,0}}.
    {call_only,2,{f,85}}.
  {label,87}.
    {test,is_nil,{f,84},[{x,0}]}.
    {move,{x,1},{x,0}}.
    return.


{function, sublist, 3, 89}.
  {label,88}.
    {line,[{location,"lists.erl",344}]}.
    {func_info,{atom,lists},{atom,sublist},3}.
  {label,89}.
    {test,is_integer,{f,88},[{x,2}]}.
    {test,is_ge,{f,88},[{x,2},{integer,0}]}.
    {allocate_zero,1,3}.
    {line,[{location,"lists.erl",345}]}.
    {gc_bif,'-',{f,0},3,[{x,1},{integer,1}],{x,3}}.
    {move,{x,0},{x,1}}.
    {move,{x,3},{x,0}}.
    {move,{x,2},{y,0}}.
    {line,[{location,"lists.erl",345}]}.
    {call,2,{f,28}}.
    {move,{y,0},{x,1}}.
    {call_last,2,{f,91},1}.


{function, sublist, 2, 91}.
  {label,90}.
    {line,[{location,"lists.erl",353}]}.
    {func_info,{atom,lists},{atom,sublist},2}.
  {label,91}.
    {test,is_integer,{f,90},[{x,1}]}.
    {test,is_list,{f,90},[{x,0}]}.
    {call_only,2,{f,93}}.


{function, sublist_2, 2, 93}.
  {label,92}.
    {line,[{location,"lists.erl",356}]}.
    {func_info,{atom,lists},{atom,sublist_2},2}.
  {label,93}.
    {test,is_nonempty_list,{f,94},[{x,0}]}.
    {get_list,{x,0},{x,2},{x,3}}.
    {test,is_lt,{f,94},[{integer,0},{x,1}]}.
    {allocate_zero,1,4}.
    {line,[{location,"lists.erl",357}]}.
    {gc_bif,'-',{f,0},4,[{x,1},{integer,1}],{x,1}}.
    {move,{x,3},{x,0}}.
    {move,{x,2},{y,0}}.
    {line,[{location,"lists.erl",357}]}.
    {call,2,{f,93}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,94}.
    {test,is_ne_exact,{f,95},[{x,1},{integer,0}]}.
    {test,is_list,{f,92},[{x,0}]}.
    {test,is_lt,{f,92},[{integer,0},{x,1}]}.
  {label,95}.
    {move,nil,{x,0}}.
    return.


{function, delete, 2, 97}.
  {label,96}.
    {line,[{location,"lists.erl",372}]}.
    {func_info,{atom,lists},{atom,delete},2}.
  {label,97}.
    {test,is_nonempty_list,{f,99},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,3}}.
    {test,is_eq_exact,{f,98},[{x,2},{x,0}]}.
    {move,{x,3},{x,0}}.
    return.
  {label,98}.
    {allocate,1,4}.
    {move,{x,3},{x,1}}.
    {move,{x,2},{y,0}}.
    {line,[{location,"lists.erl",374}]}.
    {call,2,{f,97}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,99}.
    {test,is_nil,{f,96},[{x,1}]}.
    {move,nil,{x,0}}.
    return.


{function, zip, 2, 101}.
  {label,100}.
    {line,[{location,"lists.erl",387}]}.
    {func_info,{atom,lists},{atom,zip},2}.
  {label,101}.
    {test,is_nonempty_list,{f,102},[{x,0}]}.
    {get_list,{x,0},{x,2},{x,3}}.
    {test,is_nonempty_list,{f,100},[{x,1}]}.
    {allocate,2,4}.
    {get_list,{x,1},{y,1},{x,1}}.
    {move,{x,3},{x,0}}.
    {move,{x,2},{y,0}}.
    {line,[{location,"lists.erl",387}]}.
    {call,2,{f,101}}.
    {test_heap,5,1}.
    {put_tuple,2,{x,1}}.
    {put,{y,0}}.
    {put,{y,1}}.
    {put_list,{x,1},{x,0},{x,0}}.
    {deallocate,2}.
    return.
  {label,102}.
    {test,is_nil,{f,100},[{x,0}]}.
    {test,is_nil,{f,100},[{x,1}]}.
    {move,nil,{x,0}}.
    return.


{function, unzip, 1, 104}.
  {label,103}.
    {line,[{location,"lists.erl",400}]}.
    {func_info,{atom,lists},{atom,unzip},1}.
  {label,104}.
    {move,nil,{x,2}}.
    {move,nil,{x,1}}.
    {call_only,3,{f,106}}.


{function, unzip, 3, 106}.
  {label,105}.
    {line,[{location,"lists.erl",402}]}.
    {func_info,{atom,lists},{atom,unzip},3}.
  {label,106}.
    {test,is_nonempty_list,{f,107},[{x,0}]}.
    {get_list,{x,0},{x,3},{x,4}}.
    {test,is_tuple,{f,105},[{x,3}]}.
    {test,test_arity,{f,105},[{x,3},2]}.
    {test_heap,4,5}.
    {get_tuple_element,{x,3},0,{x,5}}.
    {get_tuple_element,{x,3},1,{x,6}}.
    {put_list,{x,5},{x,1},{x,1}}.
    {put_list,{x,6},{x,2},{x,2}}.
    {move,{x,4},{x,0}}.
    {call_only,3,{f,106}}.
  {label,107}.
    {test,is_nil,{f,105},[{x,0}]}.
    {allocate,1,3}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{y,0}}.
    {line,[{location,"lists.erl",403}]}.
    {call,1,{f,20}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{x,1},{y,0}}.
    {line,[{location,"lists.erl",403}]}.
    {call,1,{f,20}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{y,0}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,1}.
    return.


{function, zip3, 3, 109}.
  {label,108}.
    {line,[{location,"lists.erl",417}]}.
    {func_info,{atom,lists},{atom,zip3},3}.
  {label,109}.
    {test,is_nonempty_list,{f,110},[{x,0}]}.
    {get_list,{x,0},{x,3},{x,4}}.
    {test,is_nonempty_list,{f,108},[{x,1}]}.
    {get_list,{x,1},{x,5},{x,6}}.
    {test,is_nonempty_list,{f,108},[{x,2}]}.
    {allocate,3,7}.
    {get_list,{x,2},{y,2},{x,2}}.
    {move,{x,6},{x,1}}.
    {move,{x,4},{x,0}}.
    {move,{x,3},{y,0}}.
    {move,{x,5},{y,1}}.
    {line,[{location,"lists.erl",417}]}.
    {call,3,{f,109}}.
    {test_heap,6,1}.
    {put_tuple,3,{x,1}}.
    {put,{y,0}}.
    {put,{y,1}}.
    {put,{y,2}}.
    {put_list,{x,1},{x,0},{x,0}}.
    {deallocate,3}.
    return.
  {label,110}.
    {test,is_nil,{f,108},[{x,0}]}.
    {test,is_nil,{f,108},[{x,1}]}.
    {test,is_nil,{f,108},[{x,2}]}.
    {move,nil,{x,0}}.
    return.


{function, unzip3, 1, 112}.
  {label,111}.
    {line,[{location,"lists.erl",432}]}.
    {func_info,{atom,lists},{atom,unzip3},1}.
  {label,112}.
    {move,nil,{x,2}}.
    {move,nil,{x,3}}.
    {move,nil,{x,1}}.
    {call_only,4,{f,114}}.


{function, unzip3, 4, 114}.
  {label,113}.
    {line,[{location,"lists.erl",434}]}.
    {func_info,{atom,lists},{atom,unzip3},4}.
  {label,114}.
    {test,is_nonempty_list,{f,115},[{x,0}]}.
    {get_list,{x,0},{x,4},{x,5}}.
    {test,is_tuple,{f,113},[{x,4}]}.
    {test,test_arity,{f,113},[{x,4},3]}.
    {test_heap,6,6}.
    {get_tuple_element,{x,4},0,{x,6}}.
    {get_tuple_element,{x,4},1,{x,7}}.
    {get_tuple_element,{x,4},2,{x,8}}.
    {put_list,{x,6},{x,1},{x,1}}.
    {put_list,{x,7},{x,2},{x,2}}.
    {put_list,{x,8},{x,3},{x,3}}.
    {move,{x,5},{x,0}}.
    {call_only,4,{f,114}}.
  {label,115}.
    {test,is_nil,{f,113},[{x,0}]}.
    {allocate,2,4}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{y,0}}.
    {move,{x,3},{y,1}}.
    {line,[{location,"lists.erl",437}]}.
    {call,1,{f,20}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{x,1},{y,0}}.
    {line,[{location,"lists.erl",437}]}.
    {call,1,{f,20}}.
    {move,{x,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {move,{x,1},{y,1}}.
    {line,[{location,"lists.erl",437}]}.
    {call,1,{f,20}}.
    {test_heap,4,1}.
    {put_tuple,3,{x,1}}.
    {put,{y,0}}.
    {put,{y,1}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,2}.
    return.


{function, zipwith, 3, 117}.
  {label,116}.
    {line,[{location,"lists.erl",451}]}.
    {func_info,{atom,lists},{atom,zipwith},3}.
  {label,117}.
    {test,is_nonempty_list,{f,118},[{x,1}]}.
    {get_list,{x,1},{x,3},{x,4}}.
    {test,is_nonempty_list,{f,116},[{x,2}]}.
    {allocate,3,5}.
    {get_list,{x,2},{x,1},{y,2}}.
    {move,{x,0},{x,2}}.
    {move,{x,3},{x,0}}.
    {move,{x,2},{y,0}}.
    {move,{x,4},{y,1}}.
    {line,[{location,"lists.erl",451}]}.
    {call_fun,2}.
    {move,{x,0},{x,3}}.
    {move,{y,1},{x,1}}.
    {move,{y,2},{x,2}}.
    {move,{y,0},{x,0}}.
    {move,{x,3},{y,2}}.
    {trim,2,1}.
    {line,[{location,"lists.erl",451}]}.
    {call,3,{f,117}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,118}.
    {test,is_nil,{f,116},[{x,1}]}.
    {test,is_nil,{f,116},[{x,2}]}.
    {test,is_function2,{f,116},[{x,0},{integer,2}]}.
    {move,nil,{x,0}}.
    return.


{function, zipwith3, 4, 120}.
  {label,119}.
    {line,[{location,"lists.erl",468}]}.
    {func_info,{atom,lists},{atom,zipwith3},4}.
  {label,120}.
    {test,is_nonempty_list,{f,121},[{x,1}]}.
    {get_list,{x,1},{x,4},{x,5}}.
    {test,is_nonempty_list,{f,119},[{x,2}]}.
    {get_list,{x,2},{x,6},{x,7}}.
    {test,is_nonempty_list,{f,119},[{x,3}]}.
    {allocate,4,8}.
    {get_list,{x,3},{x,2},{y,3}}.
    {move,{x,6},{x,1}}.
    {move,{x,0},{x,3}}.
    {move,{x,4},{x,0}}.
    {move,{x,3},{y,0}}.
    {move,{x,5},{y,1}}.
    {move,{x,7},{y,2}}.
    {line,[{location,"lists.erl",469}]}.
    {call_fun,3}.
    {move,{x,0},{x,4}}.
    {move,{y,2},{x,2}}.
    {move,{y,1},{x,1}}.
    {move,{y,3},{x,3}}.
    {move,{y,0},{x,0}}.
    {move,{x,4},{y,3}}.
    {trim,3,1}.
    {line,[{location,"lists.erl",469}]}.
    {call,4,{f,120}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,121}.
    {test,is_nil,{f,119},[{x,1}]}.
    {test,is_nil,{f,119},[{x,2}]}.
    {test,is_nil,{f,119},[{x,3}]}.
    {test,is_function2,{f,119},[{x,0},{integer,3}]}.
    {move,nil,{x,0}}.
    return.


{function, sort, 1, 123}.
  {label,122}.
    {line,[{location,"lists.erl",480}]}.
    {func_info,{atom,lists},{atom,sort},1}.
  {label,123}.
    {test,is_nonempty_list,{f,135},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_nonempty_list,{f,134},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {test,is_ge,{f,129},[{x,3},{x,1}]}.
    {test,is_nonempty_list,{f,126},[{x,4}]}.
    {get_list,{x,4},{x,2},{x,5}}.
    {test,is_nil,{f,127},[{x,5}]}.
    {test,is_ge,{f,124},[{x,2},{x,3}]}.
    return.
  {label,124}.
    {test,is_ge,{f,125},[{x,2},{x,1}]}.
    {test_heap,6,4}.
    {put_list,{x,3},nil,{x,0}}.
    {put_list,{x,2},{x,0},{x,2}}.
    {put_list,{x,1},{x,2},{x,0}}.
    return.
  {label,125}.
    {test_heap,6,4}.
    {put_list,{x,3},nil,{x,0}}.
    {put_list,{x,1},{x,0},{x,1}}.
    {put_list,{x,2},{x,1},{x,0}}.
    return.
  {label,126}.
    {test,is_nil,{f,127},[{x,4}]}.
    return.
  {label,127}.
    {test,is_eq,{f,128},[{x,1},{x,3}]}.
    {test_heap,2,5}.
    {put_list,{x,1},nil,{x,2}}.
    {move,{x,4},{x,1}}.
    {move,{x,3},{x,0}}.
    {call_only,3,{f,137}}.
  {label,128}.
    {move,{x,4},{x,2}}.
    {move,nil,{x,4}}.
    {move,{x,1},{x,0}}.
    {move,{x,3},{x,1}}.
    {move,nil,{x,3}}.
    {call_only,5,{f,428}}.
  {label,129}.
    {test,is_nonempty_list,{f,132},[{x,4}]}.
    {get_list,{x,4},{x,0},{x,2}}.
    {test,is_nil,{f,133},[{x,2}]}.
    {test,is_ge,{f,130},[{x,0},{x,1}]}.
    {test_heap,4,5}.
    {put_list,{x,1},{x,4},{x,1}}.
    {put_list,{x,3},{x,1},{x,0}}.
    return.
  {label,130}.
    {test,is_ge,{f,131},[{x,0},{x,3}]}.
    {test_heap,6,4}.
    {put_list,{x,1},nil,{x,1}}.
    {put_list,{x,0},{x,1},{x,1}}.
    {put_list,{x,3},{x,1},{x,0}}.
    return.
  {label,131}.
    {test_heap,6,4}.
    {put_list,{x,1},nil,{x,1}}.
    {put_list,{x,3},{x,1},{x,1}}.
    {put_list,{x,0},{x,1},{x,0}}.
    return.
  {label,132}.
    {test,is_nil,{f,133},[{x,4}]}.
    {test_heap,4,4}.
    {put_list,{x,1},nil,{x,1}}.
    {put_list,{x,3},{x,1},{x,0}}.
    return.
  {label,133}.
    {move,{x,4},{x,2}}.
    {move,nil,{x,4}}.
    {move,{x,1},{x,0}}.
    {move,{x,3},{x,1}}.
    {move,nil,{x,3}}.
    {call_only,5,{f,440}}.
  {label,134}.
    {test,is_nil,{f,122},[{x,2}]}.
    return.
  {label,135}.
    {test,is_nil,{f,122},[{x,0}]}.
    return.


{function, sort_1, 3, 137}.
  {label,136}.
    {line,[{location,"lists.erl",513}]}.
    {func_info,{atom,lists},{atom,sort_1},3}.
  {label,137}.
    {test,is_nonempty_list,{f,140},[{x,1}]}.
    {get_list,{x,1},{x,3},{x,4}}.
    {test,is_eq,{f,138},[{x,0},{x,3}]}.
    {test_heap,2,5}.
    {put_list,{x,0},{x,2},{x,2}}.
    {move,{x,4},{x,1}}.
    {move,{x,3},{x,0}}.
    {call_only,3,{f,137}}.
  {label,138}.
    {test,is_lt,{f,139},[{x,0},{x,3}]}.
    {move,{x,3},{x,1}}.
    {move,{x,2},{x,3}}.
    {move,{x,4},{x,2}}.
    {move,nil,{x,4}}.
    {call_only,5,{f,428}}.
  {label,139}.
    {move,{x,3},{x,1}}.
    {move,{x,2},{x,3}}.
    {move,{x,4},{x,2}}.
    {move,nil,{x,4}}.
    {call_only,5,{f,440}}.
  {label,140}.
    {test,is_nil,{f,136},[{x,1}]}.
    {test_heap,2,3}.
    {put_list,{x,0},nil,{x,1}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"lists.erl",520}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.


{function, merge, 1, 142}.
  {label,141}.
    {line,[{location,"lists.erl",531}]}.
    {func_info,{atom,lists},{atom,merge},1}.
  {label,142}.
    {move,nil,{x,1}}.
    {call_only,2,{f,452}}.


{function, merge3, 3, 144}.
  {label,143}.
    {line,[{location,"lists.erl",546}]}.
    {func_info,{atom,lists},{atom,merge3},3}.
  {label,144}.
    {test,is_nil,{f,145},[{x,1}]}.
    {move,{x,2},{x,1}}.
    {call_only,2,{f,152}}.
  {label,145}.
    {test,is_nil,{f,146},[{x,2}]}.
    {call_only,2,{f,152}}.
  {label,146}.
    {test,is_nonempty_list,{f,143},[{x,1}]}.
    {get_list,{x,1},{x,3},{x,4}}.
    {test,is_nonempty_list,{f,143},[{x,2}]}.
    {allocate,0,5}.
    {get_list,{x,2},{x,5},{x,6}}.
    {move,{x,3},{x,2}}.
    {move,{x,4},{x,3}}.
    {move,{x,5},{x,4}}.
    {move,{x,6},{x,5}}.
    {move,nil,{x,1}}.
    {line,[{location,"lists.erl",551}]}.
    {call,6,{f,467}}.
    {move,nil,{x,1}}.
    {line,[{location,"lists.erl",551}]}.
    {call_ext_last,2,{extfunc,lists,reverse,2},0}.


{function, rmerge3, 3, 148}.
  {label,147}.
    {line,[{location,"lists.erl",558}]}.
    {func_info,{atom,lists},{atom,rmerge3},3}.
  {label,148}.
    {test,is_nil,{f,149},[{x,1}]}.
    {move,{x,2},{x,1}}.
    {call_only,2,{f,155}}.
  {label,149}.
    {test,is_nil,{f,150},[{x,2}]}.
    {call_only,2,{f,155}}.
  {label,150}.
    {test,is_nonempty_list,{f,147},[{x,1}]}.
    {get_list,{x,1},{x,3},{x,4}}.
    {test,is_nonempty_list,{f,147},[{x,2}]}.
    {allocate,0,5}.
    {get_list,{x,2},{x,5},{x,6}}.
    {move,{x,3},{x,2}}.
    {move,{x,4},{x,3}}.
    {move,{x,5},{x,4}}.
    {move,{x,6},{x,5}}.
    {move,nil,{x,1}}.
    {line,[{location,"lists.erl",563}]}.
    {call,6,{f,489}}.
    {move,nil,{x,1}}.
    {line,[{location,"lists.erl",563}]}.
    {call_ext_last,2,{extfunc,lists,reverse,2},0}.


{function, merge, 2, 152}.
  {label,151}.
    {line,[{location,"lists.erl",575}]}.
    {func_info,{atom,lists},{atom,merge},2}.
  {label,152}.
    {test,is_nonempty_list,{f,153},[{x,1}]}.
    {allocate,0,2}.
    {get_list,{x,1},{x,1},{x,2}}.
    {move,nil,{x,3}}.
    {line,[{location,"lists.erl",578}]}.
    {call,4,{f,511}}.
    {move,nil,{x,1}}.
    {line,[{location,"lists.erl",578}]}.
    {call_ext_last,2,{extfunc,lists,reverse,2},0}.
  {label,153}.
    {test,is_nil,{f,151},[{x,1}]}.
    return.


{function, rmerge, 2, 155}.
  {label,154}.
    {line,[{location,"lists.erl",587}]}.
    {func_info,{atom,lists},{atom,rmerge},2}.
  {label,155}.
    {test,is_nonempty_list,{f,156},[{x,1}]}.
    {allocate,0,2}.
    {get_list,{x,1},{x,1},{x,2}}.
    {move,nil,{x,3}}.
    {line,[{location,"lists.erl",590}]}.
    {call,4,{f,519}}.
    {move,nil,{x,1}}.
    {line,[{location,"lists.erl",590}]}.
    {call_ext_last,2,{extfunc,lists,reverse,2},0}.
  {label,156}.
    {test,is_nil,{f,154},[{x,1}]}.
    return.


{function, concat, 1, 158}.
  {label,157}.
    {line,[{location,"lists.erl",600}]}.
    {func_info,{atom,lists},{atom,concat},1}.
  {label,158}.
    {allocate,1,1}.
    {move,{x,0},{y,0}}.
    {make_fun2,{f,1048},0,0,0}.
    {move,{y,0},{x,1}}.
    {call_last,2,{f,352},1}.


{function, thing_to_list, 1, 160}.
  {label,159}.
    {line,[{location,"lists.erl",603}]}.
    {func_info,{atom,lists},{atom,thing_to_list},1}.
  {label,160}.
    {test,is_integer,{f,161},[{x,0}]}.
    {line,[{location,"lists.erl",603}]}.
    {call_ext_only,1,{extfunc,erlang,integer_to_list,1}}.
  {label,161}.
    {test,is_float,{f,162},[{x,0}]}.
    {line,[{location,"lists.erl",604}]}.
    {call_ext_only,1,{extfunc,erlang,float_to_list,1}}.
  {label,162}.
    {test,is_atom,{f,163},[{x,0}]}.
    {line,[{location,"lists.erl",605}]}.
    {call_ext_only,1,{extfunc,erlang,atom_to_list,1}}.
  {label,163}.
    {test,is_list,{f,159},[{x,0}]}.
    return.


{function, flatten, 1, 165}.
  {label,164}.
    {line,[{location,"lists.erl",616}]}.
    {func_info,{atom,lists},{atom,flatten},1}.
  {label,165}.
    {test,is_list,{f,164},[{x,0}]}.
    {move,nil,{x,1}}.
    {call_only,2,{f,169}}.


{function, flatten, 2, 167}.
  {label,166}.
    {line,[{location,"lists.erl",624}]}.
    {func_info,{atom,lists},{atom,flatten},2}.
  {label,167}.
    {test,is_list,{f,166},[{x,0}]}.
    {test,is_list,{f,166},[{x,1}]}.
    {call_only,2,{f,169}}.


{function, do_flatten, 2, 169}.
  {label,168}.
    {line,[{location,"lists.erl",627}]}.
    {func_info,{atom,lists},{atom,do_flatten},2}.
  {label,169}.
    {test,is_nonempty_list,{f,171},[{x,0}]}.
    {get_list,{x,0},{x,2},{x,3}}.
    {test,is_list,{f,170},[{x,2}]}.
    {allocate,1,4}.
    {move,{x,3},{x,0}}.
    {move,{x,2},{y,0}}.
    {line,[{location,"lists.erl",628}]}.
    {call,2,{f,169}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,169},1}.
  {label,170}.
    {allocate,1,4}.
    {move,{x,3},{x,0}}.
    {move,{x,2},{y,0}}.
    {line,[{location,"lists.erl",630}]}.
    {call,2,{f,169}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,171}.
    {test,is_nil,{f,168},[{x,0}]}.
    {move,{x,1},{x,0}}.
    return.


{function, flatlength, 1, 173}.
  {label,172}.
    {line,[{location,"lists.erl",640}]}.
    {func_info,{atom,lists},{atom,flatlength},1}.
  {label,173}.
    {move,{integer,0},{x,1}}.
    {call_only,2,{f,175}}.


{function, flatlength, 2, 175}.
  {label,174}.
    {line,[{location,"lists.erl",643}]}.
    {func_info,{atom,lists},{atom,flatlength},2}.
  {label,175}.
    {test,is_nonempty_list,{f,177},[{x,0}]}.
    {get_list,{x,0},{x,2},{x,3}}.
    {test,is_list,{f,176},[{x,2}]}.
    {allocate,1,4}.
    {move,{x,3},{x,0}}.
    {move,{x,2},{y,0}}.
    {line,[{location,"lists.erl",644}]}.
    {call,2,{f,175}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,175},1}.
  {label,176}.
    {line,[{location,"lists.erl",646}]}.
    {gc_bif,'+',{f,0},4,[{x,1},{integer,1}],{x,1}}.
    {move,{x,3},{x,0}}.
    {call_only,2,{f,175}}.
  {label,177}.
    {test,is_nil,{f,174},[{x,0}]}.
    {move,{x,1},{x,0}}.
    return.


{function, keydelete, 3, 179}.
  {label,178}.
    {line,[{location,"lists.erl",687}]}.
    {func_info,{atom,lists},{atom,keydelete},3}.
  {label,179}.
    {test,is_integer,{f,178},[{x,1}]}.
    {test,is_lt,{f,178},[{integer,0},{x,1}]}.
    {call_only,3,{f,181}}.


{function, keydelete3, 3, 181}.
  {label,180}.
    {line,[{location,"lists.erl",690}]}.
    {func_info,{atom,lists},{atom,keydelete3},3}.
  {label,181}.
    {test,is_nonempty_list,{f,183},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {bif,element,{f,182},[{x,1},{x,3}],{x,5}}.
    {test,is_eq,{f,182},[{x,5},{x,0}]}.
    {move,{x,4},{x,0}}.
    return.
  {label,182}.
    {allocate,1,5}.
    {move,{x,4},{x,2}}.
    {move,{x,3},{y,0}}.
    {line,[{location,"lists.erl",692}]}.
    {call,3,{f,181}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,183}.
    {test,is_nil,{f,180},[{x,2}]}.
    {move,nil,{x,0}}.
    return.


{function, keyreplace, 4, 185}.
  {label,184}.
    {line,[{location,"lists.erl",703}]}.
    {func_info,{atom,lists},{atom,keyreplace},4}.
  {label,185}.
    {test,is_integer,{f,184},[{x,1}]}.
    {test,is_lt,{f,184},[{integer,0},{x,1}]}.
    {test,is_tuple,{f,184},[{x,3}]}.
    {call_only,4,{f,187}}.


{function, keyreplace3, 4, 187}.
  {label,186}.
    {line,[{location,"lists.erl",706}]}.
    {func_info,{atom,lists},{atom,keyreplace3},4}.
  {label,187}.
    {test,is_nonempty_list,{f,189},[{x,2}]}.
    {get_list,{x,2},{x,4},{x,5}}.
    {bif,element,{f,188},[{x,1},{x,4}],{x,6}}.
    {test,is_eq,{f,188},[{x,6},{x,0}]}.
    {test_heap,2,6}.
    {put_list,{x,3},{x,5},{x,0}}.
    return.
  {label,188}.
    {allocate,1,6}.
    {move,{x,5},{x,2}}.
    {move,{x,4},{y,0}}.
    {line,[{location,"lists.erl",709}]}.
    {call,4,{f,187}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,189}.
    {test,is_nil,{f,186},[{x,2}]}.
    {move,nil,{x,0}}.
    return.


{function, keytake, 3, 191}.
  {label,190}.
    {line,[{location,"lists.erl",719}]}.
    {func_info,{atom,lists},{atom,keytake},3}.
  {label,191}.
    {test,is_integer,{f,190},[{x,1}]}.
    {test,is_lt,{f,190},[{integer,0},{x,1}]}.
    {move,nil,{x,3}}.
    {call_only,4,{f,193}}.


{function, keytake, 4, 193}.
  {label,192}.
    {line,[{location,"lists.erl",722}]}.
    {func_info,{atom,lists},{atom,keytake},4}.
  {label,193}.
    {test,is_nonempty_list,{f,195},[{x,2}]}.
    {get_list,{x,2},{x,4},{x,5}}.
    {bif,element,{f,194},[{x,1},{x,4}],{x,6}}.
    {test,is_eq,{f,194},[{x,6},{x,0}]}.
    {allocate,1,6}.
    {move,{x,5},{x,1}}.
    {move,{x,3},{x,0}}.
    {move,{x,4},{y,0}}.
    {line,[{location,"lists.erl",723}]}.
    {call_ext,2,{extfunc,lists,reverse,2}}.
    {test_heap,4,1}.
    {put_tuple,3,{x,1}}.
    {put,{atom,value}}.
    {put,{y,0}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,1}.
    return.
  {label,194}.
    {test_heap,2,6}.
    {put_list,{x,4},{x,3},{x,3}}.
    {move,{x,5},{x,2}}.
    {call_only,4,{f,193}}.
  {label,195}.
    {test,is_nil,{f,192},[{x,2}]}.
    {move,{atom,false},{x,0}}.
    return.


{function, keystore, 4, 197}.
  {label,196}.
    {line,[{location,"lists.erl",736}]}.
    {func_info,{atom,lists},{atom,keystore},4}.
  {label,197}.
    {test,is_integer,{f,196},[{x,1}]}.
    {test,is_lt,{f,196},[{integer,0},{x,1}]}.
    {test,is_tuple,{f,196},[{x,3}]}.
    {call_only,4,{f,199}}.


{function, keystore2, 4, 199}.
  {label,198}.
    {line,[{location,"lists.erl",739}]}.
    {func_info,{atom,lists},{atom,keystore2},4}.
  {label,199}.
    {test,is_nonempty_list,{f,201},[{x,2}]}.
    {get_list,{x,2},{x,4},{x,5}}.
    {bif,element,{f,200},[{x,1},{x,4}],{x,6}}.
    {test,is_eq,{f,200},[{x,6},{x,0}]}.
    {test_heap,2,6}.
    {put_list,{x,3},{x,5},{x,0}}.
    return.
  {label,200}.
    {allocate,1,6}.
    {move,{x,5},{x,2}}.
    {move,{x,4},{y,0}}.
    {line,[{location,"lists.erl",742}]}.
    {call,4,{f,199}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,201}.
    {test,is_nil,{f,198},[{x,2}]}.
    {test_heap,2,4}.
    {put_list,{x,3},nil,{x,0}}.
    return.


{function, keysort, 2, 203}.
  {label,202}.
    {line,[{location,"lists.erl",752}]}.
    {func_info,{atom,lists},{atom,keysort},2}.
  {label,203}.
    {test,is_integer,{f,202},[{x,0}]}.
    {test,is_lt,{f,202},[{integer,0},{x,0}]}.
    {test,is_nonempty_list,{f,215},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,3}}.
    {test,is_nonempty_list,{f,214},[{x,3}]}.
    {get_list,{x,3},{x,4},{x,5}}.
    {line,[{location,"lists.erl",757}]}.
    {bif,element,{f,0},[{x,0},{x,2}],{x,3}}.
    {line,[{location,"lists.erl",757}]}.
    {bif,element,{f,0},[{x,0},{x,4}],{x,6}}.
    {test,is_ge,{f,209},[{x,6},{x,3}]}.
    {test,is_nonempty_list,{f,206},[{x,5}]}.
    {get_list,{x,5},{x,7},{x,8}}.
    {test,is_nil,{f,207},[{x,8}]}.
    {line,[{location,"lists.erl",763}]}.
    {bif,element,{f,0},[{x,0},{x,7}],{x,0}}.
    {test,is_ge,{f,204},[{x,0},{x,6}]}.
    {move,{x,1},{x,0}}.
    return.
  {label,204}.
    {test,is_ge,{f,205},[{x,0},{x,3}]}.
    {test_heap,6,8}.
    {put_list,{x,4},nil,{x,0}}.
    {put_list,{x,7},{x,0},{x,1}}.
    {put_list,{x,2},{x,1},{x,0}}.
    return.
  {label,205}.
    {test_heap,6,8}.
    {put_list,{x,4},nil,{x,0}}.
    {put_list,{x,2},{x,0},{x,1}}.
    {put_list,{x,7},{x,1},{x,0}}.
    return.
  {label,206}.
    {test,is_nil,{f,207},[{x,5}]}.
    {move,{x,1},{x,0}}.
    return.
  {label,207}.
    {test,is_eq,{f,208},[{x,2},{x,4}]}.
    {test_heap,2,7}.
    {put_list,{x,2},nil,{x,7}}.
    {move,{x,6},{x,2}}.
    {move,{x,5},{x,3}}.
    {move,{x,4},{x,1}}.
    {move,{x,7},{x,4}}.
    {call_only,5,{f,218}}.
  {label,208}.
    {move,nil,{x,7}}.
    {move,{x,2},{x,1}}.
    {move,{x,3},{x,2}}.
    {move,{x,4},{x,3}}.
    {move,{x,6},{x,4}}.
    {move,nil,{x,6}}.
    {call_only,8,{f,660}}.
  {label,209}.
    {test,is_nonempty_list,{f,212},[{x,5}]}.
    {get_list,{x,5},{x,1},{x,7}}.
    {test,is_nil,{f,213},[{x,7}]}.
    {line,[{location,"lists.erl",781}]}.
    {bif,element,{f,0},[{x,0},{x,1}],{x,0}}.
    {test,is_ge,{f,210},[{x,0},{x,3}]}.
    {test_heap,4,6}.
    {put_list,{x,2},{x,5},{x,1}}.
    {put_list,{x,4},{x,1},{x,0}}.
    return.
  {label,210}.
    {test,is_ge,{f,211},[{x,0},{x,6}]}.
    {test_heap,6,5}.
    {put_list,{x,2},nil,{x,0}}.
    {put_list,{x,1},{x,0},{x,1}}.
    {put_list,{x,4},{x,1},{x,0}}.
    return.
  {label,211}.
    {test_heap,6,5}.
    {put_list,{x,2},nil,{x,0}}.
    {put_list,{x,4},{x,0},{x,2}}.
    {put_list,{x,1},{x,2},{x,0}}.
    return.
  {label,212}.
    {test,is_nil,{f,213},[{x,5}]}.
    {test_heap,4,5}.
    {put_list,{x,2},nil,{x,1}}.
    {put_list,{x,4},{x,1},{x,0}}.
    return.
  {label,213}.
    {move,nil,{x,7}}.
    {move,{x,2},{x,1}}.
    {move,{x,3},{x,2}}.
    {move,{x,4},{x,3}}.
    {move,{x,6},{x,4}}.
    {move,nil,{x,6}}.
    {call_only,8,{f,672}}.
  {label,214}.
    {test,is_nil,{f,216},[{x,3}]}.
    {move,{x,1},{x,0}}.
    return.
  {label,215}.
    {test,is_nil,{f,216},[{x,1}]}.
    {move,{x,1},{x,0}}.
    return.
  {label,216}.
    {line,[{location,"lists.erl",753}]}.
    {case_end,{x,1}}.


{function, keysort_1, 5, 218}.
  {label,217}.
    {line,[{location,"lists.erl",795}]}.
    {func_info,{atom,lists},{atom,keysort_1},5}.
  {label,218}.
    {test,is_nonempty_list,{f,221},[{x,3}]}.
    {get_list,{x,3},{x,5},{x,6}}.
    {test,is_eq,{f,219},[{x,1},{x,5}]}.
    {test_heap,2,7}.
    {put_list,{x,1},{x,4},{x,4}}.
    {move,{x,6},{x,3}}.
    {move,{x,5},{x,1}}.
    {call_only,5,{f,218}}.
  {label,219}.
    {line,[{location,"lists.erl",798}]}.
    {bif,element,{f,0},[{x,0},{x,5}],{x,3}}.
    {test,is_ge,{f,220},[{x,3},{x,2}]}.
    {move,nil,{x,7}}.
    {move,{x,5},{x,8}}.
    {move,{x,6},{x,5}}.
    {move,{x,4},{x,6}}.
    {move,{x,3},{x,4}}.
    {move,{x,8},{x,3}}.
    {call_only,8,{f,660}}.
  {label,220}.
    {move,nil,{x,7}}.
    {move,{x,5},{x,8}}.
    {move,{x,6},{x,5}}.
    {move,{x,4},{x,6}}.
    {move,{x,3},{x,4}}.
    {move,{x,8},{x,3}}.
    {call_only,8,{f,672}}.
  {label,221}.
    {test,is_nil,{f,217},[{x,3}]}.
    {test_heap,2,5}.
    {put_list,{x,1},nil,{x,1}}.
    {move,{x,4},{x,0}}.
    {line,[{location,"lists.erl",805}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.


{function, keymerge, 3, 223}.
  {label,222}.
    {line,[{location,"lists.erl",816}]}.
    {func_info,{atom,lists},{atom,keymerge},3}.
  {label,223}.
    {test,is_integer,{f,222},[{x,0}]}.
    {test,is_lt,{f,222},[{integer,0},{x,0}]}.
    {allocate,0,3}.
    {test,is_nonempty_list,{f,224},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {line,[{location,"lists.erl",821}]}.
    {bif,element,{f,0},[{x,0},{x,3}],{x,2}}.
    {move,nil,{x,5}}.
    {line,[{location,"lists.erl",822}]}.
    {call,6,{f,743}}.
    {move,nil,{x,1}}.
    {line,[{location,"lists.erl",823}]}.
    {call_ext_last,2,{extfunc,lists,reverse,2},0}.
  {label,224}.
    {test,is_nil,{f,225},[{x,2}]}.
    {move,{x,1},{x,0}}.
    {deallocate,0}.
    return.
  {label,225}.
    {line,[{location,"lists.erl",817}]}.
    {case_end,{x,2}}.


{function, rkeymerge, 3, 227}.
  {label,226}.
    {line,[{location,"lists.erl",831}]}.
    {func_info,{atom,lists},{atom,rkeymerge},3}.
  {label,227}.
    {test,is_integer,{f,226},[{x,0}]}.
    {test,is_lt,{f,226},[{integer,0},{x,0}]}.
    {allocate,0,3}.
    {test,is_nonempty_list,{f,228},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {line,[{location,"lists.erl",836}]}.
    {bif,element,{f,0},[{x,0},{x,3}],{x,2}}.
    {move,nil,{x,5}}.
    {line,[{location,"lists.erl",837}]}.
    {call,6,{f,751}}.
    {move,nil,{x,1}}.
    {line,[{location,"lists.erl",838}]}.
    {call_ext_last,2,{extfunc,lists,reverse,2},0}.
  {label,228}.
    {test,is_nil,{f,229},[{x,2}]}.
    {move,{x,1},{x,0}}.
    {deallocate,0}.
    return.
  {label,229}.
    {line,[{location,"lists.erl",832}]}.
    {case_end,{x,2}}.


{function, ukeysort, 2, 231}.
  {label,230}.
    {line,[{location,"lists.erl",847}]}.
    {func_info,{atom,lists},{atom,ukeysort},2}.
  {label,231}.
    {test,is_integer,{f,230},[{x,0}]}.
    {test,is_lt,{f,230},[{integer,0},{x,0}]}.
    {test,is_nonempty_list,{f,247},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,3}}.
    {test,is_nonempty_list,{f,246},[{x,3}]}.
    {get_list,{x,3},{x,4},{x,5}}.
    {line,[{location,"lists.erl",852}]}.
    {bif,element,{f,0},[{x,0},{x,2}],{x,3}}.
    {line,[{location,"lists.erl",852}]}.
    {bif,element,{f,0},[{x,0},{x,4}],{x,6}}.
    {test,is_eq,{f,232},[{x,3},{x,6}]}.
    {move,{x,2},{x,1}}.
    {move,{x,3},{x,2}}.
    {move,{x,5},{x,3}}.
    {call_only,4,{f,250}}.
  {label,232}.
    {test,is_lt,{f,239},[{x,3},{x,6}]}.
    {test,is_nonempty_list,{f,237},[{x,5}]}.
    {get_list,{x,5},{x,7},{x,8}}.
    {test,is_nil,{f,238},[{x,8}]}.
    {line,[{location,"lists.erl",860}]}.
    {bif,element,{f,0},[{x,0},{x,7}],{x,0}}.
    {test,is_eq,{f,233},[{x,6},{x,0}]}.
    {test_heap,4,5}.
    {put_list,{x,4},nil,{x,1}}.
    {put_list,{x,2},{x,1},{x,0}}.
    return.
  {label,233}.
    {test,is_lt,{f,234},[{x,6},{x,0}]}.
    {test_heap,6,8}.
    {put_list,{x,7},nil,{x,0}}.
    {put_list,{x,4},{x,0},{x,1}}.
    {put_list,{x,2},{x,1},{x,0}}.
    return.
  {label,234}.
    {test,is_eq,{f,235},[{x,0},{x,3}]}.
    {test_heap,4,5}.
    {put_list,{x,4},nil,{x,1}}.
    {put_list,{x,2},{x,1},{x,0}}.
    return.
  {label,235}.
    {test,is_ge,{f,236},[{x,0},{x,3}]}.
    {test_heap,6,8}.
    {put_list,{x,4},nil,{x,0}}.
    {put_list,{x,7},{x,0},{x,1}}.
    {put_list,{x,2},{x,1},{x,0}}.
    return.
  {label,236}.
    {test_heap,6,8}.
    {put_list,{x,4},nil,{x,0}}.
    {put_list,{x,2},{x,0},{x,1}}.
    {put_list,{x,7},{x,1},{x,0}}.
    return.
  {label,237}.
    {test,is_nil,{f,238},[{x,5}]}.
    {move,{x,1},{x,0}}.
    return.
  {label,238}.
    {move,nil,{x,7}}.
    {move,{x,2},{x,1}}.
    {move,{x,3},{x,2}}.
    {move,{x,4},{x,3}}.
    {move,{x,6},{x,4}}.
    {move,nil,{x,6}}.
    {call_only,8,{f,759}}.
  {label,239}.
    {test,is_nonempty_list,{f,244},[{x,5}]}.
    {get_list,{x,5},{x,1},{x,7}}.
    {test,is_nil,{f,245},[{x,7}]}.
    {line,[{location,"lists.erl",880}]}.
    {bif,element,{f,0},[{x,0},{x,1}],{x,0}}.
    {test,is_eq,{f,240},[{x,3},{x,0}]}.
    {test_heap,4,5}.
    {put_list,{x,2},nil,{x,1}}.
    {put_list,{x,4},{x,1},{x,0}}.
    return.
  {label,240}.
    {test,is_lt,{f,241},[{x,3},{x,0}]}.
    {test_heap,6,5}.
    {put_list,{x,1},nil,{x,0}}.
    {put_list,{x,2},{x,0},{x,1}}.
    {put_list,{x,4},{x,1},{x,0}}.
    return.
  {label,241}.
    {test,is_eq,{f,242},[{x,6},{x,0}]}.
    {test_heap,4,5}.
    {put_list,{x,2},nil,{x,1}}.
    {put_list,{x,4},{x,1},{x,0}}.
    return.
  {label,242}.
    {test,is_ge,{f,243},[{x,0},{x,6}]}.
    {test_heap,6,5}.
    {put_list,{x,2},nil,{x,0}}.
    {put_list,{x,1},{x,0},{x,1}}.
    {put_list,{x,4},{x,1},{x,0}}.
    return.
  {label,243}.
    {test_heap,6,5}.
    {put_list,{x,2},nil,{x,0}}.
    {put_list,{x,4},{x,0},{x,2}}.
    {put_list,{x,1},{x,2},{x,0}}.
    return.
  {label,244}.
    {test,is_nil,{f,245},[{x,5}]}.
    {test_heap,4,5}.
    {put_list,{x,2},nil,{x,1}}.
    {put_list,{x,4},{x,1},{x,0}}.
    return.
  {label,245}.
    {test_heap,2,7}.
    {put_list,{x,2},nil,{x,7}}.
    {move,{x,6},{x,2}}.
    {move,{x,5},{x,3}}.
    {move,{x,4},{x,1}}.
    {move,{x,7},{x,4}}.
    {call_only,5,{f,776}}.
  {label,246}.
    {test,is_nil,{f,248},[{x,3}]}.
    {move,{x,1},{x,0}}.
    return.
  {label,247}.
    {test,is_nil,{f,248},[{x,1}]}.
    {move,{x,1},{x,0}}.
    return.
  {label,248}.
    {line,[{location,"lists.erl",848}]}.
    {case_end,{x,1}}.


{function, ukeysort_1, 4, 250}.
  {label,249}.
    {line,[{location,"lists.erl",898}]}.
    {func_info,{atom,lists},{atom,ukeysort_1},4}.
  {label,250}.
    {test,is_nonempty_list,{f,253},[{x,3}]}.
    {get_list,{x,3},{x,4},{x,5}}.
    {line,[{location,"lists.erl",899}]}.
    {bif,element,{f,0},[{x,0},{x,4}],{x,3}}.
    {test,is_eq,{f,251},[{x,2},{x,3}]}.
    {move,{x,5},{x,3}}.
    {call_only,4,{f,250}}.
  {label,251}.
    {test,is_lt,{f,252},[{x,2},{x,3}]}.
    {move,nil,{x,7}}.
    {move,nil,{x,6}}.
    {move,{x,4},{x,8}}.
    {move,{x,3},{x,4}}.
    {move,{x,8},{x,3}}.
    {call_only,8,{f,759}}.
  {label,252}.
    {test_heap,2,6}.
    {put_list,{x,1},nil,{x,6}}.
    {move,{x,3},{x,2}}.
    {move,{x,5},{x,3}}.
    {move,{x,4},{x,1}}.
    {move,{x,6},{x,4}}.
    {call_only,5,{f,776}}.
  {label,253}.
    {test,is_nil,{f,249},[{x,3}]}.
    {test_heap,2,2}.
    {put_list,{x,1},nil,{x,0}}.
    return.


{function, ukeymerge, 3, 255}.
  {label,254}.
    {line,[{location,"lists.erl",919}]}.
    {func_info,{atom,lists},{atom,ukeymerge},3}.
  {label,255}.
    {test,is_integer,{f,254},[{x,0}]}.
    {test,is_lt,{f,254},[{integer,0},{x,0}]}.
    {allocate,0,3}.
    {test,is_nonempty_list,{f,256},[{x,1}]}.
    {get_list,{x,1},{x,3},{x,6}}.
    {line,[{location,"lists.erl",924}]}.
    {bif,element,{f,0},[{x,0},{x,3}],{x,1}}.
    {move,nil,{x,5}}.
    {move,{x,2},{x,4}}.
    {move,{x,1},{x,2}}.
    {move,{x,6},{x,1}}.
    {line,[{location,"lists.erl",925}]}.
    {call,6,{f,856}}.
    {move,nil,{x,1}}.
    {line,[{location,"lists.erl",926}]}.
    {call_ext_last,2,{extfunc,lists,reverse,2},0}.
  {label,256}.
    {test,is_nil,{f,257},[{x,1}]}.
    {move,{x,2},{x,0}}.
    {deallocate,0}.
    return.
  {label,257}.
    {line,[{location,"lists.erl",920}]}.
    {case_end,{x,1}}.


{function, rukeymerge, 3, 259}.
  {label,258}.
    {line,[{location,"lists.erl",934}]}.
    {func_info,{atom,lists},{atom,rukeymerge},3}.
  {label,259}.
    {test,is_integer,{f,258},[{x,0}]}.
    {test,is_lt,{f,258},[{integer,0},{x,0}]}.
    {allocate,0,3}.
    {test,is_nonempty_list,{f,260},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {line,[{location,"lists.erl",939}]}.
    {bif,element,{f,0},[{x,0},{x,3}],{x,2}}.
    {move,{x,3},{x,5}}.
    {move,{x,4},{x,3}}.
    {move,nil,{x,4}}.
    {line,[{location,"lists.erl",940}]}.
    {call,6,{f,860}}.
    {move,nil,{x,1}}.
    {line,[{location,"lists.erl",941}]}.
    {call_ext_last,2,{extfunc,lists,reverse,2},0}.
  {label,260}.
    {test,is_nil,{f,261},[{x,2}]}.
    {move,{x,1},{x,0}}.
    {deallocate,0}.
    return.
  {label,261}.
    {line,[{location,"lists.erl",935}]}.
    {case_end,{x,2}}.


{function, keymap, 3, 263}.
  {label,262}.
    {line,[{location,"lists.erl",951}]}.
    {func_info,{atom,lists},{atom,keymap},3}.
  {label,263}.
    {test,is_nonempty_list,{f,264},[{x,2}]}.
    {allocate_zero,4,3}.
    {get_list,{x,2},{x,3},{y,3}}.
    {line,[{location,"lists.erl",952}]}.
    {bif,element,{f,0},[{x,1},{x,3}],{x,2}}.
    {move,{x,1},{y,1}}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,3},{y,0}}.
    {move,{x,1},{y,2}}.
    {line,[{location,"lists.erl",952}]}.
    {call_fun,1}.
    {move,{y,0},{x,1}}.
    {move,{x,0},{x,2}}.
    {trim,1,3}.
    {move,{y,0},{x,0}}.
    {line,[{location,"lists.erl",952}]}.
    {call_ext,3,{extfunc,erlang,setelement,3}}.
    {move,{x,0},{x,3}}.
    {move,{y,0},{x,1}}.
    {move,{y,2},{x,2}}.
    {move,{y,1},{x,0}}.
    {move,{x,3},{y,2}}.
    {trim,2,1}.
    {line,[{location,"lists.erl",952}]}.
    {call,3,{f,263}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,264}.
    {test,is_nil,{f,262},[{x,2}]}.
    {test,is_integer,{f,262},[{x,1}]}.
    {test,is_ge,{f,262},[{x,1},{integer,1}]}.
    {test,is_function2,{f,262},[{x,0},{integer,1}]}.
    {move,nil,{x,0}}.
    return.


{function, sort, 2, 266}.
  {label,265}.
    {line,[{location,"lists.erl",964}]}.
    {func_info,{atom,lists},{atom,sort},2}.
  {label,266}.
    {test,is_nonempty_list,{f,270},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,3}}.
    {test,is_nonempty_list,{f,269},[{x,3}]}.
    {allocate,4,4}.
    {get_list,{x,3},{x,1},{y,2}}.
    {move,{x,2},{x,3}}.
    {move,{x,0},{x,2}}.
    {move,{x,3},{x,0}}.
    {move,{x,2},{y,0}}.
    {move,{x,0},{y,1}}.
    {move,{x,1},{y,3}}.
    {line,[{location,"lists.erl",969}]}.
    {call_fun,2}.
    {test,is_atom,{f,271},[{x,0}]}.
    {select_val,{x,0},
                {f,271},
                {list,[{atom,true},{f,267},{atom,false},{f,268}]}}.
  {label,267}.
    {move,{y,2},{x,3}}.
    {move,{y,0},{x,2}}.
    {move,nil,{x,4}}.
    {move,{y,1},{x,1}}.
    {move,nil,{x,5}}.
    {move,{y,3},{x,0}}.
    {call_last,6,{f,870},4}.
  {label,268}.
    {move,{y,2},{x,3}}.
    {move,{y,0},{x,2}}.
    {move,nil,{x,4}}.
    {move,{y,1},{x,1}}.
    {move,nil,{x,5}}.
    {move,{y,3},{x,0}}.
    {call_last,6,{f,892},4}.
  {label,269}.
    {test,is_nil,{f,265},[{x,3}]}.
    {test,is_function2,{f,265},[{x,0},{integer,2}]}.
    {move,{x,1},{x,0}}.
    return.
  {label,270}.
    {test,is_nil,{f,265},[{x,1}]}.
    {test,is_function2,{f,265},[{x,0},{integer,2}]}.
    {move,nil,{x,0}}.
    return.
  {label,271}.
    {line,[{location,"lists.erl",969}]}.
    {case_end,{x,0}}.


{function, merge, 3, 273}.
  {label,272}.
    {line,[{location,"lists.erl",984}]}.
    {func_info,{atom,lists},{atom,merge},3}.
  {label,273}.
    {test,is_nonempty_list,{f,274},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {test,is_function2,{f,272},[{x,0},{integer,2}]}.
    {allocate,0,5}.
    {move,{x,0},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,3},{x,1}}.
    {move,{x,4},{x,3}}.
    {move,nil,{x,4}}.
    {line,[{location,"lists.erl",985}]}.
    {call,5,{f,925}}.
    {move,nil,{x,1}}.
    {line,[{location,"lists.erl",985}]}.
    {call_ext_last,2,{extfunc,lists,reverse,2},0}.
  {label,274}.
    {test,is_nil,{f,272},[{x,2}]}.
    {test,is_function2,{f,272},[{x,0},{integer,2}]}.
    {move,{x,1},{x,0}}.
    return.


{function, rmerge, 3, 276}.
  {label,275}.
    {line,[{location,"lists.erl",993}]}.
    {func_info,{atom,lists},{atom,rmerge},3}.
  {label,276}.
    {test,is_nonempty_list,{f,277},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {test,is_function2,{f,275},[{x,0},{integer,2}]}.
    {allocate,0,5}.
    {move,{x,0},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,3},{x,1}}.
    {move,{x,4},{x,3}}.
    {move,nil,{x,4}}.
    {line,[{location,"lists.erl",994}]}.
    {call,5,{f,937}}.
    {move,nil,{x,1}}.
    {line,[{location,"lists.erl",994}]}.
    {call_ext_last,2,{extfunc,lists,reverse,2},0}.
  {label,277}.
    {test,is_nil,{f,275},[{x,2}]}.
    {test,is_function2,{f,275},[{x,0},{integer,2}]}.
    {move,{x,1},{x,0}}.
    return.


{function, usort, 2, 279}.
  {label,278}.
    {line,[{location,"lists.erl",1004}]}.
    {func_info,{atom,lists},{atom,usort},2}.
  {label,279}.
    {test,is_nonempty_list,{f,281},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,3}}.
    {test,is_nil,{f,280},[{x,3}]}.
    {test,is_function2,{f,278},[{x,0},{integer,2}]}.
    {move,{x,1},{x,0}}.
    return.
  {label,280}.
    {test,is_function2,{f,278},[{x,0},{integer,2}]}.
    {move,{x,2},{x,1}}.
    {move,{x,3},{x,2}}.
    {call_only,3,{f,283}}.
  {label,281}.
    {test,is_nil,{f,278},[{x,1}]}.
    {test,is_function2,{f,278},[{x,0},{integer,2}]}.
    {move,{x,1},{x,0}}.
    return.


{function, usort_1, 3, 283}.
  {label,282}.
    {line,[{location,"lists.erl",1011}]}.
    {func_info,{atom,lists},{atom,usort_1},3}.
  {label,283}.
    {test,is_nonempty_list,{f,282},[{x,2}]}.
    {allocate,4,3}.
    {get_list,{x,2},{x,3},{y,2}}.
    {move,{x,0},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,3},{x,1}}.
    {move,{x,0},{y,0}}.
    {move,{x,2},{y,1}}.
    {move,{x,1},{y,3}}.
    {line,[{location,"lists.erl",1012}]}.
    {call_fun,2}.
    {test,is_atom,{f,290},[{x,0}]}.
    {select_val,{x,0},
                {f,290},
                {list,[{atom,false},{f,284},{atom,true},{f,285}]}}.
  {label,284}.
    {test_heap,2,0}.
    {put_list,{y,0},nil,{x,3}}.
    {move,{y,2},{x,1}}.
    {move,{y,1},{x,2}}.
    {move,{y,3},{x,0}}.
    {call_last,4,{f,983},4}.
  {label,285}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,2}}.
    {move,{y,3},{x,0}}.
    {line,[{location,"lists.erl",1014}]}.
    {call_fun,2}.
    {test,is_atom,{f,289},[{x,0}]}.
    {select_val,{x,0},
                {f,289},
                {list,[{atom,true},{f,286},{atom,false},{f,288}]}}.
  {label,286}.
    {test,is_nil,{f,287},[{y,2}]}.
    {test_heap,2,0}.
    {put_list,{y,0},nil,{x,0}}.
    {deallocate,4}.
    return.
  {label,287}.
    {move,{y,0},{x,1}}.
    {move,{y,2},{x,2}}.
    {move,{y,1},{x,0}}.
    {call_last,3,{f,283},4}.
  {label,288}.
    {move,{y,2},{x,3}}.
    {move,{y,1},{x,2}}.
    {move,nil,{x,4}}.
    {move,{y,0},{x,1}}.
    {move,nil,{x,5}}.
    {move,{y,3},{x,0}}.
    {call_last,6,{f,949},4}.
  {label,289}.
    {line,[{location,"lists.erl",1014}]}.
    {case_end,{x,0}}.
  {label,290}.
    {line,[{location,"lists.erl",1012}]}.
    {case_end,{x,0}}.


{function, umerge, 3, 292}.
  {label,291}.
    {line,[{location,"lists.erl",1037}]}.
    {func_info,{atom,lists},{atom,umerge},3}.
  {label,292}.
    {test,is_nonempty_list,{f,293},[{x,1}]}.
    {get_list,{x,1},{x,3},{x,4}}.
    {test,is_function2,{f,291},[{x,0},{integer,2}]}.
    {allocate,0,5}.
    {move,{x,4},{x,1}}.
    {move,nil,{x,4}}.
    {move,{x,3},{x,5}}.
    {move,{x,2},{x,3}}.
    {move,{x,0},{x,2}}.
    {move,{x,5},{x,0}}.
    {line,[{location,"lists.erl",1040}]}.
    {call,5,{f,1013}}.
    {move,nil,{x,1}}.
    {line,[{location,"lists.erl",1040}]}.
    {call_ext_last,2,{extfunc,lists,reverse,2},0}.
  {label,293}.
    {test,is_nil,{f,291},[{x,1}]}.
    {test,is_function2,{f,291},[{x,0},{integer,2}]}.
    {move,{x,2},{x,0}}.
    return.


{function, rumerge, 3, 295}.
  {label,294}.
    {line,[{location,"lists.erl",1046}]}.
    {func_info,{atom,lists},{atom,rumerge},3}.
  {label,295}.
    {test,is_nonempty_list,{f,296},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {test,is_function2,{f,294},[{x,0},{integer,2}]}.
    {allocate,0,5}.
    {move,{x,0},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,3},{x,1}}.
    {move,{x,4},{x,3}}.
    {move,nil,{x,4}}.
    {line,[{location,"lists.erl",1049}]}.
    {call,5,{f,1019}}.
    {move,nil,{x,1}}.
    {line,[{location,"lists.erl",1049}]}.
    {call_ext_last,2,{extfunc,lists,reverse,2},0}.
  {label,296}.
    {test,is_nil,{f,294},[{x,2}]}.
    {test,is_function2,{f,294},[{x,0},{integer,2}]}.
    {move,{x,1},{x,0}}.
    return.


{function, usort, 1, 298}.
  {label,297}.
    {line,[{location,"lists.erl",1059}]}.
    {func_info,{atom,lists},{atom,usort},1}.
  {label,298}.
    {test,is_nonempty_list,{f,314},[{x,0}]}.
    {get_list,{x,0},{x,1},{x,2}}.
    {test,is_nonempty_list,{f,313},[{x,2}]}.
    {get_list,{x,2},{x,3},{x,4}}.
    {test,is_lt,{f,305},[{x,1},{x,3}]}.
    {test,is_nonempty_list,{f,303},[{x,4}]}.
    {get_list,{x,4},{x,2},{x,5}}.
    {test,is_nil,{f,304},[{x,5}]}.
    {test,is_lt,{f,299},[{x,3},{x,2}]}.
    return.
  {label,299}.
    {test,is_eq,{f,300},[{x,3},{x,2}]}.
    {test_heap,4,4}.
    {put_list,{x,3},nil,{x,2}}.
    {put_list,{x,1},{x,2},{x,0}}.
    return.
  {label,300}.
    {test,is_lt,{f,301},[{x,2},{x,1}]}.
    {test_heap,6,4}.
    {put_list,{x,3},nil,{x,0}}.
    {put_list,{x,1},{x,0},{x,1}}.
    {put_list,{x,2},{x,1},{x,0}}.
    return.
  {label,301}.
    {test,is_eq,{f,302},[{x,2},{x,1}]}.
    {test_heap,4,4}.
    {put_list,{x,3},nil,{x,2}}.
    {put_list,{x,1},{x,2},{x,0}}.
    return.
  {label,302}.
    {test_heap,6,4}.
    {put_list,{x,3},nil,{x,0}}.
    {put_list,{x,2},{x,0},{x,2}}.
    {put_list,{x,1},{x,2},{x,0}}.
    return.
  {label,303}.
    {test,is_nil,{f,304},[{x,4}]}.
    return.
  {label,304}.
    {move,{x,4},{x,2}}.
    {move,nil,{x,4}}.
    {move,{x,1},{x,0}}.
    {move,{x,3},{x,1}}.
    {move,nil,{x,3}}.
    {call_only,5,{f,527}}.
  {label,305}.
    {test,is_lt,{f,312},[{x,3},{x,1}]}.
    {test,is_nonempty_list,{f,310},[{x,4}]}.
    {get_list,{x,4},{x,0},{x,2}}.
    {test,is_nil,{f,311},[{x,2}]}.
    {test,is_lt,{f,306},[{x,1},{x,0}]}.
    {test_heap,4,5}.
    {put_list,{x,1},{x,4},{x,1}}.
    {put_list,{x,3},{x,1},{x,0}}.
    return.
  {label,306}.
    {test,is_eq,{f,307},[{x,1},{x,0}]}.
    {test_heap,4,4}.
    {put_list,{x,1},nil,{x,1}}.
    {put_list,{x,3},{x,1},{x,0}}.
    return.
  {label,307}.
    {test,is_lt,{f,308},[{x,0},{x,3}]}.
    {test_heap,6,4}.
    {put_list,{x,1},nil,{x,1}}.
    {put_list,{x,3},{x,1},{x,1}}.
    {put_list,{x,0},{x,1},{x,0}}.
    return.
  {label,308}.
    {test,is_eq,{f,309},[{x,0},{x,3}]}.
    {test_heap,4,4}.
    {put_list,{x,1},nil,{x,1}}.
    {put_list,{x,3},{x,1},{x,0}}.
    return.
  {label,309}.
    {test_heap,6,4}.
    {put_list,{x,1},nil,{x,1}}.
    {put_list,{x,0},{x,1},{x,1}}.
    {put_list,{x,3},{x,1},{x,0}}.
    return.
  {label,310}.
    {test,is_nil,{f,311},[{x,4}]}.
    {test_heap,4,4}.
    {put_list,{x,1},nil,{x,1}}.
    {put_list,{x,3},{x,1},{x,0}}.
    return.
  {label,311}.
    {move,{x,4},{x,2}}.
    {move,nil,{x,4}}.
    {move,{x,1},{x,0}}.
    {move,{x,3},{x,1}}.
    {move,nil,{x,3}}.
    {call_only,5,{f,544}}.
  {label,312}.
    {move,{x,1},{x,0}}.
    {move,{x,4},{x,1}}.
    {call_only,2,{f,316}}.
  {label,313}.
    {test,is_nil,{f,297},[{x,2}]}.
    return.
  {label,314}.
    {test,is_nil,{f,297},[{x,0}]}.
    return.


{function, usort_1, 2, 316}.
  {label,315}.
    {line,[{location,"lists.erl",1100}]}.
    {func_info,{atom,lists},{atom,usort_1},2}.
  {label,316}.
    {test,is_nonempty_list,{f,319},[{x,1}]}.
    {get_list,{x,1},{x,2},{x,3}}.
    {test,is_eq,{f,317},[{x,0},{x,2}]}.
    {move,{x,3},{x,1}}.
    {call_only,2,{f,316}}.
  {label,317}.
    {test,is_lt,{f,318},[{x,0},{x,2}]}.
    {move,nil,{x,4}}.
    {move,{x,2},{x,1}}.
    {move,{x,3},{x,2}}.
    {move,nil,{x,3}}.
    {call_only,5,{f,527}}.
  {label,318}.
    {move,nil,{x,4}}.
    {move,{x,2},{x,1}}.
    {move,{x,3},{x,2}}.
    {move,nil,{x,3}}.
    {call_only,5,{f,544}}.
  {label,319}.
    {test,is_nil,{f,315},[{x,1}]}.
    {test_heap,2,1}.
    {put_list,{x,0},nil,{x,0}}.
    return.


{function, umerge, 1, 321}.
  {label,320}.
    {line,[{location,"lists.erl",1118}]}.
    {func_info,{atom,lists},{atom,umerge},1}.
  {label,321}.
    {call_only,1,{f,561}}.


{function, umerge3, 3, 323}.
  {label,322}.
    {line,[{location,"lists.erl",1134}]}.
    {func_info,{atom,lists},{atom,umerge3},3}.
  {label,323}.
    {test,is_nil,{f,324},[{x,1}]}.
    {move,{x,2},{x,1}}.
    {call_only,2,{f,331}}.
  {label,324}.
    {test,is_nil,{f,325},[{x,2}]}.
    {call_only,2,{f,331}}.
  {label,325}.
    {test,is_nonempty_list,{f,322},[{x,1}]}.
    {get_list,{x,1},{x,3},{x,4}}.
    {test,is_nonempty_list,{f,322},[{x,2}]}.
    {allocate_heap,0,2,5}.
    {get_list,{x,2},{x,5},{x,6}}.
    {put_list,{x,3},{x,5},{x,1}}.
    {move,{x,5},{x,7}}.
    {move,{x,6},{x,5}}.
    {move,{x,7},{x,6}}.
    {move,{x,4},{x,2}}.
    {move,nil,{x,4}}.
    {line,[{location,"lists.erl",1139}]}.
    {call,7,{f,582}}.
    {move,nil,{x,1}}.
    {line,[{location,"lists.erl",1139}]}.
    {call_ext_last,2,{extfunc,lists,reverse,2},0}.


{function, rumerge3, 3, 327}.
  {label,326}.
    {line,[{location,"lists.erl",1147}]}.
    {func_info,{atom,lists},{atom,rumerge3},3}.
  {label,327}.
    {test,is_nil,{f,328},[{x,1}]}.
    {move,{x,2},{x,1}}.
    {call_only,2,{f,334}}.
  {label,328}.
    {test,is_nil,{f,329},[{x,2}]}.
    {call_only,2,{f,334}}.
  {label,329}.
    {test,is_nonempty_list,{f,326},[{x,1}]}.
    {get_list,{x,1},{x,3},{x,4}}.
    {test,is_nonempty_list,{f,326},[{x,2}]}.
    {allocate,0,5}.
    {get_list,{x,2},{x,5},{x,6}}.
    {move,{x,3},{x,2}}.
    {move,nil,{x,3}}.
    {move,{x,4},{x,1}}.
    {move,{x,6},{x,4}}.
    {line,[{location,"lists.erl",1152}]}.
    {call,6,{f,612}}.
    {move,nil,{x,1}}.
    {line,[{location,"lists.erl",1152}]}.
    {call_ext_last,2,{extfunc,lists,reverse,2},0}.


{function, umerge, 2, 331}.
  {label,330}.
    {line,[{location,"lists.erl",1164}]}.
    {func_info,{atom,lists},{atom,umerge},2}.
  {label,331}.
    {test,is_nonempty_list,{f,332},[{x,0}]}.
    {allocate,0,2}.
    {get_list,{x,0},{x,3},{x,0}}.
    {move,nil,{x,2}}.
    {line,[{location,"lists.erl",1167}]}.
    {call,4,{f,646}}.
    {move,nil,{x,1}}.
    {line,[{location,"lists.erl",1167}]}.
    {call_ext_last,2,{extfunc,lists,reverse,2},0}.
  {label,332}.
    {test,is_nil,{f,330},[{x,0}]}.
    {move,{x,1},{x,0}}.
    return.


{function, rumerge, 2, 334}.
  {label,333}.
    {line,[{location,"lists.erl",1177}]}.
    {func_info,{atom,lists},{atom,rumerge},2}.
  {label,334}.
    {test,is_nonempty_list,{f,335},[{x,1}]}.
    {allocate,0,2}.
    {get_list,{x,1},{x,3},{x,1}}.
    {move,nil,{x,2}}.
    {line,[{location,"lists.erl",1180}]}.
    {call,4,{f,650}}.
    {move,nil,{x,1}}.
    {line,[{location,"lists.erl",1180}]}.
    {call_ext_last,2,{extfunc,lists,reverse,2},0}.
  {label,335}.
    {test,is_nil,{f,333},[{x,1}]}.
    return.


{function, all, 2, 337}.
  {label,336}.
    {line,[{location,"lists.erl",1212}]}.
    {func_info,{atom,lists},{atom,all},2}.
  {label,337}.
    {test,is_nonempty_list,{f,340},[{x,1}]}.
    {allocate,2,2}.
    {get_list,{x,1},{x,2},{y,1}}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,1},{y,0}}.
    {line,[{location,"lists.erl",1213}]}.
    {call_fun,1}.
    {test,is_atom,{f,341},[{x,0}]}.
    {select_val,{x,0},
                {f,341},
                {list,[{atom,true},{f,338},{atom,false},{f,339}]}}.
  {label,338}.
    {move,{y,1},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,337},2}.
  {label,339}.
    {deallocate,2}.
    return.
  {label,340}.
    {test,is_nil,{f,336},[{x,1}]}.
    {test,is_function2,{f,336},[{x,0},{integer,1}]}.
    {move,{atom,true},{x,0}}.
    return.
  {label,341}.
    {line,[{location,"lists.erl",1213}]}.
    {case_end,{x,0}}.


{function, any, 2, 343}.
  {label,342}.
    {line,[{location,"lists.erl",1224}]}.
    {func_info,{atom,lists},{atom,any},2}.
  {label,343}.
    {test,is_nonempty_list,{f,346},[{x,1}]}.
    {allocate,2,2}.
    {get_list,{x,1},{x,2},{y,1}}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,1},{y,0}}.
    {line,[{location,"lists.erl",1225}]}.
    {call_fun,1}.
    {test,is_atom,{f,347},[{x,0}]}.
    {select_val,{x,0},
                {f,347},
                {list,[{atom,false},{f,344},{atom,true},{f,345}]}}.
  {label,344}.
    {move,{y,1},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,343},2}.
  {label,345}.
    {deallocate,2}.
    return.
  {label,346}.
    {test,is_nil,{f,342},[{x,1}]}.
    {test,is_function2,{f,342},[{x,0},{integer,1}]}.
    {move,{atom,false},{x,0}}.
    return.
  {label,347}.
    {line,[{location,"lists.erl",1225}]}.
    {case_end,{x,0}}.


{function, map, 2, 349}.
  {label,348}.
    {line,[{location,"lists.erl",1238}]}.
    {func_info,{atom,lists},{atom,map},2}.
  {label,349}.
    {test,is_nonempty_list,{f,350},[{x,1}]}.
    {allocate,2,2}.
    {get_list,{x,1},{x,2},{y,1}}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,1},{y,0}}.
    {line,[{location,"lists.erl",1239}]}.
    {call_fun,1}.
    {move,{x,0},{x,2}}.
    {move,{y,1},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{x,2},{y,1}}.
    {trim,1,1}.
    {line,[{location,"lists.erl",1239}]}.
    {call,2,{f,349}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,350}.
    {test,is_nil,{f,348},[{x,1}]}.
    {test,is_function2,{f,348},[{x,0},{integer,1}]}.
    {move,nil,{x,0}}.
    return.


{function, flatmap, 2, 352}.
  {label,351}.
    {line,[{location,"lists.erl",1249}]}.
    {func_info,{atom,lists},{atom,flatmap},2}.
  {label,352}.
    {test,is_nonempty_list,{f,353},[{x,1}]}.
    {allocate,2,2}.
    {get_list,{x,1},{x,2},{y,1}}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,1},{y,0}}.
    {line,[{location,"lists.erl",1250}]}.
    {call_fun,1}.
    {move,{x,0},{x,2}}.
    {move,{y,1},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{x,2},{y,1}}.
    {trim,1,1}.
    {line,[{location,"lists.erl",1250}]}.
    {call,2,{f,352}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"lists.erl",1250}]}.
    {call_ext_last,2,{extfunc,erlang,'++',2},1}.
  {label,353}.
    {test,is_nil,{f,351},[{x,1}]}.
    {test,is_function2,{f,351},[{x,0},{integer,1}]}.
    {move,nil,{x,0}}.
    return.


{function, foldl, 3, 355}.
  {label,354}.
    {line,[{location,"lists.erl",1262}]}.
    {func_info,{atom,lists},{atom,foldl},3}.
  {label,355}.
    {test,is_nonempty_list,{f,356},[{x,2}]}.
    {allocate,2,3}.
    {get_list,{x,2},{x,3},{y,1}}.
    {move,{x,0},{x,2}}.
    {move,{x,3},{x,0}}.
    {move,{x,2},{y,0}}.
    {line,[{location,"lists.erl",1263}]}.
    {call_fun,2}.
    {move,{x,0},{x,1}}.
    {move,{y,1},{x,2}}.
    {move,{y,0},{x,0}}.
    {call_last,3,{f,355},2}.
  {label,356}.
    {test,is_nil,{f,354},[{x,2}]}.
    {test,is_function2,{f,354},[{x,0},{integer,2}]}.
    {move,{x,1},{x,0}}.
    return.


{function, foldr, 3, 358}.
  {label,357}.
    {line,[{location,"lists.erl",1275}]}.
    {func_info,{atom,lists},{atom,foldr},3}.
  {label,358}.
    {test,is_nonempty_list,{f,359},[{x,2}]}.
    {allocate,2,3}.
    {get_list,{x,2},{y,1},{x,2}}.
    {move,{x,0},{y,0}}.
    {line,[{location,"lists.erl",1276}]}.
    {call,3,{f,358}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,2}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"lists.erl",1276}]}.
    {call_fun,2}.
    {deallocate,2}.
    return.
  {label,359}.
    {test,is_nil,{f,357},[{x,2}]}.
    {test,is_function2,{f,357},[{x,0},{integer,2}]}.
    {move,{x,1},{x,0}}.
    return.


{function, filter, 2, 361}.
  {label,360}.
    {line,[{location,"lists.erl",1285}]}.
    {func_info,{atom,lists},{atom,filter},2}.
  {label,361}.
    {test,is_function2,{f,360},[{x,0},{integer,1}]}.
    {move,{x,1},{x,2}}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {call_only,2,{f,1041}}.


{function, partition, 2, 363}.
  {label,362}.
    {line,[{location,"lists.erl",1298}]}.
    {func_info,{atom,lists},{atom,partition},2}.
  {label,363}.
    {move,nil,{x,3}}.
    {move,nil,{x,2}}.
    {call_only,4,{f,365}}.


{function, partition, 4, 365}.
  {label,364}.
    {line,[{location,"lists.erl",1301}]}.
    {func_info,{atom,lists},{atom,partition},4}.
  {label,365}.
    {test,is_nonempty_list,{f,368},[{x,1}]}.
    {allocate,5,4}.
    {get_list,{x,1},{x,4},{y,3}}.
    {move,{x,0},{x,1}}.
    {move,{x,4},{x,0}}.
    {move,{x,3},{y,0}}.
    {move,{x,2},{y,1}}.
    {move,{x,1},{y,2}}.
    {move,{x,0},{y,4}}.
    {line,[{location,"lists.erl",1302}]}.
    {call_fun,1}.
    {test,is_atom,{f,369},[{x,0}]}.
    {select_val,{x,0},
                {f,369},
                {list,[{atom,false},{f,366},{atom,true},{f,367}]}}.
  {label,366}.
    {test_heap,2,0}.
    {put_list,{y,4},{y,0},{x,3}}.
    {move,{y,3},{x,1}}.
    {move,{y,1},{x,2}}.
    {move,{y,2},{x,0}}.
    {call_last,4,{f,365},5}.
  {label,367}.
    {test_heap,2,0}.
    {put_list,{y,4},{y,1},{x,2}}.
    {move,{y,3},{x,1}}.
    {move,{y,0},{x,3}}.
    {move,{y,2},{x,0}}.
    {call_last,4,{f,365},5}.
  {label,368}.
    {test,is_nil,{f,364},[{x,1}]}.
    {test,is_function2,{f,364},[{x,0},{integer,1}]}.
    {allocate,1,4}.
    {move,{x,2},{x,0}}.
    {move,{x,3},{y,0}}.
    {line,[{location,"lists.erl",1307}]}.
    {call,1,{f,20}}.
    {move,{x,0},{x,1}}.
    {move,{y,0},{x,0}}.
    {move,{x,1},{y,0}}.
    {line,[{location,"lists.erl",1307}]}.
    {call,1,{f,20}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{y,0}}.
    {put,{x,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,1}.
    return.
  {label,369}.
    {line,[{location,"lists.erl",1302}]}.
    {case_end,{x,0}}.


{function, filtermap, 2, 371}.
  {label,370}.
    {line,[{location,"lists.erl",1316}]}.
    {func_info,{atom,lists},{atom,filtermap},2}.
  {label,371}.
    {test,is_nonempty_list,{f,375},[{x,1}]}.
    {allocate,3,2}.
    {get_list,{x,1},{x,2},{y,1}}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,1},{y,0}}.
    {move,{x,0},{y,2}}.
    {line,[{location,"lists.erl",1317}]}.
    {call_fun,1}.
    {test,is_tuple,{f,372},[{x,0}]}.
    {test,test_arity,{f,376},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {test,is_eq_exact,{f,376},[{x,1},{atom,true}]}.
    {get_tuple_element,{x,0},1,{y,2}}.
    {move,{y,1},{x,1}}.
    {move,{y,0},{x,0}}.
    {trim,2,1}.
    {line,[{location,"lists.erl",1321}]}.
    {call,2,{f,371}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,372}.
    {test,is_atom,{f,376},[{x,0}]}.
    {select_val,{x,0},
                {f,376},
                {list,[{atom,false},{f,373},{atom,true},{f,374}]}}.
  {label,373}.
    {move,{y,1},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,371},3}.
  {label,374}.
    {move,{y,1},{x,1}}.
    {move,{y,0},{x,0}}.
    {trim,2,1}.
    {line,[{location,"lists.erl",1319}]}.
    {call,2,{f,371}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,375}.
    {test,is_nil,{f,370},[{x,1}]}.
    {test,is_function2,{f,370},[{x,0},{integer,1}]}.
    {move,nil,{x,0}}.
    return.
  {label,376}.
    {line,[{location,"lists.erl",1317}]}.
    {case_end,{x,0}}.


{function, zf, 2, 378}.
  {label,377}.
    {line,[{location,"lists.erl",1329}]}.
    {func_info,{atom,lists},{atom,zf},2}.
  {label,378}.
    {call_only,2,{f,371}}.


{function, foreach, 2, 380}.
  {label,379}.
    {line,[{location,"lists.erl",1337}]}.
    {func_info,{atom,lists},{atom,foreach},2}.
  {label,380}.
    {test,is_nonempty_list,{f,381},[{x,1}]}.
    {allocate,2,2}.
    {get_list,{x,1},{x,2},{y,1}}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,1},{y,0}}.
    {line,[{location,"lists.erl",1338}]}.
    {call_fun,1}.
    {move,{y,1},{x,1}}.
    {move,{y,0},{x,0}}.
    {call_last,2,{f,380},2}.
  {label,381}.
    {test,is_nil,{f,379},[{x,1}]}.
    {test,is_function2,{f,379},[{x,0},{integer,1}]}.
    {move,{atom,ok},{x,0}}.
    return.


{function, mapfoldl, 3, 383}.
  {label,382}.
    {line,[{location,"lists.erl",1353}]}.
    {func_info,{atom,lists},{atom,mapfoldl},3}.
  {label,383}.
    {test,is_nonempty_list,{f,384},[{x,2}]}.
    {allocate,2,3}.
    {get_list,{x,2},{x,3},{y,1}}.
    {move,{x,0},{x,2}}.
    {move,{x,3},{x,0}}.
    {move,{x,2},{y,0}}.
    {line,[{location,"lists.erl",1354}]}.
    {call_fun,2}.
    {test,is_tuple,{f,386},[{x,0}]}.
    {test,test_arity,{f,386},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,3}}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {move,{y,1},{x,2}}.
    {move,{y,0},{x,0}}.
    {move,{x,3},{y,1}}.
    {trim,1,1}.
    {line,[{location,"lists.erl",1355}]}.
    {call,3,{f,383}}.
    {test,is_tuple,{f,385},[{x,0}]}.
    {test,test_arity,{f,385},[{x,0},2]}.
    {test_heap,5,1}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {put_list,{y,0},{x,1},{x,1}}.
    {put_tuple,2,{x,0}}.
    {put,{x,1}}.
    {put,{x,2}}.
    {deallocate,1}.
    return.
  {label,384}.
    {test,is_nil,{f,382},[{x,2}]}.
    {test,is_function2,{f,382},[{x,0},{integer,2}]}.
    {test_heap,3,2}.
    {put_tuple,2,{x,0}}.
    {put,nil}.
    {put,{x,1}}.
    return.
  {label,385}.
    {line,[{location,"lists.erl",1355}]}.
    {badmatch,{x,0}}.
  {label,386}.
    {line,[{location,"lists.erl",1354}]}.
    {badmatch,{x,0}}.


{function, mapfoldr, 3, 388}.
  {label,387}.
    {line,[{location,"lists.erl",1370}]}.
    {func_info,{atom,lists},{atom,mapfoldr},3}.
  {label,388}.
    {test,is_nonempty_list,{f,389},[{x,2}]}.
    {allocate,2,3}.
    {get_list,{x,2},{y,1},{x,2}}.
    {move,{x,0},{y,0}}.
    {line,[{location,"lists.erl",1371}]}.
    {call,3,{f,388}}.
    {test,is_tuple,{f,391},[{x,0}]}.
    {test,test_arity,{f,391},[{x,0},2]}.
    {get_tuple_element,{x,0},0,{x,3}}.
    {get_tuple_element,{x,0},1,{x,1}}.
    {move,{y,0},{x,2}}.
    {move,{y,1},{x,0}}.
    {move,{x,3},{y,1}}.
    {trim,1,1}.
    {line,[{location,"lists.erl",1372}]}.
    {call_fun,2}.
    {test,is_tuple,{f,390},[{x,0}]}.
    {test,test_arity,{f,390},[{x,0},2]}.
    {test_heap,5,1}.
    {get_tuple_element,{x,0},0,{x,1}}.
    {get_tuple_element,{x,0},1,{x,2}}.
    {put_list,{x,1},{y,0},{x,1}}.
    {put_tuple,2,{x,0}}.
    {put,{x,1}}.
    {put,{x,2}}.
    {deallocate,1}.
    return.
  {label,389}.
    {test,is_nil,{f,387},[{x,2}]}.
    {test,is_function2,{f,387},[{x,0},{integer,2}]}.
    {test_heap,3,2}.
    {put_tuple,2,{x,0}}.
    {put,nil}.
    {put,{x,1}}.
    return.
  {label,390}.
    {line,[{location,"lists.erl",1372}]}.
    {badmatch,{x,0}}.
  {label,391}.
    {line,[{location,"lists.erl",1371}]}.
    {badmatch,{x,0}}.


{function, takewhile, 2, 393}.
  {label,392}.
    {line,[{location,"lists.erl",1382}]}.
    {func_info,{atom,lists},{atom,takewhile},2}.
  {label,393}.
    {test,is_nonempty_list,{f,396},[{x,1}]}.
    {allocate,3,2}.
    {get_list,{x,1},{x,2},{y,1}}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,1},{y,0}}.
    {move,{x,0},{y,2}}.
    {line,[{location,"lists.erl",1383}]}.
    {call_fun,1}.
    {test,is_atom,{f,397},[{x,0}]}.
    {select_val,{x,0},
                {f,397},
                {list,[{atom,true},{f,394},{atom,false},{f,395}]}}.
  {label,394}.
    {move,{y,1},{x,1}}.
    {move,{y,0},{x,0}}.
    {trim,2,1}.
    {line,[{location,"lists.erl",1384}]}.
    {call,2,{f,393}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,395}.
    {move,nil,{x,0}}.
    {deallocate,3}.
    return.
  {label,396}.
    {test,is_nil,{f,392},[{x,1}]}.
    {test,is_function2,{f,392},[{x,0},{integer,1}]}.
    {move,nil,{x,0}}.
    return.
  {label,397}.
    {line,[{location,"lists.erl",1383}]}.
    {case_end,{x,0}}.


{function, dropwhile, 2, 399}.
  {label,398}.
    {line,[{location,"lists.erl",1395}]}.
    {func_info,{atom,lists},{atom,dropwhile},2}.
  {label,399}.
    {test,is_nonempty_list,{f,402},[{x,1}]}.
    {allocate,3,2}.
    {get_list,{x,1},{x,2},{y,2}}.
    {move,{x,1},{y,0}}.
    {move,{x,0},{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,1},{y,1}}.
    {line,[{location,"lists.erl",1396}]}.
    {call_fun,1}.
    {test,is_atom,{f,403},[{x,0}]}.
    {select_val,{x,0},
                {f,403},
                {list,[{atom,false},{f,400},{atom,true},{f,401}]}}.
  {label,400}.
    {move,{y,0},{x,0}}.
    {deallocate,3}.
    return.
  {label,401}.
    {move,{y,2},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,2,{f,399},3}.
  {label,402}.
    {test,is_nil,{f,398},[{x,1}]}.
    {test,is_function2,{f,398},[{x,0},{integer,1}]}.
    {move,nil,{x,0}}.
    return.
  {label,403}.
    {line,[{location,"lists.erl",1396}]}.
    {case_end,{x,0}}.


{function, splitwith, 2, 405}.
  {label,404}.
    {line,[{location,"lists.erl",1409}]}.
    {func_info,{atom,lists},{atom,splitwith},2}.
  {label,405}.
    {test,is_function2,{f,404},[{x,0},{integer,1}]}.
    {move,nil,{x,2}}.
    {call_only,3,{f,407}}.


{function, splitwith, 3, 407}.
  {label,406}.
    {line,[{location,"lists.erl",1412}]}.
    {func_info,{atom,lists},{atom,splitwith},3}.
  {label,407}.
    {test,is_nonempty_list,{f,410},[{x,1}]}.
    {allocate,4,3}.
    {get_list,{x,1},{x,3},{y,2}}.
    {move,{x,0},{x,1}}.
    {move,{x,3},{x,0}}.
    {move,{x,2},{y,0}}.
    {move,{x,1},{y,1}}.
    {move,{x,0},{y,3}}.
    {line,[{location,"lists.erl",1413}]}.
    {call_fun,1}.
    {test,is_atom,{f,411},[{x,0}]}.
    {select_val,{x,0},
                {f,411},
                {list,[{atom,true},{f,408},{atom,false},{f,409}]}}.
  {label,408}.
    {test_heap,2,0}.
    {put_list,{y,3},{y,0},{x,2}}.
    {move,{y,2},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,3,{f,407},4}.
  {label,409}.
    {move,{y,0},{x,0}}.
    {trim,2,2}.
    {line,[{location,"lists.erl",1415}]}.
    {call,1,{f,20}}.
    {test_heap,5,1}.
    {put_list,{y,1},{y,0},{x,1}}.
    {put_tuple,2,{x,2}}.
    {put,{x,0}}.
    {put,{x,1}}.
    {move,{x,2},{x,0}}.
    {deallocate,2}.
    return.
  {label,410}.
    {test,is_nil,{f,406},[{x,1}]}.
    {test,is_function2,{f,406},[{x,0},{integer,1}]}.
    {allocate,0,3}.
    {move,{x,2},{x,0}}.
    {line,[{location,"lists.erl",1418}]}.
    {call,1,{f,20}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{x,0}}.
    {put,nil}.
    {move,{x,1},{x,0}}.
    {deallocate,0}.
    return.
  {label,411}.
    {line,[{location,"lists.erl",1413}]}.
    {case_end,{x,0}}.


{function, split, 2, 413}.
  {label,412}.
    {line,[{location,"lists.erl",1427}]}.
    {func_info,{atom,lists},{atom,split},2}.
  {label,413}.
    {test,is_integer,{f,416},[{x,0}]}.
    {test,is_ge,{f,416},[{x,0},{integer,0}]}.
    {test,is_list,{f,416},[{x,1}]}.
    {allocate,2,2}.
    {move,nil,{x,2}}.
    {move,{x,1},{y,0}}.
    {move,{x,0},{y,1}}.
    {line,[{location,"lists.erl",1428}]}.
    {call,3,{f,418}}.
    {test,is_tuple,{f,414},[{x,0}]}.
    {test,test_arity,{f,414},[{x,0},2]}.
    {deallocate,2}.
    return.
  {label,414}.
    {test,is_atom,{f,415},[{x,0}]}.
    {test_heap,4,1}.
    {put_list,{y,0},nil,{x,2}}.
    {put_list,{y,1},{x,2},{x,1}}.
    {line,[{location,"lists.erl",1431}]}.
    {call_ext,2,{extfunc,erlang,error,2}}.
  {label,415}.
    {line,[{location,"lists.erl",1428}]}.
    {case_end,{x,0}}.
  {label,416}.
    {test_heap,4,2}.
    {put_list,{x,1},nil,{x,2}}.
    {put_list,{x,0},{x,2},{x,1}}.
    {move,{atom,badarg},{x,0}}.
    {line,[{location,"lists.erl",1434}]}.
    {call_ext,2,{extfunc,erlang,error,2}}.


{function, split, 3, 418}.
  {label,417}.
    {line,[{location,"lists.erl",1436}]}.
    {func_info,{atom,lists},{atom,split},3}.
  {label,418}.
    {test,is_eq_exact,{f,419},[{x,0},{integer,0}]}.
    {allocate,1,3}.
    {move,{x,1},{y,0}}.
    {move,nil,{x,1}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"lists.erl",1437}]}.
    {call_ext,2,{extfunc,lists,reverse,2}}.
    {test_heap,3,1}.
    {put_tuple,2,{x,1}}.
    {put,{x,0}}.
    {put,{y,0}}.
    {move,{x,1},{x,0}}.
    {deallocate,1}.
    return.
  {label,419}.
    {test,is_nonempty_list,{f,420},[{x,1}]}.
    {get_list,{x,1},{x,3},{x,4}}.
    {line,[{location,"lists.erl",1439}]}.
    {gc_bif,'-',{f,0},5,[{x,0},{integer,1}],{x,0}}.
    {test_heap,2,5}.
    {put_list,{x,3},{x,2},{x,2}}.
    {move,{x,4},{x,1}}.
    {call_only,3,{f,418}}.
  {label,420}.
    {test,is_nil,{f,417},[{x,1}]}.
    {move,{atom,badarg},{x,0}}.
    return.


{function, join, 2, 422}.
  {label,421}.
    {line,[{location,"lists.erl",1449}]}.
    {func_info,{atom,lists},{atom,join},2}.
  {label,422}.
    {test,is_nonempty_list,{f,423},[{x,1}]}.
    {allocate,1,2}.
    {get_list,{x,1},{y,0},{x,1}}.
    {line,[{location,"lists.erl",1450}]}.
    {call,2,{f,425}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,423}.
    {test,is_nil,{f,421},[{x,1}]}.
    {move,nil,{x,0}}.
    return.


{function, join_prepend, 2, 425}.
  {label,424}.
    {line,[{location,"lists.erl",1452}]}.
    {func_info,{atom,lists},{atom,join_prepend},2}.
  {label,425}.
    {test,is_nonempty_list,{f,426},[{x,1}]}.
    {allocate,2,2}.
    {get_list,{x,1},{y,0},{x,1}}.
    {move,{x,0},{y,1}}.
    {line,[{location,"lists.erl",1453}]}.
    {call,2,{f,425}}.
    {test_heap,4,1}.
    {put_list,{y,0},{x,0},{x,1}}.
    {put_list,{y,1},{x,1},{x,0}}.
    {deallocate,2}.
    return.
  {label,426}.
    {test,is_nil,{f,424},[{x,1}]}.
    {move,nil,{x,0}}.
    return.


{function, split_1, 5, 428}.
  {label,427}.
    {line,[{location,"lists.erl",1482}]}.
    {func_info,{atom,lists},{atom,split_1},5}.
  {label,428}.
    {test,is_nonempty_list,{f,432},[{x,2}]}.
    {get_list,{x,2},{x,5},{x,6}}.
    {test,is_ge,{f,429},[{x,5},{x,1}]}.
    {test_heap,2,7}.
    {put_list,{x,0},{x,3},{x,3}}.
    {move,{x,6},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,5},{x,1}}.
    {call_only,5,{f,428}}.
  {label,429}.
    {test,is_ge,{f,430},[{x,5},{x,0}]}.
    {test_heap,2,7}.
    {put_list,{x,0},{x,3},{x,3}}.
    {move,{x,6},{x,2}}.
    {move,{x,5},{x,0}}.
    {call_only,5,{f,428}}.
  {label,430}.
    {test,is_nil,{f,431},[{x,3}]}.
    {test_heap,2,7}.
    {put_list,{x,5},nil,{x,3}}.
    {move,{x,6},{x,2}}.
    {call_only,5,{f,428}}.
  {label,431}.
    {move,{x,6},{x,2}}.
    {call_only,6,{f,434}}.
  {label,432}.
    {test,is_nil,{f,427},[{x,2}]}.
    {test_heap,6,5}.
    {put_list,{x,0},{x,3},{x,0}}.
    {put_list,{x,1},{x,0},{x,2}}.
    {put_list,{x,2},{x,4},{x,0}}.
    {move,nil,{x,1}}.
    {call_only,2,{f,462}}.


{function, split_1_1, 6, 434}.
  {label,433}.
    {line,[{location,"lists.erl",1493}]}.
    {func_info,{atom,lists},{atom,split_1_1},6}.
  {label,434}.
    {test,is_nonempty_list,{f,438},[{x,2}]}.
    {get_list,{x,2},{x,6},{x,7}}.
    {test,is_ge,{f,435},[{x,6},{x,1}]}.
    {test_heap,2,8}.
    {put_list,{x,0},{x,3},{x,3}}.
    {move,{x,7},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,6},{x,1}}.
    {call_only,6,{f,434}}.
  {label,435}.
    {test,is_ge,{f,436},[{x,6},{x,0}]}.
    {test_heap,2,8}.
    {put_list,{x,0},{x,3},{x,3}}.
    {move,{x,7},{x,2}}.
    {move,{x,6},{x,0}}.
    {call_only,6,{f,434}}.
  {label,436}.
    {test,is_ge,{f,437},[{x,6},{x,5}]}.
    {test_heap,6,8}.
    {put_list,{x,0},{x,3},{x,8}}.
    {put_list,{x,1},{x,8},{x,8}}.
    {put_list,{x,8},{x,4},{x,4}}.
    {move,{x,7},{x,2}}.
    {move,{x,6},{x,1}}.
    {move,nil,{x,3}}.
    {move,{x,5},{x,0}}.
    {call_only,5,{f,428}}.
  {label,437}.
    {test_heap,6,8}.
    {put_list,{x,0},{x,3},{x,8}}.
    {put_list,{x,1},{x,8},{x,8}}.
    {put_list,{x,8},{x,4},{x,4}}.
    {move,{x,7},{x,2}}.
    {move,{x,5},{x,1}}.
    {move,nil,{x,3}}.
    {move,{x,6},{x,0}}.
    {call_only,5,{f,428}}.
  {label,438}.
    {test,is_nil,{f,433},[{x,2}]}.
    {test_heap,10,6}.
    {put_list,{x,0},{x,3},{x,0}}.
    {put_list,{x,1},{x,0},{x,0}}.
    {put_list,{x,0},{x,4},{x,2}}.
    {put_list,{x,5},nil,{x,3}}.
    {put_list,{x,3},{x,2},{x,0}}.
    {move,nil,{x,1}}.
    {call_only,2,{f,462}}.


{function, split_2, 5, 440}.
  {label,439}.
    {line,[{location,"lists.erl",1505}]}.
    {func_info,{atom,lists},{atom,split_2},5}.
  {label,440}.
    {test,is_nonempty_list,{f,444},[{x,2}]}.
    {get_list,{x,2},{x,5},{x,6}}.
    {test,is_ge,{f,441},[{x,1},{x,5}]}.
    {test_heap,2,7}.
    {put_list,{x,0},{x,3},{x,3}}.
    {move,{x,6},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,5},{x,1}}.
    {call_only,5,{f,440}}.
  {label,441}.
    {test,is_ge,{f,442},[{x,0},{x,5}]}.
    {test_heap,2,7}.
    {put_list,{x,0},{x,3},{x,3}}.
    {move,{x,6},{x,2}}.
    {move,{x,5},{x,0}}.
    {call_only,5,{f,440}}.
  {label,442}.
    {test,is_nil,{f,443},[{x,3}]}.
    {test_heap,2,7}.
    {put_list,{x,5},nil,{x,3}}.
    {move,{x,6},{x,2}}.
    {call_only,5,{f,440}}.
  {label,443}.
    {move,{x,6},{x,2}}.
    {call_only,6,{f,446}}.
  {label,444}.
    {test,is_nil,{f,439},[{x,2}]}.
    {test_heap,6,5}.
    {put_list,{x,0},{x,3},{x,0}}.
    {put_list,{x,1},{x,0},{x,2}}.
    {put_list,{x,2},{x,4},{x,0}}.
    {move,nil,{x,1}}.
    {call_only,2,{f,452}}.


{function, split_2_1, 6, 446}.
  {label,445}.
    {line,[{location,"lists.erl",1516}]}.
    {func_info,{atom,lists},{atom,split_2_1},6}.
  {label,446}.
    {test,is_nonempty_list,{f,450},[{x,2}]}.
    {get_list,{x,2},{x,6},{x,7}}.
    {test,is_ge,{f,447},[{x,1},{x,6}]}.
    {test_heap,2,8}.
    {put_list,{x,0},{x,3},{x,3}}.
    {move,{x,7},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,6},{x,1}}.
    {call_only,6,{f,446}}.
  {label,447}.
    {test,is_ge,{f,448},[{x,0},{x,6}]}.
    {test_heap,2,8}.
    {put_list,{x,0},{x,3},{x,3}}.
    {move,{x,7},{x,2}}.
    {move,{x,6},{x,0}}.
    {call_only,6,{f,446}}.
  {label,448}.
    {test,is_lt,{f,449},[{x,6},{x,5}]}.
    {test_heap,6,8}.
    {put_list,{x,0},{x,3},{x,8}}.
    {put_list,{x,1},{x,8},{x,8}}.
    {put_list,{x,8},{x,4},{x,4}}.
    {move,{x,7},{x,2}}.
    {move,{x,6},{x,1}}.
    {move,nil,{x,3}}.
    {move,{x,5},{x,0}}.
    {call_only,5,{f,440}}.
  {label,449}.
    {test_heap,6,8}.
    {put_list,{x,0},{x,3},{x,8}}.
    {put_list,{x,1},{x,8},{x,8}}.
    {put_list,{x,8},{x,4},{x,4}}.
    {move,{x,7},{x,2}}.
    {move,{x,5},{x,1}}.
    {move,nil,{x,3}}.
    {move,{x,6},{x,0}}.
    {call_only,5,{f,440}}.
  {label,450}.
    {test,is_nil,{f,445},[{x,2}]}.
    {test_heap,10,6}.
    {put_list,{x,0},{x,3},{x,0}}.
    {put_list,{x,1},{x,0},{x,0}}.
    {put_list,{x,0},{x,4},{x,2}}.
    {put_list,{x,5},nil,{x,3}}.
    {put_list,{x,3},{x,2},{x,0}}.
    {move,nil,{x,1}}.
    {call_only,2,{f,452}}.


{function, mergel, 2, 452}.
  {label,451}.
    {line,[{location,"lists.erl",1529}]}.
    {func_info,{atom,lists},{atom,mergel},2}.
  {label,452}.
    {test,is_nonempty_list,{f,459},[{x,0}]}.
    {get_list,{x,0},{x,2},{x,3}}.
    {test,is_nil,{f,453},[{x,2}]}.
    {move,{x,3},{x,0}}.
    {call_only,2,{f,452}}.
  {label,453}.
    {test,is_nonempty_list,{f,457},[{x,3}]}.
    {get_list,{x,3},{x,4},{x,5}}.
    {test,is_nonempty_list,{f,455},[{x,4}]}.
    {get_list,{x,4},{x,6},{x,7}}.
    {test,is_nonempty_list,{f,454},[{x,5}]}.
    {get_list,{x,5},{x,8},{x,9}}.
    {test,is_nonempty_list,{f,456},[{x,8}]}.
    {allocate,2,10}.
    {get_list,{x,8},{x,4},{x,5}}.
    {move,{x,1},{y,0}}.
    {move,{x,7},{x,3}}.
    {move,nil,{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,6},{x,2}}.
    {move,{x,9},{y,1}}.
    {line,[{location,"lists.erl",1532}]}.
    {call,6,{f,467}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,2,{f,452},2}.
  {label,454}.
    {test,is_nil,{f,456},[{x,5}]}.
    {allocate,1,8}.
    {move,{x,1},{y,0}}.
    {move,{x,6},{x,1}}.
    {move,nil,{x,3}}.
    {move,{x,2},{x,0}}.
    {move,{x,7},{x,2}}.
    {line,[{location,"lists.erl",1534}]}.
    {call,4,{f,511}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,0}}.
    {move,nil,{x,1}}.
    {call_last,2,{f,462},1}.
  {label,455}.
    {test,is_nil,{f,456},[{x,4}]}.
    {test_heap,2,6}.
    {put_list,{x,2},{x,5},{x,0}}.
    {call_only,2,{f,452}}.
  {label,456}.
    {test,is_nonempty_list,{f,451},[{x,5}]}.
    {get_list,{x,5},{x,6},{x,7}}.
    {test,is_nil,{f,451},[{x,6}]}.
    {test_heap,4,8}.
    {put_list,{x,4},{x,7},{x,3}}.
    {put_list,{x,2},{x,3},{x,0}}.
    {call_only,2,{f,452}}.
  {label,457}.
    {test,is_nil,{f,451},[{x,3}]}.
    {test,is_nil,{f,458},[{x,1}]}.
    {move,{x,2},{x,0}}.
    return.
  {label,458}.
    {allocate,1,3}.
    {move,{x,1},{y,0}}.
    {move,nil,{x,1}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"lists.erl",1538}]}.
    {call_ext,2,{extfunc,lists,reverse,2}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,0}}.
    {move,nil,{x,1}}.
    {call_last,2,{f,462},1}.
  {label,459}.
    {test,is_nil,{f,451},[{x,0}]}.
    {test,is_nil,{f,460},[{x,1}]}.
    {move,nil,{x,0}}.
    return.
  {label,460}.
    {move,{x,1},{x,0}}.
    {move,nil,{x,1}}.
    {call_only,2,{f,462}}.


{function, rmergel, 2, 462}.
  {label,461}.
    {line,[{location,"lists.erl",1548}]}.
    {func_info,{atom,lists},{atom,rmergel},2}.
  {label,462}.
    {test,is_nonempty_list,{f,465},[{x,0}]}.
    {get_list,{x,0},{x,2},{x,3}}.
    {test,is_nonempty_list,{f,464},[{x,2}]}.
    {get_list,{x,2},{x,4},{x,5}}.
    {test,is_nonempty_list,{f,464},[{x,3}]}.
    {get_list,{x,3},{x,6},{x,7}}.
    {test,is_nonempty_list,{f,463},[{x,6}]}.
    {get_list,{x,6},{x,8},{x,9}}.
    {test,is_nonempty_list,{f,463},[{x,7}]}.
    {allocate,2,10}.
    {get_list,{x,7},{x,0},{y,1}}.
    {move,{x,1},{y,0}}.
    {move,{x,8},{x,2}}.
    {move,nil,{x,1}}.
    {move,{x,9},{x,3}}.
    {line,[{location,"lists.erl",1549}]}.
    {call,6,{f,489}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,2,{f,462},2}.
  {label,463}.
    {test,is_nil,{f,464},[{x,7}]}.
    {allocate,1,7}.
    {move,{x,1},{y,0}}.
    {move,{x,5},{x,2}}.
    {move,{x,4},{x,1}}.
    {move,nil,{x,3}}.
    {move,{x,6},{x,0}}.
    {line,[{location,"lists.erl",1551}]}.
    {call,4,{f,519}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,0}}.
    {move,nil,{x,1}}.
    {call_last,2,{f,452},1}.
  {label,464}.
    {test,is_nil,{f,461},[{x,3}]}.
    {allocate,1,3}.
    {move,{x,1},{y,0}}.
    {move,nil,{x,1}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"lists.erl",1553}]}.
    {call_ext,2,{extfunc,lists,reverse,2}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,0}}.
    {move,nil,{x,1}}.
    {call_last,2,{f,452},1}.
  {label,465}.
    {test,is_nil,{f,461},[{x,0}]}.
    {move,{x,1},{x,0}}.
    {move,nil,{x,1}}.
    {call_only,2,{f,452}}.


{function, merge3_1, 6, 467}.
  {label,466}.
    {line,[{location,"lists.erl",1560}]}.
    {func_info,{atom,lists},{atom,merge3_1},6}.
  {label,467}.
    {test,is_nonempty_list,{f,471},[{x,0}]}.
    {get_list,{x,0},{x,6},{x,7}}.
    {test,is_ge,{f,469},[{x,2},{x,6}]}.
    {test,is_ge,{f,468},[{x,4},{x,6}]}.
    {test_heap,2,8}.
    {put_list,{x,6},{x,1},{x,1}}.
    {move,{x,7},{x,0}}.
    {call_only,6,{f,467}}.
  {label,468}.
    {test_heap,2,8}.
    {put_list,{x,4},{x,1},{x,4}}.
    {move,{x,6},{x,1}}.
    {move,{x,7},{x,0}}.
    {call_only,6,{f,481}}.
  {label,469}.
    {test,is_ge,{f,470},[{x,4},{x,2}]}.
    {test_heap,2,8}.
    {put_list,{x,2},{x,1},{x,2}}.
    {move,{x,6},{x,1}}.
    {move,{x,7},{x,0}}.
    {call_only,6,{f,474}}.
  {label,470}.
    {test_heap,2,8}.
    {put_list,{x,4},{x,1},{x,4}}.
    {move,{x,6},{x,1}}.
    {move,{x,7},{x,0}}.
    {call_only,6,{f,485}}.
  {label,471}.
    {test,is_nil,{f,466},[{x,0}]}.
    {test,is_ge,{f,472},[{x,4},{x,2}]}.
    {test_heap,2,6}.
    {put_list,{x,2},{x,1},{x,6}}.
    {move,{x,4},{x,1}}.
    {move,{x,5},{x,2}}.
    {move,{x,3},{x,0}}.
    {move,{x,6},{x,3}}.
    {call_only,4,{f,511}}.
  {label,472}.
    {move,{x,3},{x,0}}.
    {move,{x,1},{x,3}}.
    {move,{x,4},{x,1}}.
    {move,{x,2},{x,4}}.
    {move,{x,5},{x,2}}.
    {call_only,5,{f,515}}.


{function, merge3_2, 6, 474}.
  {label,473}.
    {line,[{location,"lists.erl",1570}]}.
    {func_info,{atom,lists},{atom,merge3_2},6}.
  {label,474}.
    {test,is_nonempty_list,{f,478},[{x,3}]}.
    {get_list,{x,3},{x,6},{x,7}}.
    {test,is_ge,{f,476},[{x,6},{x,1}]}.
    {test,is_ge,{f,475},[{x,4},{x,1}]}.
    {test_heap,2,8}.
    {put_list,{x,1},{x,2},{x,1}}.
    {move,{x,7},{x,3}}.
    {move,{x,6},{x,2}}.
    {call_only,6,{f,467}}.
  {label,475}.
    {test_heap,2,8}.
    {put_list,{x,4},{x,2},{x,4}}.
    {move,{x,7},{x,3}}.
    {move,{x,6},{x,2}}.
    {call_only,6,{f,481}}.
  {label,476}.
    {test,is_ge,{f,477},[{x,4},{x,6}]}.
    {test_heap,2,8}.
    {put_list,{x,6},{x,2},{x,2}}.
    {move,{x,7},{x,3}}.
    {call_only,6,{f,474}}.
  {label,477}.
    {test_heap,2,8}.
    {put_list,{x,4},{x,2},{x,4}}.
    {move,{x,7},{x,3}}.
    {move,{x,6},{x,2}}.
    {call_only,6,{f,485}}.
  {label,478}.
    {test,is_nil,{f,473},[{x,3}]}.
    {test,is_ge,{f,479},[{x,4},{x,1}]}.
    {test_heap,2,6}.
    {put_list,{x,1},{x,2},{x,3}}.
    {move,{x,5},{x,2}}.
    {move,{x,4},{x,1}}.
    {call_only,4,{f,511}}.
  {label,479}.
    {move,{x,2},{x,3}}.
    {move,{x,5},{x,2}}.
    {move,{x,4},{x,6}}.
    {move,{x,1},{x,4}}.
    {move,{x,6},{x,1}}.
    {call_only,5,{f,515}}.


{function, merge3_12_3, 6, 481}.
  {label,480}.
    {line,[{location,"lists.erl",1586}]}.
    {func_info,{atom,lists},{atom,merge3_12_3},6}.
  {label,481}.
    {test,is_nonempty_list,{f,483},[{x,5}]}.
    {get_list,{x,5},{x,6},{x,7}}.
    {test,is_ge,{f,482},[{x,6},{x,1}]}.
    {test_heap,2,8}.
    {put_list,{x,1},{x,4},{x,1}}.
    {move,{x,7},{x,5}}.
    {move,{x,6},{x,4}}.
    {call_only,6,{f,467}}.
  {label,482}.
    {test_heap,2,8}.
    {put_list,{x,6},{x,4},{x,4}}.
    {move,{x,7},{x,5}}.
    {call_only,6,{f,481}}.
  {label,483}.
    {test,is_nil,{f,480},[{x,5}]}.
    {test_heap,2,5}.
    {put_list,{x,1},{x,4},{x,4}}.
    {move,{x,2},{x,1}}.
    {move,{x,3},{x,2}}.
    {move,{x,4},{x,3}}.
    {call_only,4,{f,511}}.


{function, merge3_21_3, 6, 485}.
  {label,484}.
    {line,[{location,"lists.erl",1600}]}.
    {func_info,{atom,lists},{atom,merge3_21_3},6}.
  {label,485}.
    {test,is_nonempty_list,{f,487},[{x,5}]}.
    {get_list,{x,5},{x,6},{x,7}}.
    {test,is_ge,{f,486},[{x,6},{x,2}]}.
    {test_heap,2,8}.
    {put_list,{x,2},{x,4},{x,2}}.
    {move,{x,7},{x,5}}.
    {move,{x,6},{x,4}}.
    {call_only,6,{f,474}}.
  {label,486}.
    {test_heap,2,8}.
    {put_list,{x,6},{x,4},{x,4}}.
    {move,{x,7},{x,5}}.
    {call_only,6,{f,485}}.
  {label,487}.
    {test,is_nil,{f,484},[{x,5}]}.
    {move,{x,2},{x,5}}.
    {move,{x,3},{x,2}}.
    {move,{x,4},{x,3}}.
    {move,{x,1},{x,4}}.
    {move,{x,5},{x,1}}.
    {call_only,5,{f,515}}.


{function, rmerge3_1, 6, 489}.
  {label,488}.
    {line,[{location,"lists.erl",1610}]}.
    {func_info,{atom,lists},{atom,rmerge3_1},6}.
  {label,489}.
    {test,is_nonempty_list,{f,493},[{x,0}]}.
    {get_list,{x,0},{x,6},{x,7}}.
    {test,is_ge,{f,491},[{x,2},{x,6}]}.
    {test,is_ge,{f,490},[{x,4},{x,2}]}.
    {test_heap,2,8}.
    {put_list,{x,4},{x,1},{x,4}}.
    {move,{x,6},{x,1}}.
    {move,{x,7},{x,0}}.
    {call_only,6,{f,503}}.
  {label,490}.
    {test_heap,2,8}.
    {put_list,{x,2},{x,1},{x,2}}.
    {move,{x,6},{x,1}}.
    {move,{x,7},{x,0}}.
    {call_only,6,{f,496}}.
  {label,491}.
    {test,is_ge,{f,492},[{x,4},{x,6}]}.
    {test_heap,2,8}.
    {put_list,{x,4},{x,1},{x,4}}.
    {move,{x,6},{x,1}}.
    {move,{x,7},{x,0}}.
    {call_only,6,{f,507}}.
  {label,492}.
    {test_heap,2,8}.
    {put_list,{x,6},{x,1},{x,1}}.
    {move,{x,7},{x,0}}.
    {call_only,6,{f,489}}.
  {label,493}.
    {test,is_nil,{f,488},[{x,0}]}.
    {test,is_ge,{f,494},[{x,4},{x,2}]}.
    {move,{x,3},{x,0}}.
    {move,{x,1},{x,3}}.
    {move,{x,4},{x,1}}.
    {move,{x,2},{x,4}}.
    {move,{x,5},{x,2}}.
    {call_only,5,{f,523}}.
  {label,494}.
    {test_heap,2,6}.
    {put_list,{x,2},{x,1},{x,6}}.
    {move,{x,4},{x,1}}.
    {move,{x,5},{x,2}}.
    {move,{x,3},{x,0}}.
    {move,{x,6},{x,3}}.
    {call_only,4,{f,519}}.


{function, rmerge3_2, 6, 496}.
  {label,495}.
    {line,[{location,"lists.erl",1620}]}.
    {func_info,{atom,lists},{atom,rmerge3_2},6}.
  {label,496}.
    {test,is_nonempty_list,{f,500},[{x,3}]}.
    {get_list,{x,3},{x,6},{x,7}}.
    {test,is_ge,{f,498},[{x,6},{x,1}]}.
    {test,is_ge,{f,497},[{x,4},{x,6}]}.
    {test_heap,2,8}.
    {put_list,{x,4},{x,2},{x,4}}.
    {move,{x,7},{x,3}}.
    {move,{x,6},{x,2}}.
    {call_only,6,{f,503}}.
  {label,497}.
    {test_heap,2,8}.
    {put_list,{x,6},{x,2},{x,2}}.
    {move,{x,7},{x,3}}.
    {call_only,6,{f,496}}.
  {label,498}.
    {test,is_ge,{f,499},[{x,4},{x,1}]}.
    {test_heap,2,8}.
    {put_list,{x,4},{x,2},{x,4}}.
    {move,{x,7},{x,3}}.
    {move,{x,6},{x,2}}.
    {call_only,6,{f,507}}.
  {label,499}.
    {test_heap,2,8}.
    {put_list,{x,1},{x,2},{x,1}}.
    {move,{x,7},{x,3}}.
    {move,{x,6},{x,2}}.
    {call_only,6,{f,489}}.
  {label,500}.
    {test,is_nil,{f,495},[{x,3}]}.
    {test,is_ge,{f,501},[{x,4},{x,1}]}.
    {move,{x,2},{x,3}}.
    {move,{x,5},{x,2}}.
    {move,{x,4},{x,6}}.
    {move,{x,1},{x,4}}.
    {move,{x,6},{x,1}}.
    {call_only,5,{f,523}}.
  {label,501}.
    {test_heap,2,6}.
    {put_list,{x,1},{x,2},{x,3}}.
    {move,{x,5},{x,2}}.
    {move,{x,4},{x,1}}.
    {call_only,4,{f,519}}.


{function, rmerge3_12_3, 6, 503}.
  {label,502}.
    {line,[{location,"lists.erl",1636}]}.
    {func_info,{atom,lists},{atom,rmerge3_12_3},6}.
  {label,503}.
    {test,is_nonempty_list,{f,505},[{x,5}]}.
    {get_list,{x,5},{x,6},{x,7}}.
    {test,is_ge,{f,504},[{x,6},{x,2}]}.
    {test_heap,2,8}.
    {put_list,{x,6},{x,4},{x,4}}.
    {move,{x,7},{x,5}}.
    {call_only,6,{f,503}}.
  {label,504}.
    {test_heap,2,8}.
    {put_list,{x,2},{x,4},{x,2}}.
    {move,{x,7},{x,5}}.
    {move,{x,6},{x,4}}.
    {call_only,6,{f,496}}.
  {label,505}.
    {test,is_nil,{f,502},[{x,5}]}.
    {move,{x,2},{x,5}}.
    {move,{x,3},{x,2}}.
    {move,{x,4},{x,3}}.
    {move,{x,1},{x,4}}.
    {move,{x,5},{x,1}}.
    {call_only,5,{f,523}}.


{function, rmerge3_21_3, 6, 507}.
  {label,506}.
    {line,[{location,"lists.erl",1650}]}.
    {func_info,{atom,lists},{atom,rmerge3_21_3},6}.
  {label,507}.
    {test,is_nonempty_list,{f,509},[{x,5}]}.
    {get_list,{x,5},{x,6},{x,7}}.
    {test,is_ge,{f,508},[{x,6},{x,1}]}.
    {test_heap,2,8}.
    {put_list,{x,6},{x,4},{x,4}}.
    {move,{x,7},{x,5}}.
    {call_only,6,{f,507}}.
  {label,508}.
    {test_heap,2,8}.
    {put_list,{x,1},{x,4},{x,1}}.
    {move,{x,7},{x,5}}.
    {move,{x,6},{x,4}}.
    {call_only,6,{f,489}}.
  {label,509}.
    {test,is_nil,{f,506},[{x,5}]}.
    {test_heap,2,5}.
    {put_list,{x,1},{x,4},{x,4}}.
    {move,{x,2},{x,1}}.
    {move,{x,3},{x,2}}.
    {move,{x,4},{x,3}}.
    {call_only,4,{f,519}}.


{function, merge2_1, 4, 511}.
  {label,510}.
    {line,[{location,"lists.erl",1659}]}.
    {func_info,{atom,lists},{atom,merge2_1},4}.
  {label,511}.
    {test,is_nonempty_list,{f,513},[{x,0}]}.
    {get_list,{x,0},{x,4},{x,5}}.
    {test,is_ge,{f,512},[{x,1},{x,4}]}.
    {test_heap,2,6}.
    {put_list,{x,4},{x,3},{x,3}}.
    {move,{x,5},{x,0}}.
    {call_only,4,{f,511}}.
  {label,512}.
    {move,{x,5},{x,0}}.
    {call_only,5,{f,515}}.
  {label,513}.
    {test,is_nil,{f,510},[{x,0}]}.
    {test_heap,2,4}.
    {put_list,{x,1},{x,3},{x,1}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"lists.erl",1664}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.


{function, merge2_2, 5, 515}.
  {label,514}.
    {line,[{location,"lists.erl",1666}]}.
    {func_info,{atom,lists},{atom,merge2_2},5}.
  {label,515}.
    {test,is_nonempty_list,{f,517},[{x,2}]}.
    {get_list,{x,2},{x,5},{x,6}}.
    {test,is_ge,{f,516},[{x,5},{x,4}]}.
    {test_heap,4,7}.
    {put_list,{x,1},{x,3},{x,7}}.
    {put_list,{x,4},{x,7},{x,3}}.
    {move,{x,6},{x,2}}.
    {move,{x,5},{x,1}}.
    {call_only,4,{f,511}}.
  {label,516}.
    {test_heap,2,7}.
    {put_list,{x,1},{x,3},{x,3}}.
    {move,{x,6},{x,2}}.
    {move,{x,5},{x,1}}.
    {call_only,5,{f,515}}.
  {label,517}.
    {test,is_nil,{f,514},[{x,2}]}.
    {test_heap,4,5}.
    {put_list,{x,1},{x,3},{x,2}}.
    {put_list,{x,4},{x,2},{x,1}}.
    {line,[{location,"lists.erl",1671}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.


{function, rmerge2_1, 4, 519}.
  {label,518}.
    {line,[{location,"lists.erl",1675}]}.
    {func_info,{atom,lists},{atom,rmerge2_1},4}.
  {label,519}.
    {test,is_nonempty_list,{f,521},[{x,0}]}.
    {get_list,{x,0},{x,4},{x,5}}.
    {test,is_ge,{f,520},[{x,1},{x,4}]}.
    {move,{x,5},{x,0}}.
    {call_only,5,{f,523}}.
  {label,520}.
    {test_heap,2,6}.
    {put_list,{x,4},{x,3},{x,3}}.
    {move,{x,5},{x,0}}.
    {call_only,4,{f,519}}.
  {label,521}.
    {test,is_nil,{f,518},[{x,0}]}.
    {test_heap,2,4}.
    {put_list,{x,1},{x,3},{x,1}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"lists.erl",1680}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.


{function, rmerge2_2, 5, 523}.
  {label,522}.
    {line,[{location,"lists.erl",1682}]}.
    {func_info,{atom,lists},{atom,rmerge2_2},5}.
  {label,523}.
    {test,is_nonempty_list,{f,525},[{x,2}]}.
    {get_list,{x,2},{x,5},{x,6}}.
    {test,is_ge,{f,524},[{x,5},{x,4}]}.
    {test_heap,2,7}.
    {put_list,{x,1},{x,3},{x,3}}.
    {move,{x,6},{x,2}}.
    {move,{x,5},{x,1}}.
    {call_only,5,{f,523}}.
  {label,524}.
    {test_heap,4,7}.
    {put_list,{x,1},{x,3},{x,7}}.
    {put_list,{x,4},{x,7},{x,3}}.
    {move,{x,6},{x,2}}.
    {move,{x,5},{x,1}}.
    {call_only,4,{f,519}}.
  {label,525}.
    {test,is_nil,{f,522},[{x,2}]}.
    {test_heap,4,5}.
    {put_list,{x,1},{x,3},{x,2}}.
    {put_list,{x,4},{x,2},{x,1}}.
    {line,[{location,"lists.erl",1687}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.


{function, usplit_1, 5, 527}.
  {label,526}.
    {line,[{location,"lists.erl",1692}]}.
    {func_info,{atom,lists},{atom,usplit_1},5}.
  {label,527}.
    {test,is_nonempty_list,{f,533},[{x,2}]}.
    {get_list,{x,2},{x,5},{x,6}}.
    {test,is_lt,{f,528},[{x,1},{x,5}]}.
    {test_heap,2,7}.
    {put_list,{x,0},{x,3},{x,3}}.
    {move,{x,6},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,5},{x,1}}.
    {call_only,5,{f,527}}.
  {label,528}.
    {test,is_eq,{f,529},[{x,5},{x,1}]}.
    {move,{x,6},{x,2}}.
    {call_only,5,{f,527}}.
  {label,529}.
    {test,is_lt,{f,530},[{x,0},{x,5}]}.
    {test_heap,2,7}.
    {put_list,{x,0},{x,3},{x,3}}.
    {move,{x,6},{x,2}}.
    {move,{x,5},{x,0}}.
    {call_only,5,{f,527}}.
  {label,530}.
    {test,is_eq,{f,531},[{x,5},{x,0}]}.
    {move,{x,6},{x,2}}.
    {call_only,5,{f,527}}.
  {label,531}.
    {test,is_nil,{f,532},[{x,3}]}.
    {test_heap,2,7}.
    {put_list,{x,5},nil,{x,3}}.
    {move,{x,6},{x,2}}.
    {call_only,5,{f,527}}.
  {label,532}.
    {move,{x,6},{x,2}}.
    {call_only,6,{f,535}}.
  {label,533}.
    {test,is_nil,{f,526},[{x,2}]}.
    {test_heap,6,5}.
    {put_list,{x,0},{x,3},{x,0}}.
    {put_list,{x,1},{x,0},{x,3}}.
    {put_list,{x,3},{x,4},{x,0}}.
    {move,{atom,asc},{x,2}}.
    {move,nil,{x,1}}.
    {call_only,3,{f,575}}.


{function, usplit_1_1, 6, 535}.
  {label,534}.
    {line,[{location,"lists.erl",1707}]}.
    {func_info,{atom,lists},{atom,usplit_1_1},6}.
  {label,535}.
    {test,is_nonempty_list,{f,542},[{x,2}]}.
    {get_list,{x,2},{x,6},{x,7}}.
    {test,is_lt,{f,536},[{x,1},{x,6}]}.
    {test_heap,2,8}.
    {put_list,{x,0},{x,3},{x,3}}.
    {move,{x,7},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,6},{x,1}}.
    {call_only,6,{f,535}}.
  {label,536}.
    {test,is_eq,{f,537},[{x,6},{x,1}]}.
    {move,{x,7},{x,2}}.
    {call_only,6,{f,535}}.
  {label,537}.
    {test,is_lt,{f,538},[{x,0},{x,6}]}.
    {test_heap,2,8}.
    {put_list,{x,0},{x,3},{x,3}}.
    {move,{x,7},{x,2}}.
    {move,{x,6},{x,0}}.
    {call_only,6,{f,535}}.
  {label,538}.
    {test,is_eq,{f,539},[{x,6},{x,0}]}.
    {move,{x,7},{x,2}}.
    {call_only,6,{f,535}}.
  {label,539}.
    {test,is_lt,{f,540},[{x,5},{x,6}]}.
    {test_heap,6,8}.
    {put_list,{x,0},{x,3},{x,8}}.
    {put_list,{x,1},{x,8},{x,8}}.
    {put_list,{x,8},{x,4},{x,4}}.
    {move,{x,7},{x,2}}.
    {move,{x,6},{x,1}}.
    {move,nil,{x,3}}.
    {move,{x,5},{x,0}}.
    {call_only,5,{f,527}}.
  {label,540}.
    {test,is_eq,{f,541},[{x,6},{x,5}]}.
    {move,{x,7},{x,2}}.
    {call_only,6,{f,535}}.
  {label,541}.
    {test_heap,6,8}.
    {put_list,{x,0},{x,3},{x,8}}.
    {put_list,{x,1},{x,8},{x,8}}.
    {put_list,{x,8},{x,4},{x,4}}.
    {move,{x,7},{x,2}}.
    {move,{x,5},{x,1}}.
    {move,nil,{x,3}}.
    {move,{x,6},{x,0}}.
    {call_only,5,{f,527}}.
  {label,542}.
    {test,is_nil,{f,534},[{x,2}]}.
    {test_heap,10,6}.
    {put_list,{x,0},{x,3},{x,0}}.
    {put_list,{x,1},{x,0},{x,0}}.
    {put_list,{x,0},{x,4},{x,3}}.
    {put_list,{x,5},nil,{x,4}}.
    {put_list,{x,4},{x,3},{x,0}}.
    {move,{atom,asc},{x,2}}.
    {move,nil,{x,1}}.
    {call_only,3,{f,575}}.


{function, usplit_2, 5, 544}.
  {label,543}.
    {line,[{location,"lists.erl",1725}]}.
    {func_info,{atom,lists},{atom,usplit_2},5}.
  {label,544}.
    {test,is_nonempty_list,{f,550},[{x,2}]}.
    {get_list,{x,2},{x,5},{x,6}}.
    {test,is_lt,{f,545},[{x,5},{x,1}]}.
    {test_heap,2,7}.
    {put_list,{x,0},{x,3},{x,3}}.
    {move,{x,6},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,5},{x,1}}.
    {call_only,5,{f,544}}.
  {label,545}.
    {test,is_eq,{f,546},[{x,5},{x,1}]}.
    {move,{x,6},{x,2}}.
    {call_only,5,{f,544}}.
  {label,546}.
    {test,is_lt,{f,547},[{x,5},{x,0}]}.
    {test_heap,2,7}.
    {put_list,{x,0},{x,3},{x,3}}.
    {move,{x,6},{x,2}}.
    {move,{x,5},{x,0}}.
    {call_only,5,{f,544}}.
  {label,547}.
    {test,is_eq,{f,548},[{x,5},{x,0}]}.
    {move,{x,6},{x,2}}.
    {call_only,5,{f,544}}.
  {label,548}.
    {test,is_nil,{f,549},[{x,3}]}.
    {test_heap,2,7}.
    {put_list,{x,5},nil,{x,3}}.
    {move,{x,6},{x,2}}.
    {call_only,5,{f,544}}.
  {label,549}.
    {move,{x,6},{x,2}}.
    {call_only,6,{f,552}}.
  {label,550}.
    {test,is_nil,{f,543},[{x,2}]}.
    {test_heap,6,5}.
    {put_list,{x,0},{x,3},{x,0}}.
    {put_list,{x,1},{x,0},{x,3}}.
    {put_list,{x,3},{x,4},{x,0}}.
    {move,{atom,desc},{x,2}}.
    {move,nil,{x,1}}.
    {call_only,3,{f,563}}.


{function, usplit_2_1, 6, 552}.
  {label,551}.
    {line,[{location,"lists.erl",1740}]}.
    {func_info,{atom,lists},{atom,usplit_2_1},6}.
  {label,552}.
    {test,is_nonempty_list,{f,559},[{x,2}]}.
    {get_list,{x,2},{x,6},{x,7}}.
    {test,is_lt,{f,553},[{x,6},{x,1}]}.
    {test_heap,2,8}.
    {put_list,{x,0},{x,3},{x,3}}.
    {move,{x,7},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,6},{x,1}}.
    {call_only,6,{f,552}}.
  {label,553}.
    {test,is_eq,{f,554},[{x,6},{x,1}]}.
    {move,{x,7},{x,2}}.
    {call_only,6,{f,552}}.
  {label,554}.
    {test,is_lt,{f,555},[{x,6},{x,0}]}.
    {test_heap,2,8}.
    {put_list,{x,0},{x,3},{x,3}}.
    {move,{x,7},{x,2}}.
    {move,{x,6},{x,0}}.
    {call_only,6,{f,552}}.
  {label,555}.
    {test,is_eq,{f,556},[{x,6},{x,0}]}.
    {move,{x,7},{x,2}}.
    {call_only,6,{f,552}}.
  {label,556}.
    {test,is_lt,{f,557},[{x,6},{x,5}]}.
    {test_heap,6,8}.
    {put_list,{x,0},{x,3},{x,8}}.
    {put_list,{x,1},{x,8},{x,8}}.
    {put_list,{x,8},{x,4},{x,4}}.
    {move,{x,7},{x,2}}.
    {move,{x,6},{x,1}}.
    {move,nil,{x,3}}.
    {move,{x,5},{x,0}}.
    {call_only,5,{f,544}}.
  {label,557}.
    {test,is_eq,{f,558},[{x,6},{x,5}]}.
    {move,{x,7},{x,2}}.
    {call_only,6,{f,552}}.
  {label,558}.
    {test_heap,6,8}.
    {put_list,{x,0},{x,3},{x,8}}.
    {put_list,{x,1},{x,8},{x,8}}.
    {put_list,{x,8},{x,4},{x,4}}.
    {move,{x,7},{x,2}}.
    {move,{x,5},{x,1}}.
    {move,nil,{x,3}}.
    {move,{x,6},{x,0}}.
    {call_only,5,{f,544}}.
  {label,559}.
    {test,is_nil,{f,551},[{x,2}]}.
    {test_heap,10,6}.
    {put_list,{x,0},{x,3},{x,0}}.
    {put_list,{x,1},{x,0},{x,0}}.
    {put_list,{x,0},{x,4},{x,3}}.
    {put_list,{x,5},nil,{x,4}}.
    {put_list,{x,4},{x,3},{x,0}}.
    {move,{atom,desc},{x,2}}.
    {move,nil,{x,1}}.
    {call_only,3,{f,563}}.


{function, umergel, 1, 561}.
  {label,560}.
    {line,[{location,"lists.erl",1759}]}.
    {func_info,{atom,lists},{atom,umergel},1}.
  {label,561}.
    {move,{atom,asc},{x,2}}.
    {move,nil,{x,1}}.
    {call_only,3,{f,563}}.


{function, umergel, 3, 563}.
  {label,562}.
    {line,[{location,"lists.erl",1762}]}.
    {func_info,{atom,lists},{atom,umergel},3}.
  {label,563}.
    {test,is_nonempty_list,{f,572},[{x,0}]}.
    {get_list,{x,0},{x,3},{x,4}}.
    {test,is_nil,{f,564},[{x,3}]}.
    {move,{x,4},{x,0}}.
    {call_only,3,{f,563}}.
  {label,564}.
    {test,is_nonempty_list,{f,565},[{x,4}]}.
    {get_list,{x,4},{x,5},{x,6}}.
    {test,is_nonempty_list,{f,565},[{x,5}]}.
    {get_list,{x,5},{x,7},{x,8}}.
    {test,is_nonempty_list,{f,565},[{x,6}]}.
    {get_list,{x,6},{x,9},{x,10}}.
    {test,is_nonempty_list,{f,565},[{x,9}]}.
    {get_list,{x,9},{x,11},{x,12}}.
    {test,is_eq_exact,{f,565},[{x,2},{atom,asc}]}.
    {allocate_heap,2,2,13}.
    {move,{x,1},{y,1}}.
    {move,{x,10},{y,0}}.
    {put_list,{x,7},{x,11},{x,1}}.
    {move,nil,{x,4}}.
    {move,{x,12},{x,5}}.
    {move,{x,8},{x,2}}.
    {move,{x,11},{x,6}}.
    {move,{x,3},{x,0}}.
    {move,{x,7},{x,3}}.
    {line,[{location,"lists.erl",1765}]}.
    {call,7,{f,582}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,1},{x,1}}.
    {move,{atom,asc},{x,2}}.
    {move,{y,0},{x,0}}.
    {call_last,3,{f,563},2}.
  {label,565}.
    {test,is_nonempty_list,{f,566},[{x,3}]}.
    {get_list,{x,3},{x,5},{x,6}}.
    {test,is_nonempty_list,{f,568},[{x,4}]}.
    {get_list,{x,4},{x,7},{x,8}}.
    {test,is_nonempty_list,{f,566},[{x,7}]}.
    {get_list,{x,7},{x,9},{x,10}}.
    {test,is_nonempty_list,{f,566},[{x,8}]}.
    {get_list,{x,8},{x,11},{x,12}}.
    {test,is_eq_exact,{f,566},[{x,2},{atom,desc}]}.
    {allocate_heap,2,2,13}.
    {move,{x,1},{y,1}}.
    {move,{x,12},{y,0}}.
    {put_list,{x,9},{x,5},{x,1}}.
    {move,{x,9},{x,3}}.
    {move,{x,10},{x,2}}.
    {move,nil,{x,4}}.
    {move,{x,5},{x,7}}.
    {move,{x,6},{x,5}}.
    {move,{x,7},{x,6}}.
    {move,{x,11},{x,0}}.
    {line,[{location,"lists.erl",1767}]}.
    {call,7,{f,582}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,1},{x,1}}.
    {move,{atom,desc},{x,2}}.
    {move,{y,0},{x,0}}.
    {call_last,3,{f,563},2}.
  {label,566}.
    {test,is_nonempty_list,{f,568},[{x,4}]}.
    {get_list,{x,4},{x,5},{x,6}}.
    {test,is_nil,{f,567},[{x,5}]}.
    {test_heap,2,7}.
    {put_list,{x,3},{x,6},{x,0}}.
    {call_only,3,{f,563}}.
  {label,567}.
    {test,is_nonempty_list,{f,568},[{x,6}]}.
    {get_list,{x,6},{x,7},{x,8}}.
    {test,is_nil,{f,568},[{x,7}]}.
    {test_heap,4,9}.
    {put_list,{x,5},{x,8},{x,4}}.
    {put_list,{x,3},{x,4},{x,0}}.
    {call_only,3,{f,563}}.
  {label,568}.
    {test,is_nonempty_list,{f,569},[{x,3}]}.
    {get_list,{x,3},{x,5},{x,6}}.
    {test,is_nonempty_list,{f,570},[{x,4}]}.
    {get_list,{x,4},{x,7},{x,8}}.
    {test,is_eq_exact,{f,569},[{x,2},{atom,asc}]}.
    {allocate,2,9}.
    {move,{x,1},{y,0}}.
    {move,nil,{x,2}}.
    {move,{x,7},{x,1}}.
    {move,{x,5},{x,3}}.
    {move,{x,6},{x,0}}.
    {move,{x,8},{y,1}}.
    {line,[{location,"lists.erl",1773}]}.
    {call,4,{f,646}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,1}}.
    {move,{atom,asc},{x,2}}.
    {move,{y,1},{x,0}}.
    {call_last,3,{f,563},2}.
  {label,569}.
    {test,is_nonempty_list,{f,570},[{x,4}]}.
    {get_list,{x,4},{x,5},{x,6}}.
    {test,is_nonempty_list,{f,562},[{x,5}]}.
    {get_list,{x,5},{x,7},{x,8}}.
    {test,is_eq_exact,{f,562},[{x,2},{atom,desc}]}.
    {allocate,2,9}.
    {move,{x,1},{y,0}}.
    {move,nil,{x,2}}.
    {move,{x,3},{x,1}}.
    {move,{x,7},{x,3}}.
    {move,{x,8},{x,0}}.
    {move,{x,6},{y,1}}.
    {line,[{location,"lists.erl",1775}]}.
    {call,4,{f,646}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,1}}.
    {move,{atom,desc},{x,2}}.
    {move,{y,1},{x,0}}.
    {call_last,3,{f,563},2}.
  {label,570}.
    {test,is_nil,{f,562},[{x,4}]}.
    {test,is_nil,{f,571},[{x,1}]}.
    {move,{x,3},{x,0}}.
    return.
  {label,571}.
    {allocate,2,4}.
    {move,{x,1},{y,0}}.
    {move,nil,{x,1}}.
    {move,{x,3},{x,0}}.
    {move,{x,2},{y,1}}.
    {line,[{location,"lists.erl",1779}]}.
    {call_ext,2,{extfunc,lists,reverse,2}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,0}}.
    {move,{y,1},{x,2}}.
    {move,nil,{x,1}}.
    {call_last,3,{f,575},2}.
  {label,572}.
    {test,is_nil,{f,562},[{x,0}]}.
    {test,is_nil,{f,573},[{x,1}]}.
    {move,nil,{x,0}}.
    return.
  {label,573}.
    {move,{x,1},{x,0}}.
    {move,nil,{x,1}}.
    {call_only,3,{f,575}}.


{function, rumergel, 3, 575}.
  {label,574}.
    {line,[{location,"lists.erl",1785}]}.
    {func_info,{atom,lists},{atom,rumergel},3}.
  {label,575}.
    {test,is_nonempty_list,{f,580},[{x,0}]}.
    {get_list,{x,0},{x,3},{x,4}}.
    {test,is_nonempty_list,{f,576},[{x,3}]}.
    {get_list,{x,3},{x,5},{x,6}}.
    {test,is_nonempty_list,{f,577},[{x,4}]}.
    {get_list,{x,4},{x,7},{x,8}}.
    {test,is_nonempty_list,{f,576},[{x,7}]}.
    {get_list,{x,7},{x,9},{x,10}}.
    {test,is_nonempty_list,{f,576},[{x,8}]}.
    {get_list,{x,8},{x,11},{x,12}}.
    {test,is_eq_exact,{f,576},[{x,2},{atom,asc}]}.
    {allocate,2,13}.
    {move,{x,1},{y,0}}.
    {move,{x,9},{x,2}}.
    {move,nil,{x,3}}.
    {move,{x,10},{x,1}}.
    {move,{x,6},{x,4}}.
    {move,{x,11},{x,0}}.
    {move,{x,12},{y,1}}.
    {line,[{location,"lists.erl",1786}]}.
    {call,6,{f,612}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,1}}.
    {move,{atom,asc},{x,2}}.
    {move,{y,1},{x,0}}.
    {call_last,3,{f,575},2}.
  {label,576}.
    {test,is_nonempty_list,{f,577},[{x,4}]}.
    {get_list,{x,4},{x,5},{x,6}}.
    {test,is_nonempty_list,{f,577},[{x,5}]}.
    {get_list,{x,5},{x,7},{x,8}}.
    {test,is_nonempty_list,{f,577},[{x,6}]}.
    {get_list,{x,6},{x,9},{x,10}}.
    {test,is_nonempty_list,{f,577},[{x,9}]}.
    {get_list,{x,9},{x,11},{x,12}}.
    {test,is_eq_exact,{f,577},[{x,2},{atom,desc}]}.
    {allocate,2,13}.
    {move,{x,1},{y,0}}.
    {move,{x,7},{x,2}}.
    {move,{x,12},{x,4}}.
    {move,{x,8},{x,1}}.
    {move,{x,11},{x,5}}.
    {move,{x,3},{x,0}}.
    {move,nil,{x,3}}.
    {move,{x,10},{y,1}}.
    {line,[{location,"lists.erl",1788}]}.
    {call,6,{f,612}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,1}}.
    {move,{atom,desc},{x,2}}.
    {move,{y,1},{x,0}}.
    {call_last,3,{f,575},2}.
  {label,577}.
    {test,is_nonempty_list,{f,578},[{x,3}]}.
    {get_list,{x,3},{x,5},{x,6}}.
    {test,is_nonempty_list,{f,579},[{x,4}]}.
    {get_list,{x,4},{x,7},{x,8}}.
    {test,is_eq_exact,{f,578},[{x,2},{atom,asc}]}.
    {allocate,2,9}.
    {move,{x,1},{y,0}}.
    {move,nil,{x,2}}.
    {move,{x,6},{x,1}}.
    {move,{x,5},{x,3}}.
    {move,{x,7},{x,0}}.
    {move,{x,8},{y,1}}.
    {line,[{location,"lists.erl",1790}]}.
    {call,4,{f,650}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,1}}.
    {move,{atom,asc},{x,2}}.
    {move,{y,1},{x,0}}.
    {call_last,3,{f,575},2}.
  {label,578}.
    {test,is_nonempty_list,{f,579},[{x,4}]}.
    {get_list,{x,4},{x,5},{x,6}}.
    {test,is_nonempty_list,{f,574},[{x,5}]}.
    {get_list,{x,5},{x,7},{x,8}}.
    {test,is_eq_exact,{f,574},[{x,2},{atom,desc}]}.
    {allocate,2,9}.
    {move,{x,1},{y,0}}.
    {move,{x,8},{x,1}}.
    {move,nil,{x,2}}.
    {move,{x,3},{x,0}}.
    {move,{x,7},{x,3}}.
    {move,{x,6},{y,1}}.
    {line,[{location,"lists.erl",1792}]}.
    {call,4,{f,650}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,1}}.
    {move,{atom,desc},{x,2}}.
    {move,{y,1},{x,0}}.
    {call_last,3,{f,575},2}.
  {label,579}.
    {test,is_nil,{f,574},[{x,4}]}.
    {allocate,2,4}.
    {move,{x,1},{y,0}}.
    {move,nil,{x,1}}.
    {move,{x,3},{x,0}}.
    {move,{x,2},{y,1}}.
    {line,[{location,"lists.erl",1794}]}.
    {call_ext,2,{extfunc,lists,reverse,2}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,0}}.
    {move,{y,1},{x,2}}.
    {move,nil,{x,1}}.
    {call_last,3,{f,563},2}.
  {label,580}.
    {test,is_nil,{f,574},[{x,0}]}.
    {move,{x,1},{x,0}}.
    {move,nil,{x,1}}.
    {call_only,3,{f,563}}.


{function, umerge3_1, 7, 582}.
  {label,581}.
    {line,[{location,"lists.erl",1801}]}.
    {func_info,{atom,lists},{atom,umerge3_1},7}.
  {label,582}.
    {test,is_nonempty_list,{f,589},[{x,0}]}.
    {get_list,{x,0},{x,7},{x,8}}.
    {test,is_ge,{f,585},[{x,3},{x,7}]}.
    {test,is_ge,{f,583},[{x,6},{x,7}]}.
    {test_heap,2,9}.
    {put_list,{x,7},{x,4},{x,4}}.
    {move,{x,7},{x,1}}.
    {move,{x,8},{x,0}}.
    {call_only,7,{f,582}}.
  {label,583}.
    {test,is_eq,{f,584},[{x,6},{x,1}]}.
    {move,{x,7},{x,1}}.
    {move,{x,8},{x,0}}.
    {call_only,6,{f,604}}.
  {label,584}.
    {test_heap,2,9}.
    {put_list,{x,6},{x,4},{x,4}}.
    {move,{x,7},{x,1}}.
    {move,{x,8},{x,0}}.
    {call_only,6,{f,604}}.
  {label,585}.
    {test,is_eq,{f,586},[{x,3},{x,1}]}.
    {move,{x,7},{x,1}}.
    {move,{x,8},{x,0}}.
    {call_only,7,{f,594}}.
  {label,586}.
    {test,is_ge,{f,587},[{x,6},{x,3}]}.
    {test_heap,2,9}.
    {put_list,{x,3},{x,4},{x,4}}.
    {move,{x,7},{x,1}}.
    {move,{x,8},{x,0}}.
    {call_only,7,{f,594}}.
  {label,587}.
    {test,is_eq,{f,588},[{x,6},{x,1}]}.
    {move,{x,7},{x,1}}.
    {move,{x,8},{x,0}}.
    {call_only,6,{f,608}}.
  {label,588}.
    {test_heap,2,9}.
    {put_list,{x,6},{x,4},{x,4}}.
    {move,{x,7},{x,1}}.
    {move,{x,8},{x,0}}.
    {call_only,6,{f,608}}.
  {label,589}.
    {test,is_nil,{f,581},[{x,0}]}.
    {test,is_eq,{f,590},[{x,3},{x,1}]}.
    {move,{x,1},{x,3}}.
    {move,{x,5},{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,4},{x,2}}.
    {move,{x,6},{x,4}}.
    {call_only,5,{f,640}}.
  {label,590}.
    {test,is_ge,{f,591},[{x,6},{x,3}]}.
    {test_heap,2,7}.
    {put_list,{x,3},{x,4},{x,7}}.
    {move,{x,5},{x,1}}.
    {move,{x,6},{x,4}}.
    {move,{x,2},{x,0}}.
    {move,{x,7},{x,2}}.
    {call_only,5,{f,640}}.
  {label,591}.
    {test,is_eq,{f,592},[{x,6},{x,1}]}.
    {move,{x,5},{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,4},{x,2}}.
    {call_only,4,{f,646}}.
  {label,592}.
    {test_heap,2,7}.
    {put_list,{x,6},{x,4},{x,4}}.
    {move,{x,5},{x,1}}.
    {move,{x,2},{x,0}}.
    {move,{x,4},{x,2}}.
    {call_only,4,{f,646}}.


{function, umerge3_2, 7, 594}.
  {label,593}.
    {line,[{location,"lists.erl",1817}]}.
    {func_info,{atom,lists},{atom,umerge3_2},7}.
  {label,594}.
    {test,is_nonempty_list,{f,600},[{x,2}]}.
    {get_list,{x,2},{x,7},{x,8}}.
    {test,is_ge,{f,597},[{x,7},{x,1}]}.
    {test,is_ge,{f,595},[{x,6},{x,1}]}.
    {test_heap,2,9}.
    {put_list,{x,1},{x,4},{x,4}}.
    {move,{x,7},{x,3}}.
    {move,{x,8},{x,2}}.
    {call_only,7,{f,582}}.
  {label,595}.
    {test,is_eq,{f,596},[{x,6},{x,3}]}.
    {move,{x,7},{x,3}}.
    {move,{x,8},{x,2}}.
    {call_only,6,{f,604}}.
  {label,596}.
    {test_heap,2,9}.
    {put_list,{x,6},{x,4},{x,4}}.
    {move,{x,7},{x,3}}.
    {move,{x,8},{x,2}}.
    {call_only,6,{f,604}}.
  {label,597}.
    {test,is_ge,{f,598},[{x,6},{x,7}]}.
    {test_heap,2,9}.
    {put_list,{x,7},{x,4},{x,4}}.
    {move,{x,7},{x,3}}.
    {move,{x,8},{x,2}}.
    {call_only,7,{f,594}}.
  {label,598}.
    {test,is_eq,{f,599},[{x,6},{x,3}]}.
    {move,{x,7},{x,3}}.
    {move,{x,8},{x,2}}.
    {call_only,6,{f,608}}.
  {label,599}.
    {test_heap,2,9}.
    {put_list,{x,6},{x,4},{x,4}}.
    {move,{x,7},{x,3}}.
    {move,{x,8},{x,2}}.
    {call_only,6,{f,608}}.
  {label,600}.
    {test,is_nil,{f,593},[{x,2}]}.
    {test,is_ge,{f,601},[{x,6},{x,1}]}.
    {test_heap,2,7}.
    {put_list,{x,1},{x,4},{x,2}}.
    {move,{x,1},{x,3}}.
    {move,{x,6},{x,4}}.
    {move,{x,5},{x,1}}.
    {call_only,5,{f,640}}.
  {label,601}.
    {test,is_eq,{f,602},[{x,6},{x,3}]}.
    {move,{x,4},{x,2}}.
    {move,{x,1},{x,3}}.
    {move,{x,5},{x,1}}.
    {call_only,4,{f,646}}.
  {label,602}.
    {test_heap,2,7}.
    {put_list,{x,6},{x,4},{x,2}}.
    {move,{x,1},{x,3}}.
    {move,{x,5},{x,1}}.
    {call_only,4,{f,646}}.


{function, umerge3_12_3, 6, 604}.
  {label,603}.
    {line,[{location,"lists.erl",1837}]}.
    {func_info,{atom,lists},{atom,umerge3_12_3},6}.
  {label,604}.
    {test,is_nonempty_list,{f,606},[{x,5}]}.
    {get_list,{x,5},{x,6},{x,7}}.
    {test,is_ge,{f,605},[{x,6},{x,1}]}.
    {test_heap,2,8}.
    {put_list,{x,1},{x,4},{x,4}}.
    {move,{x,7},{x,5}}.
    {call_only,7,{f,582}}.
  {label,605}.
    {test_heap,2,8}.
    {put_list,{x,6},{x,4},{x,4}}.
    {move,{x,7},{x,5}}.
    {call_only,6,{f,604}}.
  {label,606}.
    {test,is_nil,{f,603},[{x,5}]}.
    {test_heap,2,5}.
    {put_list,{x,1},{x,4},{x,5}}.
    {move,{x,3},{x,4}}.
    {move,{x,1},{x,3}}.
    {move,{x,2},{x,1}}.
    {move,{x,5},{x,2}}.
    {call_only,5,{f,640}}.


{function, umerge3_21_3, 6, 608}.
  {label,607}.
    {line,[{location,"lists.erl",1853}]}.
    {func_info,{atom,lists},{atom,umerge3_21_3},6}.
  {label,608}.
    {test,is_nonempty_list,{f,610},[{x,5}]}.
    {get_list,{x,5},{x,6},{x,7}}.
    {test,is_ge,{f,609},[{x,6},{x,3}]}.
    {test_heap,2,8}.
    {put_list,{x,3},{x,4},{x,4}}.
    {move,{x,7},{x,5}}.
    {call_only,7,{f,594}}.
  {label,609}.
    {test_heap,2,8}.
    {put_list,{x,6},{x,4},{x,4}}.
    {move,{x,7},{x,5}}.
    {call_only,6,{f,608}}.
  {label,610}.
    {test,is_nil,{f,607},[{x,5}]}.
    {test_heap,2,5}.
    {put_list,{x,3},{x,4},{x,4}}.
    {move,{x,1},{x,3}}.
    {move,{x,2},{x,1}}.
    {move,{x,4},{x,2}}.
    {call_only,4,{f,646}}.


{function, rumerge3_1, 6, 612}.
  {label,611}.
    {line,[{location,"lists.erl",1861}]}.
    {func_info,{atom,lists},{atom,rumerge3_1},6}.
  {label,612}.
    {test,is_nonempty_list,{f,616},[{x,0}]}.
    {get_list,{x,0},{x,6},{x,7}}.
    {test,is_ge,{f,614},[{x,2},{x,6}]}.
    {test,is_ge,{f,613},[{x,5},{x,2}]}.
    {move,{x,7},{x,0}}.
    {call_only,7,{f,628}}.
  {label,613}.
    {move,{x,7},{x,0}}.
    {call_only,7,{f,619}}.
  {label,614}.
    {test,is_ge,{f,615},[{x,5},{x,6}]}.
    {move,{x,7},{x,0}}.
    {call_only,7,{f,634}}.
  {label,615}.
    {test_heap,2,8}.
    {put_list,{x,6},{x,3},{x,3}}.
    {move,{x,7},{x,0}}.
    {call_only,6,{f,612}}.
  {label,616}.
    {test,is_nil,{f,611},[{x,0}]}.
    {test,is_ge,{f,617},[{x,5},{x,2}]}.
    {move,{x,1},{x,0}}.
    {move,{x,4},{x,1}}.
    {move,{x,2},{x,4}}.
    {move,{x,3},{x,2}}.
    {move,{x,5},{x,3}}.
    {call_only,5,{f,654}}.
  {label,617}.
    {test_heap,2,6}.
    {put_list,{x,2},{x,3},{x,2}}.
    {move,{x,5},{x,3}}.
    {move,{x,1},{x,0}}.
    {move,{x,4},{x,1}}.
    {call_only,4,{f,650}}.


{function, rumerge3_2, 7, 619}.
  {label,618}.
    {line,[{location,"lists.erl",1879}]}.
    {func_info,{atom,lists},{atom,rumerge3_2},7}.
  {label,619}.
    {test,is_nonempty_list,{f,624},[{x,1}]}.
    {get_list,{x,1},{x,7},{x,8}}.
    {test,is_ge,{f,621},[{x,7},{x,6}]}.
    {test,is_ge,{f,620},[{x,5},{x,7}]}.
    {test_heap,2,9}.
    {put_list,{x,2},{x,3},{x,3}}.
    {move,{x,7},{x,2}}.
    {move,{x,8},{x,1}}.
    {call_only,7,{f,628}}.
  {label,620}.
    {test_heap,2,9}.
    {put_list,{x,2},{x,3},{x,3}}.
    {move,{x,7},{x,2}}.
    {move,{x,8},{x,1}}.
    {call_only,7,{f,619}}.
  {label,621}.
    {test,is_eq,{f,622},[{x,6},{x,2}]}.
    {test_heap,2,9}.
    {put_list,{x,6},{x,3},{x,3}}.
    {move,{x,7},{x,2}}.
    {move,{x,8},{x,1}}.
    {call_only,6,{f,612}}.
  {label,622}.
    {test,is_ge,{f,623},[{x,5},{x,6}]}.
    {test_heap,2,9}.
    {put_list,{x,2},{x,3},{x,3}}.
    {move,{x,7},{x,2}}.
    {move,{x,8},{x,1}}.
    {call_only,7,{f,634}}.
  {label,623}.
    {test_heap,4,9}.
    {put_list,{x,2},{x,3},{x,9}}.
    {put_list,{x,6},{x,9},{x,3}}.
    {move,{x,7},{x,2}}.
    {move,{x,8},{x,1}}.
    {call_only,6,{f,612}}.
  {label,624}.
    {test,is_nil,{f,618},[{x,1}]}.
    {test,is_eq,{f,625},[{x,6},{x,2}]}.
    {test_heap,2,7}.
    {put_list,{x,6},{x,3},{x,2}}.
    {move,{x,5},{x,3}}.
    {move,{x,4},{x,1}}.
    {call_only,4,{f,650}}.
  {label,625}.
    {test,is_ge,{f,626},[{x,5},{x,6}]}.
    {test_heap,2,7}.
    {put_list,{x,2},{x,3},{x,2}}.
    {move,{x,5},{x,3}}.
    {move,{x,4},{x,1}}.
    {move,{x,6},{x,4}}.
    {call_only,5,{f,654}}.
  {label,626}.
    {test_heap,4,7}.
    {put_list,{x,2},{x,3},{x,7}}.
    {put_list,{x,6},{x,7},{x,2}}.
    {move,{x,5},{x,3}}.
    {move,{x,4},{x,1}}.
    {call_only,4,{f,650}}.


{function, rumerge3_12_3, 7, 628}.
  {label,627}.
    {line,[{location,"lists.erl",1904}]}.
    {func_info,{atom,lists},{atom,rumerge3_12_3},7}.
  {label,628}.
    {test,is_nonempty_list,{f,631},[{x,4}]}.
    {get_list,{x,4},{x,7},{x,8}}.
    {test,is_ge,{f,629},[{x,7},{x,2}]}.
    {test_heap,2,9}.
    {put_list,{x,5},{x,3},{x,3}}.
    {move,{x,7},{x,5}}.
    {move,{x,8},{x,4}}.
    {call_only,7,{f,628}}.
  {label,629}.
    {test,is_eq,{f,630},[{x,2},{x,5}]}.
    {move,{x,7},{x,5}}.
    {move,{x,8},{x,4}}.
    {call_only,7,{f,619}}.
  {label,630}.
    {test_heap,2,9}.
    {put_list,{x,5},{x,3},{x,3}}.
    {move,{x,7},{x,5}}.
    {move,{x,8},{x,4}}.
    {call_only,7,{f,619}}.
  {label,631}.
    {test,is_nil,{f,627},[{x,4}]}.
    {test,is_eq,{f,632},[{x,2},{x,5}]}.
    {move,{x,6},{x,4}}.
    {move,{x,3},{x,5}}.
    {move,{x,2},{x,3}}.
    {move,{x,5},{x,2}}.
    {call_only,5,{f,654}}.
  {label,632}.
    {test_heap,2,7}.
    {put_list,{x,5},{x,3},{x,5}}.
    {move,{x,2},{x,3}}.
    {move,{x,6},{x,4}}.
    {move,{x,5},{x,2}}.
    {call_only,5,{f,654}}.


{function, rumerge3_21_3, 7, 634}.
  {label,633}.
    {line,[{location,"lists.erl",1916}]}.
    {func_info,{atom,lists},{atom,rumerge3_21_3},7}.
  {label,634}.
    {test,is_nonempty_list,{f,637},[{x,4}]}.
    {get_list,{x,4},{x,7},{x,8}}.
    {test,is_ge,{f,635},[{x,7},{x,6}]}.
    {test_heap,2,9}.
    {put_list,{x,5},{x,3},{x,3}}.
    {move,{x,7},{x,5}}.
    {move,{x,8},{x,4}}.
    {call_only,7,{f,634}}.
  {label,635}.
    {test,is_eq,{f,636},[{x,6},{x,5}]}.
    {test_heap,2,9}.
    {put_list,{x,6},{x,3},{x,3}}.
    {move,{x,7},{x,5}}.
    {move,{x,8},{x,4}}.
    {call_only,6,{f,612}}.
  {label,636}.
    {test_heap,4,9}.
    {put_list,{x,5},{x,3},{x,9}}.
    {put_list,{x,6},{x,9},{x,3}}.
    {move,{x,7},{x,5}}.
    {move,{x,8},{x,4}}.
    {call_only,6,{f,612}}.
  {label,637}.
    {test,is_nil,{f,633},[{x,4}]}.
    {test,is_eq,{f,638},[{x,6},{x,5}]}.
    {test_heap,2,7}.
    {put_list,{x,6},{x,3},{x,4}}.
    {move,{x,2},{x,3}}.
    {move,{x,4},{x,2}}.
    {call_only,4,{f,650}}.
  {label,638}.
    {test_heap,4,7}.
    {put_list,{x,5},{x,3},{x,4}}.
    {put_list,{x,6},{x,4},{x,4}}.
    {move,{x,2},{x,3}}.
    {move,{x,4},{x,2}}.
    {call_only,4,{f,650}}.


{function, umerge2_1, 5, 640}.
  {label,639}.
    {line,[{location,"lists.erl",1930}]}.
    {func_info,{atom,lists},{atom,umerge2_1},5}.
  {label,640}.
    {test,is_nonempty_list,{f,643},[{x,0}]}.
    {get_list,{x,0},{x,5},{x,6}}.
    {test,is_ge,{f,641},[{x,4},{x,5}]}.
    {test_heap,2,7}.
    {put_list,{x,5},{x,2},{x,2}}.
    {move,{x,5},{x,3}}.
    {move,{x,6},{x,0}}.
    {call_only,5,{f,640}}.
  {label,641}.
    {test,is_eq,{f,642},[{x,4},{x,3}]}.
    {move,{x,5},{x,3}}.
    {move,{x,6},{x,0}}.
    {call_only,4,{f,646}}.
  {label,642}.
    {test_heap,2,7}.
    {put_list,{x,4},{x,2},{x,2}}.
    {move,{x,5},{x,3}}.
    {move,{x,6},{x,0}}.
    {call_only,4,{f,646}}.
  {label,643}.
    {test,is_nil,{f,639},[{x,0}]}.
    {test,is_eq,{f,644},[{x,4},{x,3}]}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{x,1}}.
    {line,[{location,"lists.erl",1937}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.
  {label,644}.
    {test_heap,2,5}.
    {put_list,{x,4},{x,2},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{x,1}}.
    {line,[{location,"lists.erl",1939}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.


{function, umerge2_2, 4, 646}.
  {label,645}.
    {line,[{location,"lists.erl",1941}]}.
    {func_info,{atom,lists},{atom,umerge2_2},4}.
  {label,646}.
    {test,is_nonempty_list,{f,648},[{x,1}]}.
    {get_list,{x,1},{x,4},{x,5}}.
    {test,is_ge,{f,647},[{x,4},{x,3}]}.
    {test_heap,2,6}.
    {put_list,{x,3},{x,2},{x,2}}.
    {move,{x,5},{x,1}}.
    {call_only,5,{f,640}}.
  {label,647}.
    {test_heap,2,6}.
    {put_list,{x,4},{x,2},{x,2}}.
    {move,{x,5},{x,1}}.
    {call_only,4,{f,646}}.
  {label,648}.
    {test,is_nil,{f,645},[{x,1}]}.
    {test_heap,2,4}.
    {put_list,{x,3},{x,2},{x,1}}.
    {line,[{location,"lists.erl",1946}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.


{function, rumerge2_1, 4, 650}.
  {label,649}.
    {line,[{location,"lists.erl",1951}]}.
    {func_info,{atom,lists},{atom,rumerge2_1},4}.
  {label,650}.
    {test,is_nonempty_list,{f,652},[{x,0}]}.
    {get_list,{x,0},{x,4},{x,5}}.
    {test,is_ge,{f,651},[{x,3},{x,4}]}.
    {move,{x,5},{x,0}}.
    {call_only,5,{f,654}}.
  {label,651}.
    {test_heap,2,6}.
    {put_list,{x,4},{x,2},{x,2}}.
    {move,{x,5},{x,0}}.
    {call_only,4,{f,650}}.
  {label,652}.
    {test,is_nil,{f,649},[{x,0}]}.
    {test_heap,2,4}.
    {put_list,{x,3},{x,2},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{x,1}}.
    {line,[{location,"lists.erl",1956}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.


{function, rumerge2_2, 5, 654}.
  {label,653}.
    {line,[{location,"lists.erl",1959}]}.
    {func_info,{atom,lists},{atom,rumerge2_2},5}.
  {label,654}.
    {test,is_nonempty_list,{f,657},[{x,1}]}.
    {get_list,{x,1},{x,5},{x,6}}.
    {test,is_ge,{f,655},[{x,5},{x,4}]}.
    {test_heap,2,7}.
    {put_list,{x,3},{x,2},{x,2}}.
    {move,{x,5},{x,3}}.
    {move,{x,6},{x,1}}.
    {call_only,5,{f,654}}.
  {label,655}.
    {test,is_eq,{f,656},[{x,4},{x,3}]}.
    {test_heap,2,7}.
    {put_list,{x,4},{x,2},{x,2}}.
    {move,{x,5},{x,3}}.
    {move,{x,6},{x,1}}.
    {call_only,4,{f,650}}.
  {label,656}.
    {test_heap,4,7}.
    {put_list,{x,3},{x,2},{x,7}}.
    {put_list,{x,4},{x,7},{x,2}}.
    {move,{x,5},{x,3}}.
    {move,{x,6},{x,1}}.
    {call_only,4,{f,650}}.
  {label,657}.
    {test,is_nil,{f,653},[{x,1}]}.
    {test,is_eq,{f,658},[{x,4},{x,3}]}.
    {test_heap,2,5}.
    {put_list,{x,4},{x,2},{x,1}}.
    {line,[{location,"lists.erl",1966}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.
  {label,658}.
    {test_heap,4,5}.
    {put_list,{x,3},{x,2},{x,2}}.
    {put_list,{x,4},{x,2},{x,1}}.
    {line,[{location,"lists.erl",1968}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.


{function, keysplit_1, 8, 660}.
  {label,659}.
    {line,[{location,"lists.erl",1973}]}.
    {func_info,{atom,lists},{atom,keysplit_1},8}.
  {label,660}.
    {test,is_nonempty_list,{f,664},[{x,5}]}.
    {get_list,{x,5},{x,8},{x,9}}.
    {line,[{location,"lists.erl",1974}]}.
    {bif,element,{f,0},[{x,0},{x,8}],{x,5}}.
    {test,is_ge,{f,661},[{x,5},{x,4}]}.
    {test_heap,2,10}.
    {put_list,{x,1},{x,6},{x,6}}.
    {move,{x,4},{x,2}}.
    {move,{x,5},{x,4}}.
    {move,{x,9},{x,5}}.
    {move,{x,3},{x,1}}.
    {move,{x,8},{x,3}}.
    {call_only,8,{f,660}}.
  {label,661}.
    {test,is_ge,{f,662},[{x,5},{x,2}]}.
    {test_heap,2,10}.
    {put_list,{x,1},{x,6},{x,6}}.
    {move,{x,5},{x,2}}.
    {move,{x,9},{x,5}}.
    {move,{x,8},{x,1}}.
    {call_only,8,{f,660}}.
  {label,662}.
    {test,is_nil,{f,663},[{x,6}]}.
    {test_heap,2,10}.
    {put_list,{x,8},nil,{x,6}}.
    {move,{x,9},{x,5}}.
    {call_only,8,{f,660}}.
  {label,663}.
    {call_only,10,{f,666}}.
  {label,664}.
    {test,is_nil,{f,659},[{x,5}]}.
    {test_heap,6,8}.
    {put_list,{x,1},{x,6},{x,4}}.
    {put_list,{x,3},{x,4},{x,4}}.
    {put_list,{x,4},{x,7},{x,1}}.
    {move,{atom,asc},{x,3}}.
    {move,nil,{x,2}}.
    {call_only,4,{f,692}}.


{function, keysplit_1_1, 10, 666}.
  {label,665}.
    {line,[{location,"lists.erl",1987}]}.
    {func_info,{atom,lists},{atom,keysplit_1_1},10}.
  {label,666}.
    {test,is_nonempty_list,{f,670},[{x,9}]}.
    {get_list,{x,9},{x,10},{x,11}}.
    {line,[{location,"lists.erl",1988}]}.
    {bif,element,{f,0},[{x,0},{x,10}],{x,9}}.
    {test,is_ge,{f,667},[{x,9},{x,4}]}.
    {test_heap,2,12}.
    {put_list,{x,1},{x,6},{x,6}}.
    {move,{x,4},{x,2}}.
    {move,{x,9},{x,4}}.
    {move,{x,11},{x,9}}.
    {move,{x,3},{x,1}}.
    {move,{x,10},{x,3}}.
    {call_only,10,{f,666}}.
  {label,667}.
    {test,is_ge,{f,668},[{x,9},{x,2}]}.
    {test_heap,2,12}.
    {put_list,{x,1},{x,6},{x,6}}.
    {move,{x,9},{x,2}}.
    {move,{x,11},{x,9}}.
    {move,{x,10},{x,1}}.
    {call_only,10,{f,666}}.
  {label,668}.
    {test,is_ge,{f,669},[{x,9},{x,5}]}.
    {test_heap,6,12}.
    {put_list,{x,1},{x,6},{x,12}}.
    {put_list,{x,3},{x,12},{x,12}}.
    {put_list,{x,12},{x,7},{x,7}}.
    {move,{x,10},{x,3}}.
    {move,{x,9},{x,4}}.
    {move,{x,5},{x,2}}.
    {move,{x,11},{x,5}}.
    {move,nil,{x,6}}.
    {move,{x,8},{x,1}}.
    {call_only,8,{f,660}}.
  {label,669}.
    {test_heap,6,12}.
    {put_list,{x,1},{x,6},{x,12}}.
    {put_list,{x,3},{x,12},{x,12}}.
    {put_list,{x,12},{x,7},{x,7}}.
    {move,{x,5},{x,4}}.
    {move,{x,8},{x,3}}.
    {move,{x,11},{x,5}}.
    {move,{x,9},{x,2}}.
    {move,nil,{x,6}}.
    {move,{x,10},{x,1}}.
    {call_only,8,{f,660}}.
  {label,670}.
    {test,is_nil,{f,665},[{x,9}]}.
    {test_heap,10,9}.
    {put_list,{x,1},{x,6},{x,4}}.
    {put_list,{x,3},{x,4},{x,4}}.
    {put_list,{x,4},{x,7},{x,4}}.
    {put_list,{x,8},nil,{x,5}}.
    {put_list,{x,5},{x,4},{x,1}}.
    {move,{atom,asc},{x,3}}.
    {move,nil,{x,2}}.
    {call_only,4,{f,692}}.


{function, keysplit_2, 8, 672}.
  {label,671}.
    {line,[{location,"lists.erl",2002}]}.
    {func_info,{atom,lists},{atom,keysplit_2},8}.
  {label,672}.
    {test,is_nonempty_list,{f,676},[{x,5}]}.
    {get_list,{x,5},{x,8},{x,9}}.
    {line,[{location,"lists.erl",2003}]}.
    {bif,element,{f,0},[{x,0},{x,8}],{x,5}}.
    {test,is_lt,{f,673},[{x,5},{x,4}]}.
    {test_heap,2,10}.
    {put_list,{x,1},{x,6},{x,6}}.
    {move,{x,4},{x,2}}.
    {move,{x,5},{x,4}}.
    {move,{x,9},{x,5}}.
    {move,{x,3},{x,1}}.
    {move,{x,8},{x,3}}.
    {call_only,8,{f,672}}.
  {label,673}.
    {test,is_lt,{f,674},[{x,5},{x,2}]}.
    {test_heap,2,10}.
    {put_list,{x,1},{x,6},{x,6}}.
    {move,{x,5},{x,2}}.
    {move,{x,9},{x,5}}.
    {move,{x,8},{x,1}}.
    {call_only,8,{f,672}}.
  {label,674}.
    {test,is_nil,{f,675},[{x,6}]}.
    {test_heap,2,10}.
    {put_list,{x,8},nil,{x,6}}.
    {move,{x,9},{x,5}}.
    {call_only,8,{f,672}}.
  {label,675}.
    {call_only,10,{f,678}}.
  {label,676}.
    {test,is_nil,{f,671},[{x,5}]}.
    {test_heap,6,8}.
    {put_list,{x,1},{x,6},{x,4}}.
    {put_list,{x,3},{x,4},{x,4}}.
    {put_list,{x,4},{x,7},{x,1}}.
    {move,{atom,desc},{x,3}}.
    {move,nil,{x,2}}.
    {call_only,4,{f,684}}.


{function, keysplit_2_1, 10, 678}.
  {label,677}.
    {line,[{location,"lists.erl",2016}]}.
    {func_info,{atom,lists},{atom,keysplit_2_1},10}.
  {label,678}.
    {test,is_nonempty_list,{f,682},[{x,9}]}.
    {get_list,{x,9},{x,10},{x,11}}.
    {line,[{location,"lists.erl",2017}]}.
    {bif,element,{f,0},[{x,0},{x,10}],{x,9}}.
    {test,is_lt,{f,679},[{x,9},{x,4}]}.
    {test_heap,2,12}.
    {put_list,{x,1},{x,6},{x,6}}.
    {move,{x,4},{x,2}}.
    {move,{x,9},{x,4}}.
    {move,{x,11},{x,9}}.
    {move,{x,3},{x,1}}.
    {move,{x,10},{x,3}}.
    {call_only,10,{f,678}}.
  {label,679}.
    {test,is_lt,{f,680},[{x,9},{x,2}]}.
    {test_heap,2,12}.
    {put_list,{x,1},{x,6},{x,6}}.
    {move,{x,9},{x,2}}.
    {move,{x,11},{x,9}}.
    {move,{x,10},{x,1}}.
    {call_only,10,{f,678}}.
  {label,680}.
    {test,is_lt,{f,681},[{x,9},{x,5}]}.
    {test_heap,6,12}.
    {put_list,{x,1},{x,6},{x,12}}.
    {put_list,{x,3},{x,12},{x,12}}.
    {put_list,{x,12},{x,7},{x,7}}.
    {move,{x,10},{x,3}}.
    {move,{x,9},{x,4}}.
    {move,{x,5},{x,2}}.
    {move,{x,11},{x,5}}.
    {move,nil,{x,6}}.
    {move,{x,8},{x,1}}.
    {call_only,8,{f,672}}.
  {label,681}.
    {test_heap,6,12}.
    {put_list,{x,1},{x,6},{x,12}}.
    {put_list,{x,3},{x,12},{x,12}}.
    {put_list,{x,12},{x,7},{x,7}}.
    {move,{x,5},{x,4}}.
    {move,{x,8},{x,3}}.
    {move,{x,11},{x,5}}.
    {move,{x,9},{x,2}}.
    {move,nil,{x,6}}.
    {move,{x,10},{x,1}}.
    {call_only,8,{f,672}}.
  {label,682}.
    {test,is_nil,{f,677},[{x,9}]}.
    {test_heap,10,9}.
    {put_list,{x,1},{x,6},{x,4}}.
    {put_list,{x,3},{x,4},{x,4}}.
    {put_list,{x,4},{x,7},{x,4}}.
    {put_list,{x,8},nil,{x,5}}.
    {put_list,{x,5},{x,4},{x,1}}.
    {move,{atom,desc},{x,3}}.
    {move,nil,{x,2}}.
    {call_only,4,{f,684}}.


{function, keymergel, 4, 684}.
  {label,683}.
    {line,[{location,"lists.erl",2030}]}.
    {func_info,{atom,lists},{atom,keymergel},4}.
  {label,684}.
    {test,is_nonempty_list,{f,690},[{x,1}]}.
    {get_list,{x,1},{x,4},{x,5}}.
    {test,is_nonempty_list,{f,685},[{x,5}]}.
    {get_list,{x,5},{x,6},{x,7}}.
    {test,is_nonempty_list,{f,685},[{x,6}]}.
    {get_list,{x,6},{x,8},{x,9}}.
    {test,is_nonempty_list,{f,685},[{x,7}]}.
    {get_list,{x,7},{x,10},{x,11}}.
    {test,is_nonempty_list,{f,685},[{x,10}]}.
    {get_list,{x,10},{x,12},{x,13}}.
    {test,is_eq_exact,{f,685},[{x,3},{atom,asc}]}.
    {allocate_zero,4,14}.
    {line,[{location,"lists.erl",2031}]}.
    {bif,element,{f,0},[{x,0},{x,8}],{x,1}}.
    {line,[{location,"lists.erl",2031}]}.
    {bif,element,{f,0},[{x,0},{x,12}],{x,7}}.
    {move,{x,2},{y,0}}.
    {move,{x,9},{x,6}}.
    {move,{x,8},{x,5}}.
    {move,{x,12},{x,8}}.
    {move,{x,13},{x,9}}.
    {move,nil,{x,2}}.
    {move,{x,4},{x,14}}.
    {move,{x,1},{x,4}}.
    {move,{x,14},{x,1}}.
    {move,{x,3},{y,1}}.
    {move,{x,0},{y,2}}.
    {move,{x,11},{y,3}}.
    {line,[{location,"lists.erl",2031}]}.
    {call,10,{f,699}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,2}}.
    {move,{y,3},{x,1}}.
    {move,{y,1},{x,3}}.
    {move,{y,2},{x,0}}.
    {call_last,4,{f,684},4}.
  {label,685}.
    {test,is_nonempty_list,{f,686},[{x,4}]}.
    {get_list,{x,4},{x,6},{x,7}}.
    {test,is_nonempty_list,{f,687},[{x,5}]}.
    {get_list,{x,5},{x,8},{x,9}}.
    {test,is_nonempty_list,{f,686},[{x,8}]}.
    {get_list,{x,8},{x,10},{x,11}}.
    {test,is_nonempty_list,{f,686},[{x,9}]}.
    {get_list,{x,9},{x,12},{x,13}}.
    {test,is_eq_exact,{f,686},[{x,3},{atom,desc}]}.
    {allocate_zero,4,14}.
    {line,[{location,"lists.erl",2034}]}.
    {bif,element,{f,0},[{x,0},{x,10}],{x,1}}.
    {line,[{location,"lists.erl",2034}]}.
    {bif,element,{f,0},[{x,0},{x,6}],{x,4}}.
    {move,{x,2},{y,0}}.
    {move,{x,10},{x,5}}.
    {move,{x,6},{x,8}}.
    {move,{x,11},{x,6}}.
    {move,nil,{x,2}}.
    {move,{x,7},{x,9}}.
    {move,{x,4},{x,7}}.
    {move,{x,1},{x,4}}.
    {move,{x,12},{x,1}}.
    {move,{x,3},{y,1}}.
    {move,{x,0},{y,2}}.
    {move,{x,13},{y,3}}.
    {line,[{location,"lists.erl",2034}]}.
    {call,10,{f,699}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,2}}.
    {move,{y,3},{x,1}}.
    {move,{y,1},{x,3}}.
    {move,{y,2},{x,0}}.
    {call_last,4,{f,684},4}.
  {label,686}.
    {test,is_nonempty_list,{f,687},[{x,5}]}.
    {get_list,{x,5},{x,6},{x,7}}.
    {test,is_nonempty_list,{f,687},[{x,6}]}.
    {get_list,{x,6},{x,8},{x,9}}.
    {test,is_eq_exact,{f,687},[{x,3},{atom,asc}]}.
    {allocate_zero,3,10}.
    {line,[{location,"lists.erl",2037}]}.
    {bif,element,{f,0},[{x,0},{x,8}],{x,1}}.
    {move,{x,2},{y,0}}.
    {move,{x,8},{x,3}}.
    {move,{x,1},{x,2}}.
    {move,nil,{x,5}}.
    {move,{x,4},{x,1}}.
    {move,{x,9},{x,4}}.
    {move,{x,0},{y,1}}.
    {move,{x,7},{y,2}}.
    {line,[{location,"lists.erl",2037}]}.
    {call,6,{f,743}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,2}}.
    {move,{y,2},{x,1}}.
    {move,{atom,asc},{x,3}}.
    {move,{y,1},{x,0}}.
    {call_last,4,{f,684},3}.
  {label,687}.
    {test,is_nonempty_list,{f,688},[{x,4}]}.
    {get_list,{x,4},{x,6},{x,7}}.
    {test,is_nonempty_list,{f,688},[{x,5}]}.
    {get_list,{x,5},{x,8},{x,9}}.
    {test,is_eq_exact,{f,688},[{x,3},{atom,desc}]}.
    {allocate_zero,3,10}.
    {line,[{location,"lists.erl",2039}]}.
    {bif,element,{f,0},[{x,0},{x,6}],{x,1}}.
    {move,{x,2},{y,0}}.
    {move,{x,6},{x,3}}.
    {move,{x,7},{x,4}}.
    {move,{x,1},{x,2}}.
    {move,nil,{x,5}}.
    {move,{x,8},{x,1}}.
    {move,{x,0},{y,1}}.
    {move,{x,9},{y,2}}.
    {line,[{location,"lists.erl",2039}]}.
    {call,6,{f,743}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,2}}.
    {move,{y,2},{x,1}}.
    {move,{atom,desc},{x,3}}.
    {move,{y,1},{x,0}}.
    {call_last,4,{f,684},3}.
  {label,688}.
    {test,is_nil,{f,683},[{x,5}]}.
    {test,is_nil,{f,689},[{x,2}]}.
    {move,{x,4},{x,0}}.
    return.
  {label,689}.
    {allocate,3,5}.
    {move,{x,0},{y,2}}.
    {move,nil,{x,1}}.
    {move,{x,4},{x,0}}.
    {move,{x,2},{y,0}}.
    {move,{x,3},{y,1}}.
    {line,[{location,"lists.erl",2043}]}.
    {call_ext,2,{extfunc,lists,reverse,2}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,1}}.
    {move,nil,{x,2}}.
    {move,{y,1},{x,3}}.
    {move,{y,2},{x,0}}.
    {call_last,4,{f,692},3}.
  {label,690}.
    {test,is_nil,{f,683},[{x,1}]}.
    {move,{x,2},{x,1}}.
    {move,nil,{x,2}}.
    {call_only,4,{f,692}}.


{function, rkeymergel, 4, 692}.
  {label,691}.
    {line,[{location,"lists.erl",2047}]}.
    {func_info,{atom,lists},{atom,rkeymergel},4}.
  {label,692}.
    {test,is_nonempty_list,{f,697},[{x,1}]}.
    {get_list,{x,1},{x,4},{x,5}}.
    {test,is_nonempty_list,{f,693},[{x,4}]}.
    {get_list,{x,4},{x,6},{x,7}}.
    {test,is_nonempty_list,{f,694},[{x,5}]}.
    {get_list,{x,5},{x,8},{x,9}}.
    {test,is_nonempty_list,{f,693},[{x,8}]}.
    {get_list,{x,8},{x,10},{x,11}}.
    {test,is_nonempty_list,{f,693},[{x,9}]}.
    {get_list,{x,9},{x,12},{x,13}}.
    {test,is_eq_exact,{f,693},[{x,3},{atom,asc}]}.
    {allocate_zero,4,14}.
    {line,[{location,"lists.erl",2048}]}.
    {bif,element,{f,0},[{x,0},{x,10}],{x,1}}.
    {line,[{location,"lists.erl",2048}]}.
    {bif,element,{f,0},[{x,0},{x,6}],{x,4}}.
    {move,{x,2},{y,0}}.
    {move,{x,10},{x,5}}.
    {move,{x,6},{x,8}}.
    {move,{x,11},{x,6}}.
    {move,nil,{x,2}}.
    {move,{x,7},{x,9}}.
    {move,{x,4},{x,7}}.
    {move,{x,1},{x,4}}.
    {move,{x,12},{x,1}}.
    {move,{x,3},{y,1}}.
    {move,{x,0},{y,2}}.
    {move,{x,13},{y,3}}.
    {line,[{location,"lists.erl",2048}]}.
    {call,10,{f,721}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,2}}.
    {move,{y,3},{x,1}}.
    {move,{y,1},{x,3}}.
    {move,{y,2},{x,0}}.
    {call_last,4,{f,692},4}.
  {label,693}.
    {test,is_nonempty_list,{f,694},[{x,5}]}.
    {get_list,{x,5},{x,6},{x,7}}.
    {test,is_nonempty_list,{f,694},[{x,6}]}.
    {get_list,{x,6},{x,8},{x,9}}.
    {test,is_nonempty_list,{f,694},[{x,7}]}.
    {get_list,{x,7},{x,10},{x,11}}.
    {test,is_nonempty_list,{f,694},[{x,10}]}.
    {get_list,{x,10},{x,12},{x,13}}.
    {test,is_eq_exact,{f,694},[{x,3},{atom,desc}]}.
    {allocate_zero,4,14}.
    {line,[{location,"lists.erl",2051}]}.
    {bif,element,{f,0},[{x,0},{x,8}],{x,1}}.
    {line,[{location,"lists.erl",2051}]}.
    {bif,element,{f,0},[{x,0},{x,12}],{x,7}}.
    {move,{x,2},{y,0}}.
    {move,{x,9},{x,6}}.
    {move,{x,8},{x,5}}.
    {move,{x,12},{x,8}}.
    {move,{x,13},{x,9}}.
    {move,nil,{x,2}}.
    {move,{x,4},{x,14}}.
    {move,{x,1},{x,4}}.
    {move,{x,14},{x,1}}.
    {move,{x,3},{y,1}}.
    {move,{x,0},{y,2}}.
    {move,{x,11},{y,3}}.
    {line,[{location,"lists.erl",2051}]}.
    {call,10,{f,721}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,2}}.
    {move,{y,3},{x,1}}.
    {move,{y,1},{x,3}}.
    {move,{y,2},{x,0}}.
    {call_last,4,{f,692},4}.
  {label,694}.
    {test,is_nonempty_list,{f,695},[{x,4}]}.
    {get_list,{x,4},{x,6},{x,7}}.
    {test,is_nonempty_list,{f,696},[{x,5}]}.
    {get_list,{x,5},{x,8},{x,9}}.
    {test,is_eq_exact,{f,695},[{x,3},{atom,asc}]}.
    {allocate_zero,3,10}.
    {line,[{location,"lists.erl",2054}]}.
    {bif,element,{f,0},[{x,0},{x,6}],{x,1}}.
    {move,{x,2},{y,0}}.
    {move,{x,6},{x,3}}.
    {move,{x,7},{x,4}}.
    {move,{x,1},{x,2}}.
    {move,nil,{x,5}}.
    {move,{x,8},{x,1}}.
    {move,{x,0},{y,1}}.
    {move,{x,9},{y,2}}.
    {line,[{location,"lists.erl",2054}]}.
    {call,6,{f,751}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,2}}.
    {move,{y,2},{x,1}}.
    {move,{atom,asc},{x,3}}.
    {move,{y,1},{x,0}}.
    {call_last,4,{f,692},3}.
  {label,695}.
    {test,is_nonempty_list,{f,696},[{x,5}]}.
    {get_list,{x,5},{x,6},{x,7}}.
    {test,is_nonempty_list,{f,691},[{x,6}]}.
    {get_list,{x,6},{x,8},{x,9}}.
    {test,is_eq_exact,{f,691},[{x,3},{atom,desc}]}.
    {allocate_zero,3,10}.
    {line,[{location,"lists.erl",2056}]}.
    {bif,element,{f,0},[{x,0},{x,8}],{x,1}}.
    {move,{x,2},{y,0}}.
    {move,{x,8},{x,3}}.
    {move,{x,1},{x,2}}.
    {move,nil,{x,5}}.
    {move,{x,4},{x,1}}.
    {move,{x,9},{x,4}}.
    {move,{x,0},{y,1}}.
    {move,{x,7},{y,2}}.
    {line,[{location,"lists.erl",2056}]}.
    {call,6,{f,751}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,2}}.
    {move,{y,2},{x,1}}.
    {move,{atom,desc},{x,3}}.
    {move,{y,1},{x,0}}.
    {call_last,4,{f,692},3}.
  {label,696}.
    {test,is_nil,{f,691},[{x,5}]}.
    {allocate,3,5}.
    {move,{x,0},{y,2}}.
    {move,nil,{x,1}}.
    {move,{x,4},{x,0}}.
    {move,{x,2},{y,0}}.
    {move,{x,3},{y,1}}.
    {line,[{location,"lists.erl",2058}]}.
    {call_ext,2,{extfunc,lists,reverse,2}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,1}}.
    {move,nil,{x,2}}.
    {move,{y,1},{x,3}}.
    {move,{y,2},{x,0}}.
    {call_last,4,{f,684},3}.
  {label,697}.
    {test,is_nil,{f,691},[{x,1}]}.
    {move,{x,2},{x,1}}.
    {move,nil,{x,2}}.
    {call_only,4,{f,684}}.


{function, keymerge3_1, 10, 699}.
  {label,698}.
    {line,[{location,"lists.erl",2065}]}.
    {func_info,{atom,lists},{atom,keymerge3_1},10}.
  {label,699}.
    {test,is_nonempty_list,{f,703},[{x,1}]}.
    {get_list,{x,1},{x,10},{x,11}}.
    {line,[{location,"lists.erl",2066}]}.
    {bif,element,{f,0},[{x,0},{x,10}],{x,1}}.
    {test,is_ge,{f,701},[{x,4},{x,1}]}.
    {test,is_ge,{f,700},[{x,7},{x,1}]}.
    {test_heap,2,12}.
    {put_list,{x,10},{x,2},{x,2}}.
    {move,{x,11},{x,1}}.
    {call_only,10,{f,699}}.
  {label,700}.
    {test_heap,2,12}.
    {put_list,{x,8},{x,2},{x,8}}.
    {move,{x,11},{x,3}}.
    {move,{x,9},{x,7}}.
    {move,{x,10},{x,2}}.
    {call_only,9,{f,713}}.
  {label,701}.
    {test,is_ge,{f,702},[{x,7},{x,4}]}.
    {test_heap,2,12}.
    {put_list,{x,5},{x,2},{x,5}}.
    {move,{x,11},{x,3}}.
    {move,{x,6},{x,4}}.
    {move,{x,10},{x,2}}.
    {call_only,10,{f,706}}.
  {label,702}.
    {test_heap,2,12}.
    {put_list,{x,8},{x,2},{x,8}}.
    {move,{x,11},{x,3}}.
    {move,{x,9},{x,7}}.
    {move,{x,10},{x,2}}.
    {call_only,9,{f,717}}.
  {label,703}.
    {test,is_nil,{f,698},[{x,1}]}.
    {test,is_ge,{f,704},[{x,7},{x,4}]}.
    {test_heap,2,10}.
    {put_list,{x,5},{x,2},{x,5}}.
    {move,{x,8},{x,3}}.
    {move,{x,7},{x,2}}.
    {move,{x,9},{x,4}}.
    {move,{x,6},{x,1}}.
    {call_only,6,{f,743}}.
  {label,704}.
    {move,{x,8},{x,3}}.
    {move,{x,6},{x,1}}.
    {move,{x,5},{x,6}}.
    {move,{x,2},{x,5}}.
    {move,{x,4},{x,2}}.
    {move,{x,9},{x,4}}.
    {call_only,7,{f,747}}.


{function, keymerge3_2, 10, 706}.
  {label,705}.
    {line,[{location,"lists.erl",2078}]}.
    {func_info,{atom,lists},{atom,keymerge3_2},10}.
  {label,706}.
    {test,is_nonempty_list,{f,710},[{x,4}]}.
    {get_list,{x,4},{x,10},{x,11}}.
    {line,[{location,"lists.erl",2079}]}.
    {bif,element,{f,0},[{x,0},{x,10}],{x,4}}.
    {test,is_ge,{f,708},[{x,4},{x,1}]}.
    {test,is_ge,{f,707},[{x,7},{x,1}]}.
    {test_heap,2,12}.
    {put_list,{x,2},{x,5},{x,2}}.
    {move,{x,10},{x,5}}.
    {move,{x,11},{x,6}}.
    {move,{x,3},{x,1}}.
    {call_only,10,{f,699}}.
  {label,707}.
    {test_heap,2,12}.
    {put_list,{x,8},{x,5},{x,8}}.
    {move,{x,11},{x,6}}.
    {move,{x,9},{x,7}}.
    {move,{x,10},{x,5}}.
    {call_only,9,{f,713}}.
  {label,708}.
    {test,is_ge,{f,709},[{x,7},{x,4}]}.
    {test_heap,2,12}.
    {put_list,{x,10},{x,5},{x,5}}.
    {move,{x,11},{x,4}}.
    {call_only,10,{f,706}}.
  {label,709}.
    {test_heap,2,12}.
    {put_list,{x,8},{x,5},{x,8}}.
    {move,{x,11},{x,6}}.
    {move,{x,9},{x,7}}.
    {move,{x,10},{x,5}}.
    {call_only,9,{f,717}}.
  {label,710}.
    {test,is_nil,{f,705},[{x,4}]}.
    {test,is_ge,{f,711},[{x,7},{x,1}]}.
    {test_heap,2,10}.
    {put_list,{x,2},{x,5},{x,5}}.
    {move,{x,7},{x,2}}.
    {move,{x,9},{x,4}}.
    {move,{x,3},{x,1}}.
    {move,{x,8},{x,3}}.
    {call_only,6,{f,743}}.
  {label,711}.
    {move,{x,9},{x,4}}.
    {move,{x,2},{x,6}}.
    {move,{x,1},{x,2}}.
    {move,{x,3},{x,1}}.
    {move,{x,8},{x,3}}.
    {call_only,7,{f,747}}.


{function, keymerge3_12_3, 9, 713}.
  {label,712}.
    {line,[{location,"lists.erl",2097}]}.
    {func_info,{atom,lists},{atom,keymerge3_12_3},9}.
  {label,713}.
    {test,is_nonempty_list,{f,715},[{x,7}]}.
    {get_list,{x,7},{x,9},{x,10}}.
    {line,[{location,"lists.erl",2098}]}.
    {bif,element,{f,0},[{x,0},{x,9}],{x,7}}.
    {test,is_ge,{f,714},[{x,7},{x,1}]}.
    {test_heap,2,11}.
    {put_list,{x,2},{x,8},{x,2}}.
    {move,{x,9},{x,8}}.
    {move,{x,10},{x,9}}.
    {move,{x,3},{x,1}}.
    {call_only,10,{f,699}}.
  {label,714}.
    {test_heap,2,11}.
    {put_list,{x,9},{x,8},{x,8}}.
    {move,{x,10},{x,7}}.
    {call_only,9,{f,713}}.
  {label,715}.
    {test,is_nil,{f,712},[{x,7}]}.
    {test_heap,2,9}.
    {put_list,{x,2},{x,8},{x,7}}.
    {move,{x,4},{x,2}}.
    {move,{x,6},{x,4}}.
    {move,{x,3},{x,1}}.
    {move,{x,5},{x,3}}.
    {move,{x,7},{x,5}}.
    {call_only,6,{f,743}}.


{function, keymerge3_21_3, 9, 717}.
  {label,716}.
    {line,[{location,"lists.erl",2114}]}.
    {func_info,{atom,lists},{atom,keymerge3_21_3},9}.
  {label,717}.
    {test,is_nonempty_list,{f,719},[{x,7}]}.
    {get_list,{x,7},{x,9},{x,10}}.
    {line,[{location,"lists.erl",2115}]}.
    {bif,element,{f,0},[{x,0},{x,9}],{x,7}}.
    {test,is_ge,{f,718},[{x,7},{x,4}]}.
    {test_heap,2,11}.
    {put_list,{x,5},{x,8},{x,5}}.
    {move,{x,9},{x,8}}.
    {move,{x,10},{x,9}}.
    {move,{x,6},{x,4}}.
    {call_only,10,{f,706}}.
  {label,718}.
    {test_heap,2,11}.
    {put_list,{x,9},{x,8},{x,8}}.
    {move,{x,10},{x,7}}.
    {call_only,9,{f,717}}.
  {label,719}.
    {test,is_nil,{f,716},[{x,7}]}.
    {move,{x,6},{x,4}}.
    {move,{x,2},{x,6}}.
    {move,{x,1},{x,2}}.
    {move,{x,3},{x,1}}.
    {move,{x,5},{x,3}}.
    {move,{x,8},{x,5}}.
    {call_only,7,{f,747}}.


{function, rkeymerge3_1, 10, 721}.
  {label,720}.
    {line,[{location,"lists.erl",2125}]}.
    {func_info,{atom,lists},{atom,rkeymerge3_1},10}.
  {label,721}.
    {test,is_nonempty_list,{f,725},[{x,1}]}.
    {get_list,{x,1},{x,10},{x,11}}.
    {line,[{location,"lists.erl",2126}]}.
    {bif,element,{f,0},[{x,0},{x,10}],{x,1}}.
    {test,is_ge,{f,723},[{x,4},{x,1}]}.
    {test,is_ge,{f,722},[{x,7},{x,4}]}.
    {test_heap,2,12}.
    {put_list,{x,8},{x,2},{x,8}}.
    {move,{x,11},{x,3}}.
    {move,{x,9},{x,7}}.
    {move,{x,10},{x,2}}.
    {call_only,9,{f,735}}.
  {label,722}.
    {test_heap,2,12}.
    {put_list,{x,5},{x,2},{x,5}}.
    {move,{x,11},{x,3}}.
    {move,{x,6},{x,4}}.
    {move,{x,10},{x,2}}.
    {call_only,10,{f,728}}.
  {label,723}.
    {test,is_ge,{f,724},[{x,7},{x,1}]}.
    {test_heap,2,12}.
    {put_list,{x,8},{x,2},{x,8}}.
    {move,{x,11},{x,3}}.
    {move,{x,9},{x,7}}.
    {move,{x,10},{x,2}}.
    {call_only,9,{f,739}}.
  {label,724}.
    {test_heap,2,12}.
    {put_list,{x,10},{x,2},{x,2}}.
    {move,{x,11},{x,1}}.
    {call_only,10,{f,721}}.
  {label,725}.
    {test,is_nil,{f,720},[{x,1}]}.
    {test,is_ge,{f,726},[{x,7},{x,4}]}.
    {move,{x,8},{x,3}}.
    {move,{x,5},{x,7}}.
    {move,{x,2},{x,5}}.
    {move,{x,6},{x,2}}.
    {move,{x,7},{x,6}}.
    {move,{x,4},{x,1}}.
    {move,{x,9},{x,4}}.
    {call_only,7,{f,755}}.
  {label,726}.
    {test_heap,2,10}.
    {put_list,{x,5},{x,2},{x,5}}.
    {move,{x,8},{x,3}}.
    {move,{x,7},{x,2}}.
    {move,{x,9},{x,4}}.
    {move,{x,6},{x,1}}.
    {call_only,6,{f,751}}.


{function, rkeymerge3_2, 10, 728}.
  {label,727}.
    {line,[{location,"lists.erl",2138}]}.
    {func_info,{atom,lists},{atom,rkeymerge3_2},10}.
  {label,728}.
    {test,is_nonempty_list,{f,732},[{x,4}]}.
    {get_list,{x,4},{x,10},{x,11}}.
    {line,[{location,"lists.erl",2139}]}.
    {bif,element,{f,0},[{x,0},{x,10}],{x,4}}.
    {test,is_ge,{f,730},[{x,4},{x,1}]}.
    {test,is_ge,{f,729},[{x,7},{x,4}]}.
    {test_heap,2,12}.
    {put_list,{x,8},{x,5},{x,8}}.
    {move,{x,11},{x,6}}.
    {move,{x,9},{x,7}}.
    {move,{x,10},{x,5}}.
    {call_only,9,{f,735}}.
  {label,729}.
    {test_heap,2,12}.
    {put_list,{x,10},{x,5},{x,5}}.
    {move,{x,11},{x,4}}.
    {call_only,10,{f,728}}.
  {label,730}.
    {test,is_ge,{f,731},[{x,7},{x,1}]}.
    {test_heap,2,12}.
    {put_list,{x,8},{x,5},{x,8}}.
    {move,{x,11},{x,6}}.
    {move,{x,9},{x,7}}.
    {move,{x,10},{x,5}}.
    {call_only,9,{f,739}}.
  {label,731}.
    {test_heap,2,12}.
    {put_list,{x,2},{x,5},{x,2}}.
    {move,{x,10},{x,5}}.
    {move,{x,11},{x,6}}.
    {move,{x,3},{x,1}}.
    {call_only,10,{f,721}}.
  {label,732}.
    {test,is_nil,{f,727},[{x,4}]}.
    {test,is_ge,{f,733},[{x,7},{x,1}]}.
    {move,{x,9},{x,4}}.
    {move,{x,2},{x,6}}.
    {move,{x,3},{x,2}}.
    {move,{x,8},{x,3}}.
    {call_only,7,{f,755}}.
  {label,733}.
    {test_heap,2,10}.
    {put_list,{x,2},{x,5},{x,5}}.
    {move,{x,7},{x,2}}.
    {move,{x,9},{x,4}}.
    {move,{x,3},{x,1}}.
    {move,{x,8},{x,3}}.
    {call_only,6,{f,751}}.


{function, rkeymerge3_12_3, 9, 735}.
  {label,734}.
    {line,[{location,"lists.erl",2157}]}.
    {func_info,{atom,lists},{atom,rkeymerge3_12_3},9}.
  {label,735}.
    {test,is_nonempty_list,{f,737},[{x,7}]}.
    {get_list,{x,7},{x,9},{x,10}}.
    {line,[{location,"lists.erl",2158}]}.
    {bif,element,{f,0},[{x,0},{x,9}],{x,7}}.
    {test,is_ge,{f,736},[{x,7},{x,4}]}.
    {test_heap,2,11}.
    {put_list,{x,9},{x,8},{x,8}}.
    {move,{x,10},{x,7}}.
    {call_only,9,{f,735}}.
  {label,736}.
    {test_heap,2,11}.
    {put_list,{x,5},{x,8},{x,5}}.
    {move,{x,9},{x,8}}.
    {move,{x,10},{x,9}}.
    {move,{x,6},{x,4}}.
    {call_only,10,{f,728}}.
  {label,737}.
    {test,is_nil,{f,734},[{x,7}]}.
    {move,{x,6},{x,4}}.
    {move,{x,2},{x,6}}.
    {move,{x,3},{x,2}}.
    {move,{x,5},{x,3}}.
    {move,{x,8},{x,5}}.
    {call_only,7,{f,755}}.


{function, rkeymerge3_21_3, 9, 739}.
  {label,738}.
    {line,[{location,"lists.erl",2174}]}.
    {func_info,{atom,lists},{atom,rkeymerge3_21_3},9}.
  {label,739}.
    {test,is_nonempty_list,{f,741},[{x,7}]}.
    {get_list,{x,7},{x,9},{x,10}}.
    {line,[{location,"lists.erl",2175}]}.
    {bif,element,{f,0},[{x,0},{x,9}],{x,7}}.
    {test,is_ge,{f,740},[{x,7},{x,1}]}.
    {test_heap,2,11}.
    {put_list,{x,9},{x,8},{x,8}}.
    {move,{x,10},{x,7}}.
    {call_only,9,{f,739}}.
  {label,740}.
    {test_heap,2,11}.
    {put_list,{x,2},{x,8},{x,2}}.
    {move,{x,9},{x,8}}.
    {move,{x,10},{x,9}}.
    {move,{x,3},{x,1}}.
    {call_only,10,{f,721}}.
  {label,741}.
    {test,is_nil,{f,738},[{x,7}]}.
    {test_heap,2,9}.
    {put_list,{x,2},{x,8},{x,7}}.
    {move,{x,4},{x,2}}.
    {move,{x,6},{x,4}}.
    {move,{x,3},{x,1}}.
    {move,{x,5},{x,3}}.
    {move,{x,7},{x,5}}.
    {call_only,6,{f,751}}.


{function, keymerge2_1, 6, 743}.
  {label,742}.
    {line,[{location,"lists.erl",2187}]}.
    {func_info,{atom,lists},{atom,keymerge2_1},6}.
  {label,743}.
    {test,is_nonempty_list,{f,745},[{x,1}]}.
    {get_list,{x,1},{x,6},{x,7}}.
    {line,[{location,"lists.erl",2188}]}.
    {bif,element,{f,0},[{x,0},{x,6}],{x,1}}.
    {test,is_ge,{f,744},[{x,2},{x,1}]}.
    {test_heap,2,8}.
    {put_list,{x,6},{x,5},{x,5}}.
    {move,{x,7},{x,1}}.
    {call_only,6,{f,743}}.
  {label,744}.
    {move,{x,1},{x,2}}.
    {move,{x,7},{x,1}}.
    {call_only,7,{f,747}}.
  {label,745}.
    {test,is_nil,{f,742},[{x,1}]}.
    {test_heap,2,6}.
    {put_list,{x,3},{x,5},{x,1}}.
    {move,{x,4},{x,0}}.
    {line,[{location,"lists.erl",2195}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.


{function, keymerge2_2, 7, 747}.
  {label,746}.
    {line,[{location,"lists.erl",2197}]}.
    {func_info,{atom,lists},{atom,keymerge2_2},7}.
  {label,747}.
    {test,is_nonempty_list,{f,749},[{x,4}]}.
    {get_list,{x,4},{x,7},{x,8}}.
    {line,[{location,"lists.erl",2198}]}.
    {bif,element,{f,0},[{x,0},{x,7}],{x,4}}.
    {test,is_ge,{f,748},[{x,4},{x,2}]}.
    {test_heap,4,9}.
    {put_list,{x,3},{x,5},{x,9}}.
    {put_list,{x,6},{x,9},{x,5}}.
    {move,{x,7},{x,3}}.
    {move,{x,4},{x,2}}.
    {move,{x,8},{x,4}}.
    {call_only,6,{f,743}}.
  {label,748}.
    {test_heap,2,9}.
    {put_list,{x,3},{x,5},{x,5}}.
    {move,{x,8},{x,4}}.
    {move,{x,7},{x,3}}.
    {call_only,7,{f,747}}.
  {label,749}.
    {test,is_nil,{f,746},[{x,4}]}.
    {test_heap,4,7}.
    {put_list,{x,3},{x,5},{x,2}}.
    {put_list,{x,6},{x,2},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{x,1}}.
    {line,[{location,"lists.erl",2205}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.


{function, rkeymerge2_1, 6, 751}.
  {label,750}.
    {line,[{location,"lists.erl",2209}]}.
    {func_info,{atom,lists},{atom,rkeymerge2_1},6}.
  {label,751}.
    {test,is_nonempty_list,{f,753},[{x,1}]}.
    {get_list,{x,1},{x,6},{x,7}}.
    {line,[{location,"lists.erl",2210}]}.
    {bif,element,{f,0},[{x,0},{x,6}],{x,1}}.
    {test,is_ge,{f,752},[{x,2},{x,1}]}.
    {move,{x,7},{x,2}}.
    {call_only,7,{f,755}}.
  {label,752}.
    {test_heap,2,8}.
    {put_list,{x,6},{x,5},{x,5}}.
    {move,{x,7},{x,1}}.
    {call_only,6,{f,751}}.
  {label,753}.
    {test,is_nil,{f,750},[{x,1}]}.
    {test_heap,2,6}.
    {put_list,{x,3},{x,5},{x,1}}.
    {move,{x,4},{x,0}}.
    {line,[{location,"lists.erl",2217}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.


{function, rkeymerge2_2, 7, 755}.
  {label,754}.
    {line,[{location,"lists.erl",2219}]}.
    {func_info,{atom,lists},{atom,rkeymerge2_2},7}.
  {label,755}.
    {test,is_nonempty_list,{f,757},[{x,4}]}.
    {get_list,{x,4},{x,7},{x,8}}.
    {line,[{location,"lists.erl",2220}]}.
    {bif,element,{f,0},[{x,0},{x,7}],{x,4}}.
    {test,is_ge,{f,756},[{x,4},{x,1}]}.
    {test_heap,2,9}.
    {put_list,{x,3},{x,5},{x,5}}.
    {move,{x,8},{x,4}}.
    {move,{x,7},{x,3}}.
    {call_only,7,{f,755}}.
  {label,756}.
    {test_heap,4,9}.
    {put_list,{x,3},{x,5},{x,9}}.
    {put_list,{x,6},{x,9},{x,5}}.
    {move,{x,7},{x,3}}.
    {move,{x,2},{x,1}}.
    {move,{x,4},{x,2}}.
    {move,{x,8},{x,4}}.
    {call_only,6,{f,751}}.
  {label,757}.
    {test,is_nil,{f,754},[{x,4}]}.
    {test_heap,4,7}.
    {put_list,{x,3},{x,5},{x,3}}.
    {put_list,{x,6},{x,3},{x,1}}.
    {move,{x,2},{x,0}}.
    {line,[{location,"lists.erl",2227}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.


{function, ukeysplit_1, 8, 759}.
  {label,758}.
    {line,[{location,"lists.erl",2232}]}.
    {func_info,{atom,lists},{atom,ukeysplit_1},8}.
  {label,759}.
    {test,is_nonempty_list,{f,765},[{x,5}]}.
    {get_list,{x,5},{x,8},{x,9}}.
    {line,[{location,"lists.erl",2233}]}.
    {bif,element,{f,0},[{x,0},{x,8}],{x,5}}.
    {test,is_eq,{f,760},[{x,4},{x,5}]}.
    {move,{x,9},{x,5}}.
    {call_only,8,{f,759}}.
  {label,760}.
    {test,is_lt,{f,761},[{x,4},{x,5}]}.
    {test_heap,2,10}.
    {put_list,{x,1},{x,6},{x,6}}.
    {move,{x,4},{x,2}}.
    {move,{x,5},{x,4}}.
    {move,{x,9},{x,5}}.
    {move,{x,3},{x,1}}.
    {move,{x,8},{x,3}}.
    {call_only,8,{f,759}}.
  {label,761}.
    {test,is_eq,{f,762},[{x,2},{x,5}]}.
    {move,{x,9},{x,5}}.
    {call_only,8,{f,759}}.
  {label,762}.
    {test,is_lt,{f,763},[{x,2},{x,5}]}.
    {test_heap,2,10}.
    {put_list,{x,1},{x,6},{x,6}}.
    {move,{x,5},{x,2}}.
    {move,{x,9},{x,5}}.
    {move,{x,8},{x,1}}.
    {call_only,8,{f,759}}.
  {label,763}.
    {test,is_nil,{f,764},[{x,6}]}.
    {test_heap,2,10}.
    {put_list,{x,8},nil,{x,6}}.
    {move,{x,9},{x,5}}.
    {call_only,8,{f,759}}.
  {label,764}.
    {move,{x,9},{x,10}}.
    {move,{x,5},{x,9}}.
    {move,{x,10},{x,5}}.
    {call_only,10,{f,767}}.
  {label,765}.
    {test,is_nil,{f,758},[{x,5}]}.
    {test_heap,6,8}.
    {put_list,{x,1},{x,6},{x,4}}.
    {put_list,{x,3},{x,4},{x,3}}.
    {put_list,{x,3},{x,7},{x,1}}.
    {move,nil,{x,2}}.
    {call_only,3,{f,787}}.


{function, ukeysplit_1_1, 10, 767}.
  {label,766}.
    {line,[{location,"lists.erl",2250}]}.
    {func_info,{atom,lists},{atom,ukeysplit_1_1},10}.
  {label,767}.
    {test,is_nonempty_list,{f,774},[{x,5}]}.
    {get_list,{x,5},{x,10},{x,11}}.
    {line,[{location,"lists.erl",2251}]}.
    {bif,element,{f,0},[{x,0},{x,10}],{x,5}}.
    {test,is_eq,{f,768},[{x,4},{x,5}]}.
    {move,{x,11},{x,5}}.
    {call_only,10,{f,767}}.
  {label,768}.
    {test,is_lt,{f,769},[{x,4},{x,5}]}.
    {test_heap,2,12}.
    {put_list,{x,1},{x,6},{x,6}}.
    {move,{x,4},{x,2}}.
    {move,{x,5},{x,4}}.
    {move,{x,11},{x,5}}.
    {move,{x,3},{x,1}}.
    {move,{x,10},{x,3}}.
    {call_only,10,{f,767}}.
  {label,769}.
    {test,is_eq,{f,770},[{x,2},{x,5}]}.
    {move,{x,11},{x,5}}.
    {call_only,10,{f,767}}.
  {label,770}.
    {test,is_lt,{f,771},[{x,2},{x,5}]}.
    {test_heap,2,12}.
    {put_list,{x,1},{x,6},{x,6}}.
    {move,{x,5},{x,2}}.
    {move,{x,11},{x,5}}.
    {move,{x,10},{x,1}}.
    {call_only,10,{f,767}}.
  {label,771}.
    {test,is_eq,{f,772},[{x,9},{x,5}]}.
    {move,{x,11},{x,5}}.
    {call_only,10,{f,767}}.
  {label,772}.
    {test,is_lt,{f,773},[{x,9},{x,5}]}.
    {test_heap,6,12}.
    {put_list,{x,1},{x,6},{x,12}}.
    {put_list,{x,3},{x,12},{x,12}}.
    {put_list,{x,12},{x,7},{x,7}}.
    {move,{x,5},{x,4}}.
    {move,{x,10},{x,3}}.
    {move,{x,11},{x,5}}.
    {move,{x,9},{x,2}}.
    {move,nil,{x,6}}.
    {move,{x,8},{x,1}}.
    {call_only,8,{f,759}}.
  {label,773}.
    {test_heap,6,12}.
    {put_list,{x,1},{x,6},{x,12}}.
    {put_list,{x,3},{x,12},{x,12}}.
    {put_list,{x,12},{x,7},{x,7}}.
    {move,{x,8},{x,3}}.
    {move,{x,9},{x,4}}.
    {move,{x,5},{x,2}}.
    {move,{x,11},{x,5}}.
    {move,nil,{x,6}}.
    {move,{x,10},{x,1}}.
    {call_only,8,{f,759}}.
  {label,774}.
    {test,is_nil,{f,766},[{x,5}]}.
    {test_heap,10,9}.
    {put_list,{x,1},{x,6},{x,4}}.
    {put_list,{x,3},{x,4},{x,3}}.
    {put_list,{x,3},{x,7},{x,3}}.
    {put_list,{x,8},nil,{x,4}}.
    {put_list,{x,4},{x,3},{x,1}}.
    {move,nil,{x,2}}.
    {call_only,3,{f,787}}.


{function, ukeysplit_2, 5, 776}.
  {label,775}.
    {line,[{location,"lists.erl",2271}]}.
    {func_info,{atom,lists},{atom,ukeysplit_2},5}.
  {label,776}.
    {test,is_nonempty_list,{f,779},[{x,3}]}.
    {allocate_zero,6,5}.
    {get_list,{x,3},{x,5},{x,6}}.
    {line,[{location,"lists.erl",2272}]}.
    {bif,element,{f,0},[{x,0},{x,5}],{x,3}}.
    {test,is_eq,{f,777},[{x,2},{x,3}]}.
    {move,{x,6},{x,3}}.
    {call_last,5,{f,776},6}.
  {label,777}.
    {test,is_lt,{f,778},[{x,2},{x,3}]}.
    {move,{x,0},{y,2}}.
    {move,{x,1},{y,1}}.
    {move,nil,{x,1}}.
    {move,{x,4},{x,0}}.
    {move,{x,2},{y,0}}.
    {move,{x,6},{y,3}}.
    {move,{x,5},{y,4}}.
    {move,{x,3},{y,5}}.
    {line,[{location,"lists.erl",2276}]}.
    {call_ext,2,{extfunc,lists,reverse,2}}.
    {test_heap,2,1}.
    {put_list,{x,0},nil,{x,7}}.
    {move,{y,4},{x,3}}.
    {move,{y,5},{x,4}}.
    {move,{y,0},{x,2}}.
    {move,{y,3},{x,5}}.
    {move,{y,1},{x,1}}.
    {move,nil,{x,6}}.
    {move,{y,2},{x,0}}.
    {call_last,8,{f,759},6}.
  {label,778}.
    {test_heap,2,7}.
    {put_list,{x,1},{x,4},{x,4}}.
    {move,{x,3},{x,2}}.
    {move,{x,6},{x,3}}.
    {move,{x,5},{x,1}}.
    {call_last,5,{f,776},6}.
  {label,779}.
    {test,is_nil,{f,775},[{x,3}]}.
    {test_heap,2,5}.
    {put_list,{x,1},{x,4},{x,0}}.
    return.


{function, ukeymergel, 3, 781}.
  {label,780}.
    {line,[{location,"lists.erl",2285}]}.
    {func_info,{atom,lists},{atom,ukeymergel},3}.
  {label,781}.
    {test,is_nonempty_list,{f,785},[{x,1}]}.
    {get_list,{x,1},{x,3},{x,4}}.
    {test,is_nonempty_list,{f,782},[{x,4}]}.
    {get_list,{x,4},{x,5},{x,6}}.
    {test,is_nonempty_list,{f,782},[{x,5}]}.
    {get_list,{x,5},{x,7},{x,8}}.
    {test,is_nonempty_list,{f,782},[{x,6}]}.
    {get_list,{x,6},{x,9},{x,10}}.
    {test,is_nonempty_list,{f,782},[{x,9}]}.
    {allocate_zero,3,11}.
    {get_list,{x,9},{x,11},{x,12}}.
    {line,[{location,"lists.erl",2289}]}.
    {bif,element,{f,0},[{x,0},{x,7}],{x,1}}.
    {line,[{location,"lists.erl",2290}]}.
    {test_heap,2,13}.
    {bif,element,{f,0},[{x,0},{x,11}],{x,4}}.
    {move,{x,2},{y,2}}.
    {move,{x,0},{y,1}}.
    {move,{x,10},{y,0}}.
    {put_list,{x,7},{x,11},{x,13}}.
    {move,{x,8},{x,6}}.
    {move,{x,4},{x,8}}.
    {move,{x,7},{x,5}}.
    {move,nil,{x,7}}.
    {move,{x,11},{x,9}}.
    {move,{x,1},{x,4}}.
    {move,{x,12},{x,10}}.
    {move,{x,3},{x,1}}.
    {move,{x,13},{x,3}}.
    {line,[{location,"lists.erl",2289}]}.
    {call,11,{f,792}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,2},{x,2}}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,3,{f,781},3}.
  {label,782}.
    {test,is_nonempty_list,{f,783},[{x,3}]}.
    {get_list,{x,3},{x,5},{x,6}}.
    {test,is_nonempty_list,{f,783},[{x,4}]}.
    {allocate_zero,3,7}.
    {get_list,{x,4},{x,4},{y,2}}.
    {line,[{location,"lists.erl",2293}]}.
    {bif,element,{f,0},[{x,0},{x,5}],{x,1}}.
    {move,{x,2},{y,0}}.
    {move,{x,5},{x,3}}.
    {move,{x,1},{x,2}}.
    {move,nil,{x,5}}.
    {move,{x,6},{x,1}}.
    {move,{x,0},{y,1}}.
    {line,[{location,"lists.erl",2293}]}.
    {call,6,{f,856}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,2}}.
    {move,{y,2},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,3,{f,781},3}.
  {label,783}.
    {test,is_nil,{f,780},[{x,4}]}.
    {test,is_nil,{f,784},[{x,2}]}.
    {move,{x,3},{x,0}}.
    return.
  {label,784}.
    {allocate,2,4}.
    {move,{x,0},{y,1}}.
    {move,nil,{x,1}}.
    {move,{x,3},{x,0}}.
    {move,{x,2},{y,0}}.
    {line,[{location,"lists.erl",2297}]}.
    {call_ext,2,{extfunc,lists,reverse,2}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,1}}.
    {move,nil,{x,2}}.
    {move,{y,1},{x,0}}.
    {call_last,3,{f,787},2}.
  {label,785}.
    {test,is_nil,{f,780},[{x,1}]}.
    {move,{x,2},{x,1}}.
    {move,nil,{x,2}}.
    {call_only,3,{f,787}}.


{function, rukeymergel, 3, 787}.
  {label,786}.
    {line,[{location,"lists.erl",2301}]}.
    {func_info,{atom,lists},{atom,rukeymergel},3}.
  {label,787}.
    {test,is_nonempty_list,{f,790},[{x,1}]}.
    {get_list,{x,1},{x,3},{x,4}}.
    {test,is_nonempty_list,{f,789},[{x,3}]}.
    {get_list,{x,3},{x,5},{x,6}}.
    {test,is_nonempty_list,{f,789},[{x,4}]}.
    {get_list,{x,4},{x,7},{x,8}}.
    {test,is_nonempty_list,{f,788},[{x,7}]}.
    {get_list,{x,7},{x,9},{x,10}}.
    {test,is_nonempty_list,{f,788},[{x,8}]}.
    {allocate_zero,3,11}.
    {get_list,{x,8},{x,1},{y,2}}.
    {line,[{location,"lists.erl",2302}]}.
    {bif,element,{f,0},[{x,0},{x,9}],{x,4}}.
    {line,[{location,"lists.erl",2303}]}.
    {bif,element,{f,0},[{x,0},{x,5}],{x,8}}.
    {move,nil,{x,7}}.
    {move,nil,{x,3}}.
    {move,{x,5},{x,13}}.
    {move,{x,9},{x,5}}.
    {move,{x,13},{x,9}}.
    {move,{x,6},{x,13}}.
    {move,{x,10},{x,6}}.
    {move,{x,13},{x,10}}.
    {move,{x,2},{y,0}}.
    {move,{x,0},{y,1}}.
    {line,[{location,"lists.erl",2302}]}.
    {call,11,{f,822}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,2}}.
    {move,{y,2},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,3,{f,787},3}.
  {label,788}.
    {allocate_zero,3,9}.
    {line,[{location,"lists.erl",2306}]}.
    {bif,element,{f,0},[{x,0},{x,5}],{x,1}}.
    {move,{x,2},{y,0}}.
    {move,{x,6},{x,3}}.
    {move,{x,1},{x,2}}.
    {move,nil,{x,4}}.
    {move,{x,7},{x,1}}.
    {move,{x,0},{y,1}}.
    {move,{x,8},{y,2}}.
    {line,[{location,"lists.erl",2306}]}.
    {call,6,{f,860}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,2}}.
    {move,{y,2},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,3,{f,787},3}.
  {label,789}.
    {test,is_nil,{f,786},[{x,4}]}.
    {allocate,2,4}.
    {move,{x,0},{y,1}}.
    {move,nil,{x,1}}.
    {move,{x,3},{x,0}}.
    {move,{x,2},{y,0}}.
    {line,[{location,"lists.erl",2308}]}.
    {call_ext,2,{extfunc,lists,reverse,2}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,1}}.
    {move,nil,{x,2}}.
    {move,{y,1},{x,0}}.
    {call_last,3,{f,781},2}.
  {label,790}.
    {test,is_nil,{f,786},[{x,1}]}.
    {move,{x,2},{x,1}}.
    {move,nil,{x,2}}.
    {call_only,3,{f,781}}.


{function, ukeymerge3_1, 11, 792}.
  {label,791}.
    {line,[{location,"lists.erl",2315}]}.
    {func_info,{atom,lists},{atom,ukeymerge3_1},11}.
  {label,792}.
    {test,is_nonempty_list,{f,799},[{x,1}]}.
    {get_list,{x,1},{x,11},{x,12}}.
    {line,[{location,"lists.erl",2316}]}.
    {bif,element,{f,0},[{x,0},{x,11}],{x,1}}.
    {test,is_ge,{f,795},[{x,4},{x,1}]}.
    {test,is_ge,{f,793},[{x,8},{x,1}]}.
    {test_heap,2,13}.
    {put_list,{x,11},{x,7},{x,7}}.
    {move,{x,1},{x,3}}.
    {move,{x,12},{x,1}}.
    {call_only,11,{f,792}}.
  {label,793}.
    {test,is_eq,{f,794},[{x,8},{x,3}]}.
    {move,{x,11},{x,3}}.
    {move,{x,10},{x,8}}.
    {move,{x,12},{x,2}}.
    {call_only,9,{f,814}}.
  {label,794}.
    {test_heap,2,13}.
    {put_list,{x,9},{x,7},{x,7}}.
    {move,{x,11},{x,3}}.
    {move,{x,10},{x,8}}.
    {move,{x,12},{x,2}}.
    {call_only,9,{f,814}}.
  {label,795}.
    {test,is_eq,{f,796},[{x,4},{x,3}]}.
    {move,{x,6},{x,4}}.
    {move,{x,3},{x,5}}.
    {move,{x,11},{x,3}}.
    {move,{x,12},{x,2}}.
    {call_only,11,{f,804}}.
  {label,796}.
    {test,is_ge,{f,797},[{x,8},{x,4}]}.
    {test_heap,2,13}.
    {put_list,{x,5},{x,7},{x,7}}.
    {move,{x,11},{x,3}}.
    {move,{x,4},{x,5}}.
    {move,{x,6},{x,4}}.
    {move,{x,12},{x,2}}.
    {call_only,11,{f,804}}.
  {label,797}.
    {test,is_eq,{f,798},[{x,8},{x,3}]}.
    {move,{x,11},{x,3}}.
    {move,{x,10},{x,8}}.
    {move,{x,12},{x,2}}.
    {call_only,9,{f,818}}.
  {label,798}.
    {test_heap,2,13}.
    {put_list,{x,9},{x,7},{x,7}}.
    {move,{x,11},{x,3}}.
    {move,{x,10},{x,8}}.
    {move,{x,12},{x,2}}.
    {call_only,9,{f,818}}.
  {label,799}.
    {test,is_nil,{f,791},[{x,1}]}.
    {test,is_eq,{f,800},[{x,4},{x,3}]}.
    {move,{x,10},{x,4}}.
    {move,{x,8},{x,2}}.
    {move,{x,7},{x,5}}.
    {move,{x,6},{x,1}}.
    {move,{x,9},{x,6}}.
    {call_only,7,{f,850}}.
  {label,800}.
    {test,is_ge,{f,801},[{x,8},{x,4}]}.
    {test_heap,2,11}.
    {put_list,{x,5},{x,7},{x,5}}.
    {move,{x,4},{x,3}}.
    {move,{x,8},{x,2}}.
    {move,{x,10},{x,4}}.
    {move,{x,6},{x,1}}.
    {move,{x,9},{x,6}}.
    {call_only,7,{f,850}}.
  {label,801}.
    {test,is_eq,{f,802},[{x,8},{x,3}]}.
    {move,{x,5},{x,3}}.
    {move,{x,4},{x,2}}.
    {move,{x,10},{x,4}}.
    {move,{x,7},{x,5}}.
    {move,{x,6},{x,1}}.
    {call_only,6,{f,856}}.
  {label,802}.
    {test_heap,2,11}.
    {put_list,{x,9},{x,7},{x,7}}.
    {move,{x,5},{x,3}}.
    {move,{x,4},{x,2}}.
    {move,{x,10},{x,4}}.
    {move,{x,7},{x,5}}.
    {move,{x,6},{x,1}}.
    {call_only,6,{f,856}}.


{function, ukeymerge3_2, 11, 804}.
  {label,803}.
    {line,[{location,"lists.erl",2334}]}.
    {func_info,{atom,lists},{atom,ukeymerge3_2},11}.
  {label,804}.
    {test,is_nonempty_list,{f,810},[{x,4}]}.
    {get_list,{x,4},{x,11},{x,12}}.
    {line,[{location,"lists.erl",2335}]}.
    {bif,element,{f,0},[{x,0},{x,11}],{x,4}}.
    {test,is_ge,{f,807},[{x,4},{x,1}]}.
    {test,is_ge,{f,805},[{x,8},{x,1}]}.
    {test_heap,2,13}.
    {put_list,{x,3},{x,7},{x,7}}.
    {move,{x,11},{x,5}}.
    {move,{x,1},{x,3}}.
    {move,{x,12},{x,6}}.
    {move,{x,2},{x,1}}.
    {call_only,11,{f,792}}.
  {label,805}.
    {test,is_eq,{f,806},[{x,8},{x,5}]}.
    {move,{x,12},{x,6}}.
    {move,{x,10},{x,8}}.
    {move,{x,11},{x,5}}.
    {call_only,9,{f,814}}.
  {label,806}.
    {test_heap,2,13}.
    {put_list,{x,9},{x,7},{x,7}}.
    {move,{x,12},{x,6}}.
    {move,{x,10},{x,8}}.
    {move,{x,11},{x,5}}.
    {call_only,9,{f,814}}.
  {label,807}.
    {test,is_ge,{f,808},[{x,8},{x,4}]}.
    {test_heap,2,13}.
    {put_list,{x,11},{x,7},{x,7}}.
    {move,{x,4},{x,5}}.
    {move,{x,12},{x,4}}.
    {call_only,11,{f,804}}.
  {label,808}.
    {test,is_eq,{f,809},[{x,8},{x,5}]}.
    {move,{x,12},{x,6}}.
    {move,{x,10},{x,8}}.
    {move,{x,11},{x,5}}.
    {call_only,9,{f,818}}.
  {label,809}.
    {test_heap,2,13}.
    {put_list,{x,9},{x,7},{x,7}}.
    {move,{x,12},{x,6}}.
    {move,{x,10},{x,8}}.
    {move,{x,11},{x,5}}.
    {call_only,9,{f,818}}.
  {label,810}.
    {test,is_nil,{f,803},[{x,4}]}.
    {test,is_ge,{f,811},[{x,8},{x,1}]}.
    {test_heap,2,11}.
    {put_list,{x,3},{x,7},{x,5}}.
    {move,{x,10},{x,4}}.
    {move,{x,1},{x,3}}.
    {move,{x,9},{x,6}}.
    {move,{x,2},{x,1}}.
    {move,{x,8},{x,2}}.
    {call_only,7,{f,850}}.
  {label,811}.
    {test,is_eq,{f,812},[{x,8},{x,5}]}.
    {move,{x,7},{x,5}}.
    {move,{x,10},{x,4}}.
    {move,{x,2},{x,6}}.
    {move,{x,1},{x,2}}.
    {move,{x,6},{x,1}}.
    {call_only,6,{f,856}}.
  {label,812}.
    {test_heap,2,11}.
    {put_list,{x,9},{x,7},{x,5}}.
    {move,{x,10},{x,4}}.
    {move,{x,2},{x,6}}.
    {move,{x,1},{x,2}}.
    {move,{x,6},{x,1}}.
    {call_only,6,{f,856}}.


{function, ukeymerge3_12_3, 9, 814}.
  {label,813}.
    {line,[{location,"lists.erl",2359}]}.
    {func_info,{atom,lists},{atom,ukeymerge3_12_3},9}.
  {label,814}.
    {test,is_nonempty_list,{f,816},[{x,8}]}.
    {get_list,{x,8},{x,9},{x,10}}.
    {line,[{location,"lists.erl",2360}]}.
    {bif,element,{f,0},[{x,0},{x,9}],{x,8}}.
    {test,is_ge,{f,815},[{x,8},{x,1}]}.
    {test_heap,2,11}.
    {put_list,{x,3},{x,7},{x,7}}.
    {move,{x,1},{x,3}}.
    {move,{x,2},{x,1}}.
    {call_only,11,{f,792}}.
  {label,815}.
    {test_heap,2,11}.
    {put_list,{x,9},{x,7},{x,7}}.
    {move,{x,10},{x,8}}.
    {call_only,9,{f,814}}.
  {label,816}.
    {test,is_nil,{f,813},[{x,8}]}.
    {test_heap,2,8}.
    {put_list,{x,3},{x,7},{x,7}}.
    {move,{x,1},{x,3}}.
    {move,{x,2},{x,1}}.
    {move,{x,4},{x,2}}.
    {move,{x,6},{x,4}}.
    {move,{x,5},{x,6}}.
    {move,{x,7},{x,5}}.
    {call_only,7,{f,850}}.


{function, ukeymerge3_21_3, 9, 818}.
  {label,817}.
    {line,[{location,"lists.erl",2380}]}.
    {func_info,{atom,lists},{atom,ukeymerge3_21_3},9}.
  {label,818}.
    {test,is_nonempty_list,{f,820},[{x,8}]}.
    {get_list,{x,8},{x,9},{x,10}}.
    {line,[{location,"lists.erl",2381}]}.
    {bif,element,{f,0},[{x,0},{x,9}],{x,8}}.
    {test,is_ge,{f,819},[{x,8},{x,4}]}.
    {test_heap,2,11}.
    {put_list,{x,5},{x,7},{x,7}}.
    {move,{x,4},{x,5}}.
    {move,{x,6},{x,4}}.
    {call_only,11,{f,804}}.
  {label,819}.
    {test_heap,2,11}.
    {put_list,{x,9},{x,7},{x,7}}.
    {move,{x,10},{x,8}}.
    {call_only,9,{f,818}}.
  {label,820}.
    {test,is_nil,{f,817},[{x,8}]}.
    {test_heap,2,8}.
    {put_list,{x,5},{x,7},{x,5}}.
    {move,{x,6},{x,4}}.
    {move,{x,2},{x,7}}.
    {move,{x,1},{x,2}}.
    {move,{x,7},{x,1}}.
    {call_only,6,{f,856}}.


{function, rukeymerge3_1, 11, 822}.
  {label,821}.
    {line,[{location,"lists.erl",2393}]}.
    {func_info,{atom,lists},{atom,rukeymerge3_1},11}.
  {label,822}.
    {test,is_nonempty_list,{f,826},[{x,1}]}.
    {get_list,{x,1},{x,11},{x,12}}.
    {line,[{location,"lists.erl",2394}]}.
    {bif,element,{f,0},[{x,0},{x,11}],{x,1}}.
    {test,is_ge,{f,824},[{x,4},{x,1}]}.
    {test,is_ge,{f,823},[{x,8},{x,4}]}.
    {move,{x,12},{x,3}}.
    {move,{x,11},{x,2}}.
    {call_only,11,{f,838}}.
  {label,823}.
    {move,{x,12},{x,3}}.
    {move,{x,4},{x,13}}.
    {move,{x,6},{x,4}}.
    {move,{x,13},{x,6}}.
    {move,{x,11},{x,2}}.
    {call_only,11,{f,829}}.
  {label,824}.
    {test,is_ge,{f,825},[{x,8},{x,1}]}.
    {move,{x,12},{x,3}}.
    {move,{x,11},{x,2}}.
    {call_only,11,{f,844}}.
  {label,825}.
    {test_heap,2,13}.
    {put_list,{x,11},{x,7},{x,7}}.
    {move,{x,12},{x,1}}.
    {call_only,11,{f,822}}.
  {label,826}.
    {test,is_nil,{f,821},[{x,1}]}.
    {test,is_ge,{f,827},[{x,8},{x,4}]}.
    {move,{x,10},{x,3}}.
    {move,{x,4},{x,2}}.
    {move,{x,7},{x,4}}.
    {move,{x,5},{x,7}}.
    {move,{x,8},{x,5}}.
    {move,{x,6},{x,1}}.
    {move,{x,9},{x,6}}.
    {call_only,8,{f,864}}.
  {label,827}.
    {test_heap,2,11}.
    {put_list,{x,5},{x,7},{x,4}}.
    {move,{x,10},{x,3}}.
    {move,{x,8},{x,2}}.
    {move,{x,9},{x,5}}.
    {move,{x,6},{x,1}}.
    {call_only,6,{f,860}}.


{function, rukeymerge3_2, 11, 829}.
  {label,828}.
    {line,[{location,"lists.erl",2419}]}.
    {func_info,{atom,lists},{atom,rukeymerge3_2},11}.
  {label,829}.
    {test,is_nonempty_list,{f,834},[{x,4}]}.
    {get_list,{x,4},{x,11},{x,12}}.
    {line,[{location,"lists.erl",2420}]}.
    {bif,element,{f,0},[{x,0},{x,11}],{x,4}}.
    {test,is_ge,{f,831},[{x,4},{x,1}]}.
    {test,is_ge,{f,830},[{x,8},{x,4}]}.
    {test_heap,2,13}.
    {put_list,{x,5},{x,7},{x,7}}.
    {move,{x,12},{x,6}}.
    {move,{x,11},{x,5}}.
    {call_only,11,{f,838}}.
  {label,830}.
    {test_heap,2,13}.
    {put_list,{x,5},{x,7},{x,7}}.
    {move,{x,11},{x,5}}.
    {move,{x,4},{x,6}}.
    {move,{x,12},{x,4}}.
    {call_only,11,{f,829}}.
  {label,831}.
    {test,is_eq,{f,832},[{x,1},{x,6}]}.
    {test_heap,2,13}.
    {put_list,{x,2},{x,7},{x,7}}.
    {move,{x,11},{x,5}}.
    {move,{x,12},{x,6}}.
    {move,{x,3},{x,1}}.
    {call_only,11,{f,822}}.
  {label,832}.
    {test,is_ge,{f,833},[{x,8},{x,1}]}.
    {test_heap,2,13}.
    {put_list,{x,5},{x,7},{x,7}}.
    {move,{x,12},{x,6}}.
    {move,{x,11},{x,5}}.
    {call_only,11,{f,844}}.
  {label,833}.
    {test_heap,4,13}.
    {put_list,{x,5},{x,7},{x,13}}.
    {put_list,{x,2},{x,13},{x,7}}.
    {move,{x,11},{x,5}}.
    {move,{x,12},{x,6}}.
    {move,{x,3},{x,1}}.
    {call_only,11,{f,822}}.
  {label,834}.
    {test,is_nil,{f,828},[{x,4}]}.
    {test,is_eq,{f,835},[{x,1},{x,6}]}.
    {test_heap,2,11}.
    {put_list,{x,2},{x,7},{x,4}}.
    {move,{x,8},{x,2}}.
    {move,{x,9},{x,5}}.
    {move,{x,3},{x,1}}.
    {move,{x,10},{x,3}}.
    {call_only,6,{f,860}}.
  {label,835}.
    {test,is_ge,{f,836},[{x,8},{x,1}]}.
    {test_heap,2,11}.
    {put_list,{x,5},{x,7},{x,4}}.
    {move,{x,9},{x,6}}.
    {move,{x,8},{x,5}}.
    {move,{x,2},{x,7}}.
    {move,{x,1},{x,2}}.
    {move,{x,3},{x,1}}.
    {move,{x,10},{x,3}}.
    {call_only,8,{f,864}}.
  {label,836}.
    {test_heap,4,11}.
    {put_list,{x,5},{x,7},{x,6}}.
    {put_list,{x,2},{x,6},{x,4}}.
    {move,{x,8},{x,2}}.
    {move,{x,9},{x,5}}.
    {move,{x,3},{x,1}}.
    {move,{x,10},{x,3}}.
    {call_only,6,{f,860}}.


{function, rukeymerge3_12_3, 11, 838}.
  {label,837}.
    {line,[{location,"lists.erl",2451}]}.
    {func_info,{atom,lists},{atom,rukeymerge3_12_3},11}.
  {label,838}.
    {test,is_nonempty_list,{f,841},[{x,10}]}.
    {get_list,{x,10},{x,11},{x,12}}.
    {line,[{location,"lists.erl",2452}]}.
    {bif,element,{f,0},[{x,0},{x,11}],{x,10}}.
    {test,is_ge,{f,839},[{x,10},{x,4}]}.
    {test_heap,2,13}.
    {put_list,{x,9},{x,7},{x,7}}.
    {move,{x,11},{x,9}}.
    {move,{x,10},{x,8}}.
    {move,{x,12},{x,10}}.
    {call_only,11,{f,838}}.
  {label,839}.
    {test,is_eq,{f,840},[{x,4},{x,8}]}.
    {move,{x,11},{x,9}}.
    {move,{x,10},{x,8}}.
    {move,{x,12},{x,10}}.
    {move,{x,6},{x,13}}.
    {move,{x,4},{x,6}}.
    {move,{x,13},{x,4}}.
    {call_only,11,{f,829}}.
  {label,840}.
    {test_heap,2,13}.
    {put_list,{x,9},{x,7},{x,7}}.
    {move,{x,11},{x,9}}.
    {move,{x,10},{x,8}}.
    {move,{x,12},{x,10}}.
    {move,{x,6},{x,13}}.
    {move,{x,4},{x,6}}.
    {move,{x,13},{x,4}}.
    {call_only,11,{f,829}}.
  {label,841}.
    {test,is_nil,{f,837},[{x,10}]}.
    {test,is_eq,{f,842},[{x,4},{x,8}]}.
    {move,{x,3},{x,8}}.
    {move,{x,6},{x,3}}.
    {move,{x,5},{x,6}}.
    {move,{x,4},{x,5}}.
    {move,{x,7},{x,4}}.
    {move,{x,2},{x,7}}.
    {move,{x,1},{x,2}}.
    {move,{x,8},{x,1}}.
    {call_only,8,{f,864}}.
  {label,842}.
    {test_heap,2,10}.
    {put_list,{x,9},{x,7},{x,8}}.
    {move,{x,2},{x,7}}.
    {move,{x,1},{x,2}}.
    {move,{x,3},{x,1}}.
    {move,{x,6},{x,3}}.
    {move,{x,5},{x,6}}.
    {move,{x,4},{x,5}}.
    {move,{x,8},{x,4}}.
    {call_only,8,{f,864}}.


{function, rukeymerge3_21_3, 11, 844}.
  {label,843}.
    {line,[{location,"lists.erl",2466}]}.
    {func_info,{atom,lists},{atom,rukeymerge3_21_3},11}.
  {label,844}.
    {test,is_nonempty_list,{f,847},[{x,10}]}.
    {get_list,{x,10},{x,11},{x,12}}.
    {line,[{location,"lists.erl",2467}]}.
    {bif,element,{f,0},[{x,0},{x,11}],{x,10}}.
    {test,is_ge,{f,845},[{x,10},{x,1}]}.
    {test_heap,2,13}.
    {put_list,{x,9},{x,7},{x,7}}.
    {move,{x,11},{x,9}}.
    {move,{x,10},{x,8}}.
    {move,{x,12},{x,10}}.
    {call_only,11,{f,844}}.
  {label,845}.
    {test,is_eq,{f,846},[{x,1},{x,8}]}.
    {test_heap,2,13}.
    {put_list,{x,2},{x,7},{x,7}}.
    {move,{x,11},{x,9}}.
    {move,{x,10},{x,8}}.
    {move,{x,12},{x,10}}.
    {move,{x,3},{x,1}}.
    {call_only,11,{f,822}}.
  {label,846}.
    {test_heap,4,13}.
    {put_list,{x,9},{x,7},{x,13}}.
    {put_list,{x,2},{x,13},{x,7}}.
    {move,{x,11},{x,9}}.
    {move,{x,10},{x,8}}.
    {move,{x,12},{x,10}}.
    {move,{x,3},{x,1}}.
    {call_only,11,{f,822}}.
  {label,847}.
    {test,is_nil,{f,843},[{x,10}]}.
    {test,is_eq,{f,848},[{x,1},{x,8}]}.
    {test_heap,2,8}.
    {put_list,{x,2},{x,7},{x,7}}.
    {move,{x,4},{x,2}}.
    {move,{x,7},{x,4}}.
    {move,{x,3},{x,1}}.
    {move,{x,6},{x,3}}.
    {call_only,6,{f,860}}.
  {label,848}.
    {test_heap,4,10}.
    {put_list,{x,9},{x,7},{x,7}}.
    {put_list,{x,2},{x,7},{x,7}}.
    {move,{x,4},{x,2}}.
    {move,{x,7},{x,4}}.
    {move,{x,3},{x,1}}.
    {move,{x,6},{x,3}}.
    {call_only,6,{f,860}}.


{function, ukeymerge2_1, 7, 850}.
  {label,849}.
    {line,[{location,"lists.erl",2483}]}.
    {func_info,{atom,lists},{atom,ukeymerge2_1},7}.
  {label,850}.
    {test,is_nonempty_list,{f,853},[{x,1}]}.
    {get_list,{x,1},{x,7},{x,8}}.
    {line,[{location,"lists.erl",2484}]}.
    {bif,element,{f,0},[{x,0},{x,7}],{x,1}}.
    {test,is_ge,{f,851},[{x,2},{x,1}]}.
    {test_heap,2,9}.
    {put_list,{x,7},{x,5},{x,5}}.
    {move,{x,1},{x,3}}.
    {move,{x,8},{x,1}}.
    {call_only,7,{f,850}}.
  {label,851}.
    {test,is_eq,{f,852},[{x,2},{x,3}]}.
    {move,{x,1},{x,2}}.
    {move,{x,7},{x,3}}.
    {move,{x,8},{x,1}}.
    {call_only,6,{f,856}}.
  {label,852}.
    {test_heap,2,9}.
    {put_list,{x,6},{x,5},{x,5}}.
    {move,{x,1},{x,2}}.
    {move,{x,7},{x,3}}.
    {move,{x,8},{x,1}}.
    {call_only,6,{f,856}}.
  {label,853}.
    {test,is_nil,{f,849},[{x,1}]}.
    {test,is_eq,{f,854},[{x,2},{x,3}]}.
    {move,{x,5},{x,1}}.
    {move,{x,4},{x,0}}.
    {line,[{location,"lists.erl",2493}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.
  {label,854}.
    {test_heap,2,7}.
    {put_list,{x,6},{x,5},{x,1}}.
    {move,{x,4},{x,0}}.
    {line,[{location,"lists.erl",2495}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.


{function, ukeymerge2_2, 6, 856}.
  {label,855}.
    {line,[{location,"lists.erl",2497}]}.
    {func_info,{atom,lists},{atom,ukeymerge2_2},6}.
  {label,856}.
    {test,is_nonempty_list,{f,858},[{x,4}]}.
    {get_list,{x,4},{x,6},{x,7}}.
    {line,[{location,"lists.erl",2498}]}.
    {bif,element,{f,0},[{x,0},{x,6}],{x,4}}.
    {test,is_ge,{f,857},[{x,4},{x,2}]}.
    {test_heap,2,8}.
    {put_list,{x,3},{x,5},{x,5}}.
    {move,{x,2},{x,3}}.
    {move,{x,4},{x,2}}.
    {move,{x,7},{x,4}}.
    {call_only,7,{f,850}}.
  {label,857}.
    {test_heap,2,8}.
    {put_list,{x,6},{x,5},{x,5}}.
    {move,{x,7},{x,4}}.
    {call_only,6,{f,856}}.
  {label,858}.
    {test,is_nil,{f,855},[{x,4}]}.
    {test_heap,2,6}.
    {put_list,{x,3},{x,5},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{x,1}}.
    {line,[{location,"lists.erl",2505}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.


{function, rukeymerge2_1, 6, 860}.
  {label,859}.
    {line,[{location,"lists.erl",2509}]}.
    {func_info,{atom,lists},{atom,rukeymerge2_1},6}.
  {label,860}.
    {test,is_nonempty_list,{f,862},[{x,1}]}.
    {get_list,{x,1},{x,6},{x,7}}.
    {line,[{location,"lists.erl",2510}]}.
    {bif,element,{f,0},[{x,0},{x,6}],{x,1}}.
    {test,is_ge,{f,861},[{x,2},{x,1}]}.
    {move,{x,7},{x,8}}.
    {move,{x,6},{x,7}}.
    {move,{x,5},{x,6}}.
    {move,{x,2},{x,5}}.
    {move,{x,1},{x,2}}.
    {move,{x,8},{x,1}}.
    {call_only,8,{f,864}}.
  {label,861}.
    {test_heap,2,8}.
    {put_list,{x,6},{x,4},{x,4}}.
    {move,{x,7},{x,1}}.
    {call_only,6,{f,860}}.
  {label,862}.
    {test,is_nil,{f,859},[{x,1}]}.
    {test_heap,2,6}.
    {put_list,{x,5},{x,4},{x,1}}.
    {move,{x,3},{x,0}}.
    {line,[{location,"lists.erl",2517}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.


{function, rukeymerge2_2, 8, 864}.
  {label,863}.
    {line,[{location,"lists.erl",2519}]}.
    {func_info,{atom,lists},{atom,rukeymerge2_2},8}.
  {label,864}.
    {test,is_nonempty_list,{f,867},[{x,3}]}.
    {get_list,{x,3},{x,8},{x,9}}.
    {line,[{location,"lists.erl",2520}]}.
    {bif,element,{f,0},[{x,0},{x,8}],{x,3}}.
    {test,is_ge,{f,865},[{x,3},{x,2}]}.
    {test_heap,2,10}.
    {put_list,{x,6},{x,4},{x,4}}.
    {move,{x,3},{x,5}}.
    {move,{x,8},{x,6}}.
    {move,{x,9},{x,3}}.
    {call_only,8,{f,864}}.
  {label,865}.
    {test,is_eq,{f,866},[{x,2},{x,5}]}.
    {test_heap,2,10}.
    {put_list,{x,7},{x,4},{x,4}}.
    {move,{x,8},{x,5}}.
    {move,{x,3},{x,2}}.
    {move,{x,9},{x,3}}.
    {call_only,6,{f,860}}.
  {label,866}.
    {test_heap,4,10}.
    {put_list,{x,6},{x,4},{x,6}}.
    {put_list,{x,7},{x,6},{x,4}}.
    {move,{x,8},{x,5}}.
    {move,{x,3},{x,2}}.
    {move,{x,9},{x,3}}.
    {call_only,6,{f,860}}.
  {label,867}.
    {test,is_nil,{f,863},[{x,3}]}.
    {test,is_eq,{f,868},[{x,2},{x,5}]}.
    {test_heap,2,8}.
    {put_list,{x,7},{x,4},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{x,1}}.
    {line,[{location,"lists.erl",2529}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.
  {label,868}.
    {test_heap,4,8}.
    {put_list,{x,6},{x,4},{x,2}}.
    {put_list,{x,7},{x,2},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{x,1}}.
    {line,[{location,"lists.erl",2531}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.


{function, fsplit_1, 6, 870}.
  {label,869}.
    {line,[{location,"lists.erl",2536}]}.
    {func_info,{atom,lists},{atom,fsplit_1},6}.
  {label,870}.
    {test,is_nonempty_list,{f,876},[{x,3}]}.
    {allocate,7,6}.
    {get_list,{x,3},{x,6},{y,5}}.
    {move,{x,1},{y,3}}.
    {move,{x,6},{x,1}}.
    {move,{x,5},{y,0}}.
    {move,{x,4},{y,1}}.
    {move,{x,2},{y,2}}.
    {move,{x,0},{y,4}}.
    {move,{x,1},{y,6}}.
    {line,[{location,"lists.erl",2537}]}.
    {call_fun,2}.
    {test,is_atom,{f,878},[{x,0}]}.
    {select_val,{x,0},
                {f,878},
                {list,[{atom,true},{f,871},{atom,false},{f,872}]}}.
  {label,871}.
    {test_heap,2,0}.
    {put_list,{y,3},{y,1},{x,4}}.
    {move,{y,2},{x,2}}.
    {move,{y,5},{x,3}}.
    {move,{y,4},{x,1}}.
    {move,{y,0},{x,5}}.
    {move,{y,6},{x,0}}.
    {call_last,6,{f,870},7}.
  {label,872}.
    {move,{y,6},{x,1}}.
    {move,{y,2},{x,2}}.
    {move,{y,3},{x,0}}.
    {line,[{location,"lists.erl",2541}]}.
    {call_fun,2}.
    {test,is_atom,{f,877},[{x,0}]}.
    {select_val,{x,0},
                {f,877},
                {list,[{atom,false},{f,873},{atom,true},{f,875}]}}.
  {label,873}.
    {test,is_nil,{f,874},[{y,1}]}.
    {test_heap,2,0}.
    {put_list,{y,6},nil,{x,4}}.
    {move,{y,2},{x,2}}.
    {move,{y,5},{x,3}}.
    {move,{y,3},{x,1}}.
    {move,{y,0},{x,5}}.
    {move,{y,4},{x,0}}.
    {call_last,6,{f,870},7}.
  {label,874}.
    {move,{y,5},{x,3}}.
    {move,{y,1},{x,4}}.
    {move,{y,2},{x,2}}.
    {move,{y,0},{x,5}}.
    {move,{y,3},{x,1}}.
    {move,{y,6},{x,6}}.
    {move,{y,4},{x,0}}.
    {call_last,7,{f,880},7}.
  {label,875}.
    {test_heap,2,0}.
    {put_list,{y,3},{y,1},{x,4}}.
    {move,{y,2},{x,2}}.
    {move,{y,5},{x,3}}.
    {move,{y,6},{x,1}}.
    {move,{y,0},{x,5}}.
    {move,{y,4},{x,0}}.
    {call_last,6,{f,870},7}.
  {label,876}.
    {test,is_nil,{f,869},[{x,3}]}.
    {test_heap,6,6}.
    {put_list,{x,1},{x,4},{x,4}}.
    {put_list,{x,0},{x,4},{x,4}}.
    {put_list,{x,4},{x,5},{x,0}}.
    {move,{atom,asc},{x,3}}.
    {move,nil,{x,1}}.
    {call_only,4,{f,920}}.
  {label,877}.
    {line,[{location,"lists.erl",2541}]}.
    {case_end,{x,0}}.
  {label,878}.
    {line,[{location,"lists.erl",2537}]}.
    {case_end,{x,0}}.


{function, fsplit_1_1, 7, 880}.
  {label,879}.
    {line,[{location,"lists.erl",2553}]}.
    {func_info,{atom,lists},{atom,fsplit_1_1},7}.
  {label,880}.
    {test,is_nonempty_list,{f,887},[{x,3}]}.
    {allocate,8,7}.
    {get_list,{x,3},{x,7},{y,6}}.
    {move,{x,1},{y,4}}.
    {move,{x,7},{x,1}}.
    {move,{x,6},{y,0}}.
    {move,{x,5},{y,1}}.
    {move,{x,4},{y,2}}.
    {move,{x,2},{y,3}}.
    {move,{x,0},{y,5}}.
    {move,{x,1},{y,7}}.
    {line,[{location,"lists.erl",2554}]}.
    {call_fun,2}.
    {test,is_atom,{f,890},[{x,0}]}.
    {select_val,{x,0},
                {f,890},
                {list,[{atom,true},{f,881},{atom,false},{f,882}]}}.
  {label,881}.
    {test_heap,2,0}.
    {put_list,{y,4},{y,2},{x,4}}.
    {move,{y,6},{x,3}}.
    {move,{y,3},{x,2}}.
    {move,{y,1},{x,5}}.
    {move,{y,5},{x,1}}.
    {move,{y,0},{x,6}}.
    {move,{y,7},{x,0}}.
    {call_last,7,{f,880},8}.
  {label,882}.
    {move,{y,7},{x,1}}.
    {move,{y,3},{x,2}}.
    {move,{y,4},{x,0}}.
    {line,[{location,"lists.erl",2558}]}.
    {call_fun,2}.
    {test,is_atom,{f,889},[{x,0}]}.
    {select_val,{x,0},
                {f,889},
                {list,[{atom,true},{f,883},{atom,false},{f,884}]}}.
  {label,883}.
    {test_heap,2,0}.
    {put_list,{y,4},{y,2},{x,4}}.
    {move,{y,6},{x,3}}.
    {move,{y,3},{x,2}}.
    {move,{y,1},{x,5}}.
    {move,{y,7},{x,1}}.
    {move,{y,0},{x,6}}.
    {move,{y,5},{x,0}}.
    {call_last,7,{f,880},8}.
  {label,884}.
    {move,{y,7},{x,1}}.
    {move,{y,3},{x,2}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"lists.erl",2562}]}.
    {call_fun,2}.
    {test,is_atom,{f,888},[{x,0}]}.
    {select_val,{x,0},
                {f,888},
                {list,[{atom,true},{f,885},{atom,false},{f,886}]}}.
  {label,885}.
    {test_heap,6,0}.
    {put_list,{y,4},{y,2},{x,6}}.
    {put_list,{y,5},{x,6},{x,6}}.
    {put_list,{x,6},{y,1},{x,5}}.
    {move,{y,3},{x,2}}.
    {move,{y,6},{x,3}}.
    {move,{y,0},{x,1}}.
    {move,nil,{x,4}}.
    {move,{y,7},{x,0}}.
    {call_last,6,{f,870},8}.
  {label,886}.
    {test_heap,6,0}.
    {put_list,{y,4},{y,2},{x,6}}.
    {put_list,{y,5},{x,6},{x,6}}.
    {put_list,{x,6},{y,1},{x,5}}.
    {move,{y,3},{x,2}}.
    {move,{y,6},{x,3}}.
    {move,{y,7},{x,1}}.
    {move,nil,{x,4}}.
    {move,{y,0},{x,0}}.
    {call_last,6,{f,870},8}.
  {label,887}.
    {test,is_nil,{f,879},[{x,3}]}.
    {test_heap,10,7}.
    {put_list,{x,1},{x,4},{x,4}}.
    {put_list,{x,0},{x,4},{x,0}}.
    {put_list,{x,0},{x,5},{x,4}}.
    {put_list,{x,6},nil,{x,5}}.
    {put_list,{x,5},{x,4},{x,0}}.
    {move,{atom,asc},{x,3}}.
    {move,nil,{x,1}}.
    {call_only,4,{f,920}}.
  {label,888}.
    {line,[{location,"lists.erl",2562}]}.
    {case_end,{x,0}}.
  {label,889}.
    {line,[{location,"lists.erl",2558}]}.
    {case_end,{x,0}}.
  {label,890}.
    {line,[{location,"lists.erl",2554}]}.
    {case_end,{x,0}}.


{function, fsplit_2, 6, 892}.
  {label,891}.
    {line,[{location,"lists.erl",2574}]}.
    {func_info,{atom,lists},{atom,fsplit_2},6}.
  {label,892}.
    {test,is_nonempty_list,{f,898},[{x,3}]}.
    {allocate,7,6}.
    {get_list,{x,3},{x,6},{y,5}}.
    {move,{x,1},{y,3}}.
    {move,{x,6},{x,1}}.
    {move,{x,5},{y,0}}.
    {move,{x,4},{y,1}}.
    {move,{x,2},{y,2}}.
    {move,{x,0},{y,4}}.
    {move,{x,1},{y,6}}.
    {line,[{location,"lists.erl",2575}]}.
    {call_fun,2}.
    {test,is_atom,{f,900},[{x,0}]}.
    {select_val,{x,0},
                {f,900},
                {list,[{atom,false},{f,893},{atom,true},{f,894}]}}.
  {label,893}.
    {test_heap,2,0}.
    {put_list,{y,3},{y,1},{x,4}}.
    {move,{y,2},{x,2}}.
    {move,{y,5},{x,3}}.
    {move,{y,4},{x,1}}.
    {move,{y,0},{x,5}}.
    {move,{y,6},{x,0}}.
    {call_last,6,{f,892},7}.
  {label,894}.
    {move,{y,6},{x,1}}.
    {move,{y,2},{x,2}}.
    {move,{y,3},{x,0}}.
    {line,[{location,"lists.erl",2579}]}.
    {call_fun,2}.
    {test,is_atom,{f,899},[{x,0}]}.
    {select_val,{x,0},
                {f,899},
                {list,[{atom,true},{f,895},{atom,false},{f,897}]}}.
  {label,895}.
    {test,is_nil,{f,896},[{y,1}]}.
    {test_heap,2,0}.
    {put_list,{y,6},nil,{x,4}}.
    {move,{y,2},{x,2}}.
    {move,{y,5},{x,3}}.
    {move,{y,3},{x,1}}.
    {move,{y,0},{x,5}}.
    {move,{y,4},{x,0}}.
    {call_last,6,{f,892},7}.
  {label,896}.
    {move,{y,5},{x,3}}.
    {move,{y,1},{x,4}}.
    {move,{y,2},{x,2}}.
    {move,{y,0},{x,5}}.
    {move,{y,3},{x,1}}.
    {move,{y,6},{x,6}}.
    {move,{y,4},{x,0}}.
    {call_last,7,{f,902},7}.
  {label,897}.
    {test_heap,2,0}.
    {put_list,{y,3},{y,1},{x,4}}.
    {move,{y,2},{x,2}}.
    {move,{y,5},{x,3}}.
    {move,{y,6},{x,1}}.
    {move,{y,0},{x,5}}.
    {move,{y,4},{x,0}}.
    {call_last,6,{f,892},7}.
  {label,898}.
    {test,is_nil,{f,891},[{x,3}]}.
    {test_heap,6,6}.
    {put_list,{x,1},{x,4},{x,4}}.
    {put_list,{x,0},{x,4},{x,4}}.
    {put_list,{x,4},{x,5},{x,0}}.
    {move,{atom,desc},{x,3}}.
    {move,nil,{x,1}}.
    {call_only,4,{f,914}}.
  {label,899}.
    {line,[{location,"lists.erl",2579}]}.
    {case_end,{x,0}}.
  {label,900}.
    {line,[{location,"lists.erl",2575}]}.
    {case_end,{x,0}}.


{function, fsplit_2_1, 7, 902}.
  {label,901}.
    {line,[{location,"lists.erl",2591}]}.
    {func_info,{atom,lists},{atom,fsplit_2_1},7}.
  {label,902}.
    {test,is_nonempty_list,{f,909},[{x,3}]}.
    {allocate,8,7}.
    {get_list,{x,3},{x,7},{y,6}}.
    {move,{x,1},{y,4}}.
    {move,{x,7},{x,1}}.
    {move,{x,6},{y,0}}.
    {move,{x,5},{y,1}}.
    {move,{x,4},{y,2}}.
    {move,{x,2},{y,3}}.
    {move,{x,0},{y,5}}.
    {move,{x,1},{y,7}}.
    {line,[{location,"lists.erl",2592}]}.
    {call_fun,2}.
    {test,is_atom,{f,912},[{x,0}]}.
    {select_val,{x,0},
                {f,912},
                {list,[{atom,false},{f,903},{atom,true},{f,904}]}}.
  {label,903}.
    {test_heap,2,0}.
    {put_list,{y,4},{y,2},{x,4}}.
    {move,{y,6},{x,3}}.
    {move,{y,3},{x,2}}.
    {move,{y,1},{x,5}}.
    {move,{y,5},{x,1}}.
    {move,{y,0},{x,6}}.
    {move,{y,7},{x,0}}.
    {call_last,7,{f,902},8}.
  {label,904}.
    {move,{y,7},{x,1}}.
    {move,{y,3},{x,2}}.
    {move,{y,4},{x,0}}.
    {line,[{location,"lists.erl",2596}]}.
    {call_fun,2}.
    {test,is_atom,{f,911},[{x,0}]}.
    {select_val,{x,0},
                {f,911},
                {list,[{atom,false},{f,905},{atom,true},{f,906}]}}.
  {label,905}.
    {test_heap,2,0}.
    {put_list,{y,4},{y,2},{x,4}}.
    {move,{y,6},{x,3}}.
    {move,{y,3},{x,2}}.
    {move,{y,1},{x,5}}.
    {move,{y,7},{x,1}}.
    {move,{y,0},{x,6}}.
    {move,{y,5},{x,0}}.
    {call_last,7,{f,902},8}.
  {label,906}.
    {move,{y,7},{x,1}}.
    {move,{y,3},{x,2}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"lists.erl",2600}]}.
    {call_fun,2}.
    {test,is_atom,{f,910},[{x,0}]}.
    {select_val,{x,0},
                {f,910},
                {list,[{atom,false},{f,907},{atom,true},{f,908}]}}.
  {label,907}.
    {test_heap,6,0}.
    {put_list,{y,4},{y,2},{x,6}}.
    {put_list,{y,5},{x,6},{x,6}}.
    {put_list,{x,6},{y,1},{x,5}}.
    {move,{y,3},{x,2}}.
    {move,{y,6},{x,3}}.
    {move,{y,0},{x,1}}.
    {move,nil,{x,4}}.
    {move,{y,7},{x,0}}.
    {call_last,6,{f,892},8}.
  {label,908}.
    {test_heap,6,0}.
    {put_list,{y,4},{y,2},{x,6}}.
    {put_list,{y,5},{x,6},{x,6}}.
    {put_list,{x,6},{y,1},{x,5}}.
    {move,{y,3},{x,2}}.
    {move,{y,6},{x,3}}.
    {move,{y,7},{x,1}}.
    {move,nil,{x,4}}.
    {move,{y,0},{x,0}}.
    {call_last,6,{f,892},8}.
  {label,909}.
    {test,is_nil,{f,901},[{x,3}]}.
    {test_heap,10,7}.
    {put_list,{x,1},{x,4},{x,4}}.
    {put_list,{x,0},{x,4},{x,0}}.
    {put_list,{x,0},{x,5},{x,4}}.
    {put_list,{x,6},nil,{x,5}}.
    {put_list,{x,5},{x,4},{x,0}}.
    {move,{atom,desc},{x,3}}.
    {move,nil,{x,1}}.
    {call_only,4,{f,914}}.
  {label,910}.
    {line,[{location,"lists.erl",2600}]}.
    {case_end,{x,0}}.
  {label,911}.
    {line,[{location,"lists.erl",2596}]}.
    {case_end,{x,0}}.
  {label,912}.
    {line,[{location,"lists.erl",2592}]}.
    {case_end,{x,0}}.


{function, fmergel, 4, 914}.
  {label,913}.
    {line,[{location,"lists.erl",2611}]}.
    {func_info,{atom,lists},{atom,fmergel},4}.
  {label,914}.
    {test,is_nonempty_list,{f,918},[{x,0}]}.
    {get_list,{x,0},{x,4},{x,5}}.
    {test,is_nonempty_list,{f,915},[{x,5}]}.
    {get_list,{x,5},{x,6},{x,7}}.
    {test,is_nonempty_list,{f,915},[{x,6}]}.
    {get_list,{x,6},{x,8},{x,9}}.
    {test,is_eq_exact,{f,915},[{x,3},{atom,asc}]}.
    {allocate,3,10}.
    {move,{x,1},{y,0}}.
    {move,{x,8},{x,1}}.
    {move,{x,9},{x,3}}.
    {move,{x,4},{x,0}}.
    {move,nil,{x,4}}.
    {move,{x,2},{y,1}}.
    {move,{x,7},{y,2}}.
    {line,[{location,"lists.erl",2612}]}.
    {call,5,{f,925}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,1}}.
    {move,{y,1},{x,2}}.
    {move,{atom,asc},{x,3}}.
    {move,{y,2},{x,0}}.
    {call_last,4,{f,914},3}.
  {label,915}.
    {test,is_nonempty_list,{f,916},[{x,4}]}.
    {get_list,{x,4},{x,6},{x,7}}.
    {test,is_nonempty_list,{f,916},[{x,5}]}.
    {get_list,{x,5},{x,8},{x,9}}.
    {test,is_eq_exact,{f,916},[{x,3},{atom,desc}]}.
    {allocate,3,10}.
    {move,{x,1},{y,0}}.
    {move,{x,7},{x,3}}.
    {move,{x,6},{x,1}}.
    {move,nil,{x,4}}.
    {move,{x,8},{x,0}}.
    {move,{x,2},{y,1}}.
    {move,{x,9},{y,2}}.
    {line,[{location,"lists.erl",2614}]}.
    {call,5,{f,925}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,1}}.
    {move,{y,1},{x,2}}.
    {move,{atom,desc},{x,3}}.
    {move,{y,2},{x,0}}.
    {call_last,4,{f,914},3}.
  {label,916}.
    {test,is_nil,{f,913},[{x,5}]}.
    {test,is_nil,{f,917},[{x,1}]}.
    {move,{x,4},{x,0}}.
    return.
  {label,917}.
    {allocate,3,5}.
    {move,{x,1},{y,0}}.
    {move,nil,{x,1}}.
    {move,{x,4},{x,0}}.
    {move,{x,3},{y,1}}.
    {move,{x,2},{y,2}}.
    {line,[{location,"lists.erl",2618}]}.
    {call_ext,2,{extfunc,lists,reverse,2}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,0}}.
    {move,{y,2},{x,2}}.
    {move,{y,1},{x,3}}.
    {move,nil,{x,1}}.
    {call_last,4,{f,920},3}.
  {label,918}.
    {test,is_nil,{f,913},[{x,0}]}.
    {move,{x,1},{x,0}}.
    {move,nil,{x,1}}.
    {call_only,4,{f,920}}.


{function, rfmergel, 4, 920}.
  {label,919}.
    {line,[{location,"lists.erl",2622}]}.
    {func_info,{atom,lists},{atom,rfmergel},4}.
  {label,920}.
    {test,is_nonempty_list,{f,923},[{x,0}]}.
    {get_list,{x,0},{x,4},{x,5}}.
    {test,is_nonempty_list,{f,921},[{x,4}]}.
    {get_list,{x,4},{x,6},{x,7}}.
    {test,is_nonempty_list,{f,922},[{x,5}]}.
    {get_list,{x,5},{x,8},{x,9}}.
    {test,is_eq_exact,{f,921},[{x,3},{atom,asc}]}.
    {allocate,3,10}.
    {move,{x,1},{y,0}}.
    {move,{x,7},{x,3}}.
    {move,{x,6},{x,1}}.
    {move,nil,{x,4}}.
    {move,{x,8},{x,0}}.
    {move,{x,2},{y,1}}.
    {move,{x,9},{y,2}}.
    {line,[{location,"lists.erl",2623}]}.
    {call,5,{f,937}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,1}}.
    {move,{y,1},{x,2}}.
    {move,{atom,asc},{x,3}}.
    {move,{y,2},{x,0}}.
    {call_last,4,{f,920},3}.
  {label,921}.
    {test,is_nonempty_list,{f,922},[{x,5}]}.
    {get_list,{x,5},{x,6},{x,7}}.
    {test,is_nonempty_list,{f,919},[{x,6}]}.
    {get_list,{x,6},{x,8},{x,9}}.
    {test,is_eq_exact,{f,919},[{x,3},{atom,desc}]}.
    {allocate,3,10}.
    {move,{x,1},{y,0}}.
    {move,{x,8},{x,1}}.
    {move,{x,9},{x,3}}.
    {move,{x,4},{x,0}}.
    {move,nil,{x,4}}.
    {move,{x,2},{y,1}}.
    {move,{x,7},{y,2}}.
    {line,[{location,"lists.erl",2625}]}.
    {call,5,{f,937}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,1}}.
    {move,{y,1},{x,2}}.
    {move,{atom,desc},{x,3}}.
    {move,{y,2},{x,0}}.
    {call_last,4,{f,920},3}.
  {label,922}.
    {test,is_nil,{f,919},[{x,5}]}.
    {allocate,3,5}.
    {move,{x,1},{y,0}}.
    {move,nil,{x,1}}.
    {move,{x,4},{x,0}}.
    {move,{x,3},{y,1}}.
    {move,{x,2},{y,2}}.
    {line,[{location,"lists.erl",2627}]}.
    {call_ext,2,{extfunc,lists,reverse,2}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,0}}.
    {move,{y,2},{x,2}}.
    {move,{y,1},{x,3}}.
    {move,nil,{x,1}}.
    {call_last,4,{f,914},3}.
  {label,923}.
    {test,is_nil,{f,919},[{x,0}]}.
    {move,{x,1},{x,0}}.
    {move,nil,{x,1}}.
    {call_only,4,{f,914}}.


{function, fmerge2_1, 5, 925}.
  {label,924}.
    {line,[{location,"lists.erl",2634}]}.
    {func_info,{atom,lists},{atom,fmerge2_1},5}.
  {label,925}.
    {test,is_nonempty_list,{f,928},[{x,0}]}.
    {allocate,6,5}.
    {get_list,{x,0},{x,0},{y,4}}.
    {move,{x,4},{y,0}}.
    {move,{x,3},{y,1}}.
    {move,{x,2},{y,2}}.
    {move,{x,1},{y,3}}.
    {move,{x,0},{y,5}}.
    {line,[{location,"lists.erl",2635}]}.
    {call_fun,2}.
    {test,is_atom,{f,929},[{x,0}]}.
    {select_val,{x,0},
                {f,929},
                {list,[{atom,false},{f,926},{atom,true},{f,927}]}}.
  {label,926}.
    {test_heap,2,0}.
    {put_list,{y,3},{y,0},{x,4}}.
    {move,{y,2},{x,2}}.
    {move,{y,4},{x,1}}.
    {move,{y,1},{x,3}}.
    {move,{y,5},{x,0}}.
    {call_last,5,{f,931},6}.
  {label,927}.
    {test_heap,2,0}.
    {put_list,{y,5},{y,0},{x,4}}.
    {move,{y,2},{x,2}}.
    {move,{y,3},{x,1}}.
    {move,{y,1},{x,3}}.
    {move,{y,4},{x,0}}.
    {call_last,5,{f,925},6}.
  {label,928}.
    {test,is_nil,{f,924},[{x,0}]}.
    {test_heap,2,5}.
    {put_list,{x,1},{x,4},{x,1}}.
    {move,{x,3},{x,0}}.
    {line,[{location,"lists.erl",2642}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.
  {label,929}.
    {line,[{location,"lists.erl",2635}]}.
    {case_end,{x,0}}.


{function, fmerge2_2, 5, 931}.
  {label,930}.
    {line,[{location,"lists.erl",2644}]}.
    {func_info,{atom,lists},{atom,fmerge2_2},5}.
  {label,931}.
    {test,is_nonempty_list,{f,934},[{x,3}]}.
    {allocate,6,5}.
    {get_list,{x,3},{x,5},{y,4}}.
    {move,{x,1},{y,2}}.
    {move,{x,5},{x,1}}.
    {move,{x,4},{y,0}}.
    {move,{x,2},{y,1}}.
    {move,{x,0},{y,3}}.
    {move,{x,1},{y,5}}.
    {line,[{location,"lists.erl",2645}]}.
    {call_fun,2}.
    {test,is_atom,{f,935},[{x,0}]}.
    {select_val,{x,0},
                {f,935},
                {list,[{atom,true},{f,932},{atom,false},{f,933}]}}.
  {label,932}.
    {test_heap,2,0}.
    {put_list,{y,3},{y,0},{x,4}}.
    {move,{y,1},{x,2}}.
    {move,{y,5},{x,1}}.
    {move,{y,4},{x,3}}.
    {move,{y,2},{x,0}}.
    {call_last,5,{f,925},6}.
  {label,933}.
    {test_heap,2,0}.
    {put_list,{y,5},{y,0},{x,4}}.
    {move,{y,1},{x,2}}.
    {move,{y,2},{x,1}}.
    {move,{y,4},{x,3}}.
    {move,{y,3},{x,0}}.
    {call_last,5,{f,931},6}.
  {label,934}.
    {test,is_nil,{f,930},[{x,3}]}.
    {test_heap,2,5}.
    {put_list,{x,0},{x,4},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{x,1}}.
    {line,[{location,"lists.erl",2652}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.
  {label,935}.
    {line,[{location,"lists.erl",2645}]}.
    {case_end,{x,0}}.


{function, rfmerge2_1, 5, 937}.
  {label,936}.
    {line,[{location,"lists.erl",2656}]}.
    {func_info,{atom,lists},{atom,rfmerge2_1},5}.
  {label,937}.
    {test,is_nonempty_list,{f,940},[{x,0}]}.
    {allocate,6,5}.
    {get_list,{x,0},{x,0},{y,4}}.
    {move,{x,4},{y,0}}.
    {move,{x,3},{y,1}}.
    {move,{x,2},{y,2}}.
    {move,{x,1},{y,3}}.
    {move,{x,0},{y,5}}.
    {line,[{location,"lists.erl",2657}]}.
    {call_fun,2}.
    {test,is_atom,{f,941},[{x,0}]}.
    {select_val,{x,0},
                {f,941},
                {list,[{atom,true},{f,938},{atom,false},{f,939}]}}.
  {label,938}.
    {test_heap,2,0}.
    {put_list,{y,3},{y,0},{x,4}}.
    {move,{y,2},{x,2}}.
    {move,{y,4},{x,1}}.
    {move,{y,1},{x,3}}.
    {move,{y,5},{x,0}}.
    {call_last,5,{f,943},6}.
  {label,939}.
    {test_heap,2,0}.
    {put_list,{y,5},{y,0},{x,4}}.
    {move,{y,2},{x,2}}.
    {move,{y,3},{x,1}}.
    {move,{y,1},{x,3}}.
    {move,{y,4},{x,0}}.
    {call_last,5,{f,937},6}.
  {label,940}.
    {test,is_nil,{f,936},[{x,0}]}.
    {test_heap,2,5}.
    {put_list,{x,1},{x,4},{x,1}}.
    {move,{x,3},{x,0}}.
    {line,[{location,"lists.erl",2664}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.
  {label,941}.
    {line,[{location,"lists.erl",2657}]}.
    {case_end,{x,0}}.


{function, rfmerge2_2, 5, 943}.
  {label,942}.
    {line,[{location,"lists.erl",2666}]}.
    {func_info,{atom,lists},{atom,rfmerge2_2},5}.
  {label,943}.
    {test,is_nonempty_list,{f,946},[{x,3}]}.
    {allocate,6,5}.
    {get_list,{x,3},{x,5},{y,4}}.
    {move,{x,1},{y,2}}.
    {move,{x,5},{x,1}}.
    {move,{x,4},{y,0}}.
    {move,{x,2},{y,1}}.
    {move,{x,0},{y,3}}.
    {move,{x,1},{y,5}}.
    {line,[{location,"lists.erl",2667}]}.
    {call_fun,2}.
    {test,is_atom,{f,947},[{x,0}]}.
    {select_val,{x,0},
                {f,947},
                {list,[{atom,false},{f,944},{atom,true},{f,945}]}}.
  {label,944}.
    {test_heap,2,0}.
    {put_list,{y,3},{y,0},{x,4}}.
    {move,{y,1},{x,2}}.
    {move,{y,5},{x,1}}.
    {move,{y,4},{x,3}}.
    {move,{y,2},{x,0}}.
    {call_last,5,{f,937},6}.
  {label,945}.
    {test_heap,2,0}.
    {put_list,{y,5},{y,0},{x,4}}.
    {move,{y,1},{x,2}}.
    {move,{y,2},{x,1}}.
    {move,{y,4},{x,3}}.
    {move,{y,3},{x,0}}.
    {call_last,5,{f,943},6}.
  {label,946}.
    {test,is_nil,{f,942},[{x,3}]}.
    {test_heap,2,5}.
    {put_list,{x,0},{x,4},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{x,1}}.
    {line,[{location,"lists.erl",2674}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.
  {label,947}.
    {line,[{location,"lists.erl",2667}]}.
    {case_end,{x,0}}.


{function, ufsplit_1, 6, 949}.
  {label,948}.
    {line,[{location,"lists.erl",2679}]}.
    {func_info,{atom,lists},{atom,ufsplit_1},6}.
  {label,949}.
    {test,is_nonempty_list,{f,958},[{x,3}]}.
    {allocate,7,6}.
    {get_list,{x,3},{x,6},{y,5}}.
    {move,{x,1},{y,3}}.
    {move,{x,6},{x,1}}.
    {move,{x,5},{y,0}}.
    {move,{x,4},{y,1}}.
    {move,{x,2},{y,2}}.
    {move,{x,0},{y,4}}.
    {move,{x,1},{y,6}}.
    {line,[{location,"lists.erl",2680}]}.
    {call_fun,2}.
    {test,is_atom,{f,962},[{x,0}]}.
    {select_val,{x,0},
                {f,962},
                {list,[{atom,true},{f,950},{atom,false},{f,952}]}}.
  {label,950}.
    {move,{y,4},{x,1}}.
    {move,{y,2},{x,2}}.
    {move,{y,6},{x,0}}.
    {line,[{location,"lists.erl",2682}]}.
    {call_fun,2}.
    {test,is_atom,{f,959},[{x,0}]}.
    {select_val,{x,0},
                {f,959},
                {list,[{atom,false},{f,951},{atom,true},{f,957}]}}.
  {label,951}.
    {test_heap,2,0}.
    {put_list,{y,3},{y,1},{x,4}}.
    {move,{y,2},{x,2}}.
    {move,{y,5},{x,3}}.
    {move,{y,4},{x,1}}.
    {move,{y,0},{x,5}}.
    {move,{y,6},{x,0}}.
    {call_last,6,{f,949},7}.
  {label,952}.
    {move,{y,6},{x,1}}.
    {move,{y,2},{x,2}}.
    {move,{y,3},{x,0}}.
    {line,[{location,"lists.erl",2689}]}.
    {call_fun,2}.
    {test,is_atom,{f,961},[{x,0}]}.
    {select_val,{x,0},
                {f,961},
                {list,[{atom,false},{f,953},{atom,true},{f,955}]}}.
  {label,953}.
    {test,is_nil,{f,954},[{y,1}]}.
    {test_heap,2,0}.
    {put_list,{y,6},nil,{x,4}}.
    {move,{y,2},{x,2}}.
    {move,{y,5},{x,3}}.
    {move,{y,3},{x,1}}.
    {move,{y,0},{x,5}}.
    {move,{y,4},{x,0}}.
    {call_last,6,{f,949},7}.
  {label,954}.
    {move,{y,5},{x,3}}.
    {move,{y,1},{x,4}}.
    {move,{y,2},{x,2}}.
    {move,{y,0},{x,5}}.
    {move,{y,3},{x,1}}.
    {move,{y,6},{x,6}}.
    {move,{y,4},{x,0}}.
    {call_last,7,{f,964},7}.
  {label,955}.
    {move,{y,3},{x,1}}.
    {move,{y,2},{x,2}}.
    {move,{y,6},{x,0}}.
    {line,[{location,"lists.erl",2691}]}.
    {call_fun,2}.
    {test,is_atom,{f,960},[{x,0}]}.
    {select_val,{x,0},
                {f,960},
                {list,[{atom,false},{f,956},{atom,true},{f,957}]}}.
  {label,956}.
    {test_heap,2,0}.
    {put_list,{y,3},{y,1},{x,4}}.
    {move,{y,2},{x,2}}.
    {move,{y,5},{x,3}}.
    {move,{y,6},{x,1}}.
    {move,{y,0},{x,5}}.
    {move,{y,4},{x,0}}.
    {call_last,6,{f,949},7}.
  {label,957}.
    {move,{y,5},{x,3}}.
    {move,{y,2},{x,2}}.
    {move,{y,1},{x,4}}.
    {move,{y,3},{x,1}}.
    {move,{y,0},{x,5}}.
    {move,{y,4},{x,0}}.
    {call_last,6,{f,949},7}.
  {label,958}.
    {test,is_nil,{f,948},[{x,3}]}.
    {test_heap,6,6}.
    {put_list,{x,1},{x,4},{x,3}}.
    {put_list,{x,0},{x,3},{x,3}}.
    {put_list,{x,3},{x,5},{x,0}}.
    {move,nil,{x,1}}.
    {call_only,3,{f,997}}.
  {label,959}.
    {line,[{location,"lists.erl",2682}]}.
    {case_end,{x,0}}.
  {label,960}.
    {line,[{location,"lists.erl",2691}]}.
    {case_end,{x,0}}.
  {label,961}.
    {line,[{location,"lists.erl",2689}]}.
    {case_end,{x,0}}.
  {label,962}.
    {line,[{location,"lists.erl",2680}]}.
    {case_end,{x,0}}.


{function, ufsplit_1_1, 7, 964}.
  {label,963}.
    {line,[{location,"lists.erl",2707}]}.
    {func_info,{atom,lists},{atom,ufsplit_1_1},7}.
  {label,964}.
    {test,is_nonempty_list,{f,975},[{x,3}]}.
    {allocate,8,7}.
    {get_list,{x,3},{x,7},{y,6}}.
    {move,{x,1},{y,4}}.
    {move,{x,7},{x,1}}.
    {move,{x,6},{y,0}}.
    {move,{x,5},{y,1}}.
    {move,{x,4},{y,2}}.
    {move,{x,2},{y,3}}.
    {move,{x,0},{y,5}}.
    {move,{x,1},{y,7}}.
    {line,[{location,"lists.erl",2708}]}.
    {call_fun,2}.
    {test,is_atom,{f,981},[{x,0}]}.
    {select_val,{x,0},
                {f,981},
                {list,[{atom,true},{f,965},{atom,false},{f,967}]}}.
  {label,965}.
    {move,{y,5},{x,1}}.
    {move,{y,3},{x,2}}.
    {move,{y,7},{x,0}}.
    {line,[{location,"lists.erl",2710}]}.
    {call_fun,2}.
    {test,is_atom,{f,976},[{x,0}]}.
    {select_val,{x,0},
                {f,976},
                {list,[{atom,false},{f,966},{atom,true},{f,974}]}}.
  {label,966}.
    {test_heap,2,0}.
    {put_list,{y,4},{y,2},{x,4}}.
    {move,{y,6},{x,3}}.
    {move,{y,3},{x,2}}.
    {move,{y,1},{x,5}}.
    {move,{y,5},{x,1}}.
    {move,{y,0},{x,6}}.
    {move,{y,7},{x,0}}.
    {call_last,7,{f,964},8}.
  {label,967}.
    {move,{y,7},{x,1}}.
    {move,{y,3},{x,2}}.
    {move,{y,4},{x,0}}.
    {line,[{location,"lists.erl",2717}]}.
    {call_fun,2}.
    {test,is_atom,{f,980},[{x,0}]}.
    {select_val,{x,0},
                {f,980},
                {list,[{atom,true},{f,968},{atom,false},{f,970}]}}.
  {label,968}.
    {move,{y,4},{x,1}}.
    {move,{y,3},{x,2}}.
    {move,{y,7},{x,0}}.
    {line,[{location,"lists.erl",2719}]}.
    {call_fun,2}.
    {test,is_atom,{f,977},[{x,0}]}.
    {select_val,{x,0},
                {f,977},
                {list,[{atom,false},{f,969},{atom,true},{f,974}]}}.
  {label,969}.
    {test_heap,2,0}.
    {put_list,{y,4},{y,2},{x,4}}.
    {move,{y,6},{x,3}}.
    {move,{y,3},{x,2}}.
    {move,{y,1},{x,5}}.
    {move,{y,7},{x,1}}.
    {move,{y,0},{x,6}}.
    {move,{y,5},{x,0}}.
    {call_last,7,{f,964},8}.
  {label,970}.
    {move,{y,7},{x,1}}.
    {move,{y,3},{x,2}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"lists.erl",2726}]}.
    {call_fun,2}.
    {test,is_atom,{f,979},[{x,0}]}.
    {select_val,{x,0},
                {f,979},
                {list,[{atom,false},{f,971},{atom,true},{f,972}]}}.
  {label,971}.
    {test_heap,6,0}.
    {put_list,{y,4},{y,2},{x,6}}.
    {put_list,{y,5},{x,6},{x,6}}.
    {put_list,{x,6},{y,1},{x,5}}.
    {move,{y,3},{x,2}}.
    {move,{y,6},{x,3}}.
    {move,{y,7},{x,1}}.
    {move,nil,{x,4}}.
    {move,{y,0},{x,0}}.
    {call_last,6,{f,949},8}.
  {label,972}.
    {move,{y,0},{x,1}}.
    {move,{y,3},{x,2}}.
    {move,{y,7},{x,0}}.
    {line,[{location,"lists.erl",2728}]}.
    {call_fun,2}.
    {test,is_atom,{f,978},[{x,0}]}.
    {select_val,{x,0},
                {f,978},
                {list,[{atom,false},{f,973},{atom,true},{f,974}]}}.
  {label,973}.
    {test_heap,6,0}.
    {put_list,{y,4},{y,2},{x,6}}.
    {put_list,{y,5},{x,6},{x,6}}.
    {put_list,{x,6},{y,1},{x,5}}.
    {move,{y,3},{x,2}}.
    {move,{y,6},{x,3}}.
    {move,{y,0},{x,1}}.
    {move,nil,{x,4}}.
    {move,{y,7},{x,0}}.
    {call_last,6,{f,949},8}.
  {label,974}.
    {move,{y,6},{x,3}}.
    {move,{y,2},{x,4}}.
    {move,{y,3},{x,2}}.
    {move,{y,1},{x,5}}.
    {move,{y,4},{x,1}}.
    {move,{y,0},{x,6}}.
    {move,{y,5},{x,0}}.
    {call_last,7,{f,964},8}.
  {label,975}.
    {test,is_nil,{f,963},[{x,3}]}.
    {test_heap,10,7}.
    {put_list,{x,1},{x,4},{x,3}}.
    {put_list,{x,0},{x,3},{x,0}}.
    {put_list,{x,0},{x,5},{x,3}}.
    {put_list,{x,6},nil,{x,4}}.
    {put_list,{x,4},{x,3},{x,0}}.
    {move,nil,{x,1}}.
    {call_only,3,{f,997}}.
  {label,976}.
    {line,[{location,"lists.erl",2710}]}.
    {case_end,{x,0}}.
  {label,977}.
    {line,[{location,"lists.erl",2719}]}.
    {case_end,{x,0}}.
  {label,978}.
    {line,[{location,"lists.erl",2728}]}.
    {case_end,{x,0}}.
  {label,979}.
    {line,[{location,"lists.erl",2726}]}.
    {case_end,{x,0}}.
  {label,980}.
    {line,[{location,"lists.erl",2717}]}.
    {case_end,{x,0}}.
  {label,981}.
    {line,[{location,"lists.erl",2708}]}.
    {case_end,{x,0}}.


{function, ufsplit_2, 4, 983}.
  {label,982}.
    {line,[{location,"lists.erl",2743}]}.
    {func_info,{atom,lists},{atom,ufsplit_2},4}.
  {label,983}.
    {test,is_nonempty_list,{f,988},[{x,1}]}.
    {allocate,5,4}.
    {get_list,{x,1},{x,1},{y,3}}.
    {move,{x,3},{y,0}}.
    {move,{x,2},{y,1}}.
    {move,{x,0},{y,2}}.
    {move,{x,1},{y,4}}.
    {line,[{location,"lists.erl",2744}]}.
    {call_fun,2}.
    {test,is_atom,{f,990},[{x,0}]}.
    {select_val,{x,0},
                {f,990},
                {list,[{atom,false},{f,984},{atom,true},{f,985}]}}.
  {label,984}.
    {test_heap,2,0}.
    {put_list,{y,2},{y,0},{x,3}}.
    {move,{y,3},{x,1}}.
    {move,{y,1},{x,2}}.
    {move,{y,4},{x,0}}.
    {call_last,4,{f,983},5}.
  {label,985}.
    {move,{y,2},{x,1}}.
    {move,{y,1},{x,2}}.
    {move,{y,4},{x,0}}.
    {line,[{location,"lists.erl",2746}]}.
    {call_fun,2}.
    {test,is_atom,{f,989},[{x,0}]}.
    {select_val,{x,0},
                {f,989},
                {list,[{atom,true},{f,986},{atom,false},{f,987}]}}.
  {label,986}.
    {move,{y,1},{x,2}}.
    {move,{y,3},{x,1}}.
    {move,{y,0},{x,3}}.
    {move,{y,2},{x,0}}.
    {call_last,4,{f,983},5}.
  {label,987}.
    {move,nil,{x,1}}.
    {move,{y,0},{x,0}}.
    {trim,1,4}.
    {line,[{location,"lists.erl",2750}]}.
    {call_ext,2,{extfunc,lists,reverse,2}}.
    {test_heap,2,1}.
    {put_list,{x,0},nil,{x,5}}.
    {move,{y,0},{x,2}}.
    {move,{y,2},{x,3}}.
    {move,{y,1},{x,1}}.
    {move,nil,{x,4}}.
    {move,{y,3},{x,0}}.
    {call_last,6,{f,949},4}.
  {label,988}.
    {test,is_nil,{f,982},[{x,1}]}.
    {test_heap,2,4}.
    {put_list,{x,0},{x,3},{x,0}}.
    return.
  {label,989}.
    {line,[{location,"lists.erl",2746}]}.
    {case_end,{x,0}}.
  {label,990}.
    {line,[{location,"lists.erl",2744}]}.
    {case_end,{x,0}}.


{function, ufmergel, 3, 992}.
  {label,991}.
    {line,[{location,"lists.erl",2758}]}.
    {func_info,{atom,lists},{atom,ufmergel},3}.
  {label,992}.
    {test,is_nonempty_list,{f,995},[{x,0}]}.
    {get_list,{x,0},{x,3},{x,4}}.
    {test,is_nonempty_list,{f,993},[{x,3}]}.
    {get_list,{x,3},{x,5},{x,6}}.
    {test,is_nonempty_list,{f,993},[{x,4}]}.
    {allocate,3,7}.
    {get_list,{x,4},{x,3},{y,2}}.
    {move,{x,1},{y,0}}.
    {move,{x,6},{x,1}}.
    {move,nil,{x,4}}.
    {move,{x,5},{x,0}}.
    {move,{x,2},{y,1}}.
    {line,[{location,"lists.erl",2759}]}.
    {call,5,{f,1013}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,1}}.
    {move,{y,1},{x,2}}.
    {move,{y,2},{x,0}}.
    {call_last,3,{f,992},3}.
  {label,993}.
    {test,is_nil,{f,991},[{x,4}]}.
    {test,is_nil,{f,994},[{x,1}]}.
    {move,{x,3},{x,0}}.
    return.
  {label,994}.
    {allocate,2,4}.
    {move,{x,1},{y,0}}.
    {move,nil,{x,1}}.
    {move,{x,3},{x,0}}.
    {move,{x,2},{y,1}}.
    {line,[{location,"lists.erl",2763}]}.
    {call_ext,2,{extfunc,lists,reverse,2}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,0}}.
    {move,{y,1},{x,2}}.
    {move,nil,{x,1}}.
    {call_last,3,{f,997},2}.
  {label,995}.
    {test,is_nil,{f,991},[{x,0}]}.
    {move,{x,1},{x,0}}.
    {move,nil,{x,1}}.
    {call_only,3,{f,997}}.


{function, rufmergel, 3, 997}.
  {label,996}.
    {line,[{location,"lists.erl",2767}]}.
    {func_info,{atom,lists},{atom,rufmergel},3}.
  {label,997}.
    {test,is_nonempty_list,{f,999},[{x,0}]}.
    {get_list,{x,0},{x,3},{x,4}}.
    {test,is_nonempty_list,{f,998},[{x,3}]}.
    {get_list,{x,3},{x,5},{x,6}}.
    {test,is_nonempty_list,{f,998},[{x,4}]}.
    {allocate,3,7}.
    {get_list,{x,4},{x,0},{y,2}}.
    {move,{x,1},{y,0}}.
    {move,{x,6},{x,3}}.
    {move,{x,5},{x,1}}.
    {move,nil,{x,4}}.
    {move,{x,2},{y,1}}.
    {line,[{location,"lists.erl",2768}]}.
    {call,5,{f,1019}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,1}}.
    {move,{y,1},{x,2}}.
    {move,{y,2},{x,0}}.
    {call_last,3,{f,997},3}.
  {label,998}.
    {test,is_nil,{f,996},[{x,4}]}.
    {allocate,2,4}.
    {move,{x,1},{y,0}}.
    {move,nil,{x,1}}.
    {move,{x,3},{x,0}}.
    {move,{x,2},{y,1}}.
    {line,[{location,"lists.erl",2770}]}.
    {call_ext,2,{extfunc,lists,reverse,2}}.
    {test_heap,2,1}.
    {put_list,{x,0},{y,0},{x,0}}.
    {move,{y,1},{x,2}}.
    {move,nil,{x,1}}.
    {call_last,3,{f,992},2}.
  {label,999}.
    {test,is_nil,{f,996},[{x,0}]}.
    {move,{x,1},{x,0}}.
    {move,nil,{x,1}}.
    {call_only,3,{f,992}}.


{function, ufmerge2_1, 6, 1001}.
  {label,1000}.
    {line,[{location,"lists.erl",2778}]}.
    {func_info,{atom,lists},{atom,ufmerge2_1},6}.
  {label,1001}.
    {test,is_nonempty_list,{f,1006},[{x,0}]}.
    {allocate,7,6}.
    {get_list,{x,0},{x,0},{y,5}}.
    {move,{x,5},{y,0}}.
    {move,{x,4},{y,1}}.
    {move,{x,3},{y,2}}.
    {move,{x,2},{y,3}}.
    {move,{x,1},{y,4}}.
    {move,{x,0},{y,6}}.
    {line,[{location,"lists.erl",2779}]}.
    {call_fun,2}.
    {test,is_atom,{f,1010},[{x,0}]}.
    {select_val,{x,0},
                {f,1010},
                {list,[{atom,true},{f,1002},{atom,false},{f,1003}]}}.
  {label,1002}.
    {test_heap,2,0}.
    {put_list,{y,6},{y,1},{x,4}}.
    {move,{y,3},{x,2}}.
    {move,{y,2},{x,3}}.
    {move,{y,4},{x,1}}.
    {move,{y,6},{x,5}}.
    {move,{y,5},{x,0}}.
    {call_last,6,{f,1001},7}.
  {label,1003}.
    {move,{y,0},{x,1}}.
    {move,{y,3},{x,2}}.
    {kill,{y,0}}.
    {move,{y,4},{x,0}}.
    {line,[{location,"lists.erl",2783}]}.
    {call_fun,2}.
    {test,is_atom,{f,1009},[{x,0}]}.
    {select_val,{x,0},
                {f,1009},
                {list,[{atom,false},{f,1004},{atom,true},{f,1005}]}}.
  {label,1004}.
    {test_heap,2,0}.
    {put_list,{y,4},{y,1},{x,4}}.
    {move,{y,3},{x,2}}.
    {move,{y,5},{x,1}}.
    {move,{y,2},{x,3}}.
    {move,{y,6},{x,0}}.
    {call_last,5,{f,1013},7}.
  {label,1005}.
    {move,{y,3},{x,2}}.
    {move,{y,2},{x,3}}.
    {move,{y,5},{x,1}}.
    {move,{y,1},{x,4}}.
    {move,{y,6},{x,0}}.
    {call_last,5,{f,1013},7}.
  {label,1006}.
    {test,is_nil,{f,1000},[{x,0}]}.
    {allocate,3,6}.
    {move,{x,1},{x,0}}.
    {move,{x,5},{x,1}}.
    {move,{x,4},{y,0}}.
    {move,{x,3},{y,1}}.
    {move,{x,0},{y,2}}.
    {line,[{location,"lists.erl",2791}]}.
    {call_fun,2}.
    {test,is_atom,{f,1011},[{x,0}]}.
    {select_val,{x,0},
                {f,1011},
                {list,[{atom,false},{f,1007},{atom,true},{f,1008}]}}.
  {label,1007}.
    {test_heap,2,0}.
    {put_list,{y,2},{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"lists.erl",2795}]}.
    {call_ext_last,2,{extfunc,lists,reverse,2},3}.
  {label,1008}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {line,[{location,"lists.erl",2793}]}.
    {call_ext_last,2,{extfunc,lists,reverse,2},3}.
  {label,1009}.
    {line,[{location,"lists.erl",2783}]}.
    {case_end,{x,0}}.
  {label,1010}.
    {line,[{location,"lists.erl",2779}]}.
    {case_end,{x,0}}.
  {label,1011}.
    {line,[{location,"lists.erl",2791}]}.
    {case_end,{x,0}}.


{function, ufmerge2_2, 5, 1013}.
  {label,1012}.
    {line,[{location,"lists.erl",2798}]}.
    {func_info,{atom,lists},{atom,ufmerge2_2},5}.
  {label,1013}.
    {test,is_nonempty_list,{f,1016},[{x,3}]}.
    {allocate,6,5}.
    {get_list,{x,3},{x,5},{y,4}}.
    {move,{x,1},{y,2}}.
    {move,{x,5},{x,1}}.
    {move,{x,4},{y,0}}.
    {move,{x,2},{y,1}}.
    {move,{x,0},{y,3}}.
    {move,{x,1},{y,5}}.
    {line,[{location,"lists.erl",2799}]}.
    {call_fun,2}.
    {test,is_atom,{f,1017},[{x,0}]}.
    {select_val,{x,0},
                {f,1017},
                {list,[{atom,true},{f,1014},{atom,false},{f,1015}]}}.
  {label,1014}.
    {test_heap,2,0}.
    {put_list,{y,3},{y,0},{x,4}}.
    {move,{y,1},{x,2}}.
    {move,{y,4},{x,3}}.
    {move,{y,5},{x,1}}.
    {move,{y,3},{x,5}}.
    {move,{y,2},{x,0}}.
    {call_last,6,{f,1001},6}.
  {label,1015}.
    {test_heap,2,0}.
    {put_list,{y,5},{y,0},{x,4}}.
    {move,{y,1},{x,2}}.
    {move,{y,2},{x,1}}.
    {move,{y,4},{x,3}}.
    {move,{y,3},{x,0}}.
    {call_last,5,{f,1013},6}.
  {label,1016}.
    {test,is_nil,{f,1012},[{x,3}]}.
    {test_heap,2,5}.
    {put_list,{x,0},{x,4},{x,2}}.
    {move,{x,1},{x,0}}.
    {move,{x,2},{x,1}}.
    {line,[{location,"lists.erl",2806}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.
  {label,1017}.
    {line,[{location,"lists.erl",2799}]}.
    {case_end,{x,0}}.


{function, rufmerge2_1, 5, 1019}.
  {label,1018}.
    {line,[{location,"lists.erl",2810}]}.
    {func_info,{atom,lists},{atom,rufmerge2_1},5}.
  {label,1019}.
    {test,is_nonempty_list,{f,1022},[{x,0}]}.
    {allocate,6,5}.
    {get_list,{x,0},{x,0},{y,4}}.
    {move,{x,4},{y,0}}.
    {move,{x,3},{y,1}}.
    {move,{x,2},{y,2}}.
    {move,{x,1},{y,3}}.
    {move,{x,0},{y,5}}.
    {line,[{location,"lists.erl",2811}]}.
    {call_fun,2}.
    {test,is_atom,{f,1023},[{x,0}]}.
    {select_val,{x,0},
                {f,1023},
                {list,[{atom,false},{f,1020},{atom,true},{f,1021}]}}.
  {label,1020}.
    {test_heap,2,0}.
    {put_list,{y,5},{y,0},{x,4}}.
    {move,{y,2},{x,2}}.
    {move,{y,3},{x,1}}.
    {move,{y,1},{x,3}}.
    {move,{y,4},{x,0}}.
    {call_last,5,{f,1019},6}.
  {label,1021}.
    {move,{y,1},{x,3}}.
    {move,{y,2},{x,2}}.
    {move,{y,0},{x,4}}.
    {move,{y,4},{x,1}}.
    {move,{y,3},{x,5}}.
    {move,{y,5},{x,0}}.
    {call_last,6,{f,1025},6}.
  {label,1022}.
    {test,is_nil,{f,1018},[{x,0}]}.
    {test_heap,2,5}.
    {put_list,{x,1},{x,4},{x,1}}.
    {move,{x,3},{x,0}}.
    {line,[{location,"lists.erl",2818}]}.
    {call_ext_only,2,{extfunc,lists,reverse,2}}.
  {label,1023}.
    {line,[{location,"lists.erl",2811}]}.
    {case_end,{x,0}}.


{function, rufmerge2_2, 6, 1025}.
  {label,1024}.
    {line,[{location,"lists.erl",2821}]}.
    {func_info,{atom,lists},{atom,rufmerge2_2},6}.
  {label,1025}.
    {test,is_nonempty_list,{f,1030},[{x,3}]}.
    {allocate,7,6}.
    {get_list,{x,3},{x,6},{y,5}}.
    {move,{x,1},{y,3}}.
    {move,{x,6},{x,1}}.
    {move,{x,5},{y,0}}.
    {move,{x,4},{y,1}}.
    {move,{x,2},{y,2}}.
    {move,{x,0},{y,4}}.
    {move,{x,1},{y,6}}.
    {line,[{location,"lists.erl",2822}]}.
    {call_fun,2}.
    {test,is_atom,{f,1034},[{x,0}]}.
    {select_val,{x,0},
                {f,1034},
                {list,[{atom,true},{f,1026},{atom,false},{f,1027}]}}.
  {label,1026}.
    {test_heap,2,0}.
    {put_list,{y,0},{y,1},{x,4}}.
    {move,{y,2},{x,2}}.
    {move,{y,5},{x,3}}.
    {move,{y,3},{x,1}}.
    {move,{y,6},{x,5}}.
    {move,{y,4},{x,0}}.
    {call_last,6,{f,1025},7}.
  {label,1027}.
    {move,{y,4},{x,1}}.
    {move,{y,2},{x,2}}.
    {move,{y,0},{x,0}}.
    {line,[{location,"lists.erl",2826}]}.
    {call_fun,2}.
    {test,is_atom,{f,1033},[{x,0}]}.
    {select_val,{x,0},
                {f,1033},
                {list,[{atom,false},{f,1028},{atom,true},{f,1029}]}}.
  {label,1028}.
    {test_heap,4,0}.
    {put_list,{y,0},{y,1},{x,5}}.
    {put_list,{y,4},{x,5},{x,4}}.
    {move,{y,2},{x,2}}.
    {move,{y,6},{x,1}}.
    {move,{y,5},{x,3}}.
    {move,{y,3},{x,0}}.
    {call_last,5,{f,1019},7}.
  {label,1029}.
    {test_heap,2,0}.
    {put_list,{y,4},{y,1},{x,4}}.
    {move,{y,2},{x,2}}.
    {move,{y,6},{x,1}}.
    {move,{y,5},{x,3}}.
    {move,{y,3},{x,0}}.
    {call_last,5,{f,1019},7}.
  {label,1030}.
    {test,is_nil,{f,1024},[{x,3}]}.
    {allocate,4,6}.
    {move,{x,1},{y,2}}.
    {move,{x,0},{x,1}}.
    {move,{x,5},{x,0}}.
    {move,{x,0},{y,0}}.
    {move,{x,4},{y,1}}.
    {move,{x,1},{y,3}}.
    {line,[{location,"lists.erl",2834}]}.
    {call_fun,2}.
    {test,is_atom,{f,1035},[{x,0}]}.
    {select_val,{x,0},
                {f,1035},
                {list,[{atom,false},{f,1031},{atom,true},{f,1032}]}}.
  {label,1031}.
    {test_heap,4,0}.
    {put_list,{y,0},{y,1},{x,2}}.
    {put_list,{y,3},{x,2},{x,1}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"lists.erl",2838}]}.
    {call_ext_last,2,{extfunc,lists,reverse,2},4}.
  {label,1032}.
    {test_heap,2,0}.
    {put_list,{y,3},{y,1},{x,1}}.
    {move,{y,2},{x,0}}.
    {line,[{location,"lists.erl",2836}]}.
    {call_ext_last,2,{extfunc,lists,reverse,2},4}.
  {label,1033}.
    {line,[{location,"lists.erl",2826}]}.
    {case_end,{x,0}}.
  {label,1034}.
    {line,[{location,"lists.erl",2822}]}.
    {case_end,{x,0}}.
  {label,1035}.
    {line,[{location,"lists.erl",2834}]}.
    {case_end,{x,0}}.


{function, module_info, 0, 1037}.
  {label,1036}.
    {line,[]}.
    {func_info,{atom,lists},{atom,module_info},0}.
  {label,1037}.
    {move,{atom,lists},{x,0}}.
    {line,[]}.
    {call_ext_only,1,{extfunc,erlang,get_module_info,1}}.


{function, module_info, 1, 1039}.
  {label,1038}.
    {line,[]}.
    {func_info,{atom,lists},{atom,module_info},1}.
  {label,1039}.
    {move,{x,0},{x,1}}.
    {move,{atom,lists},{x,0}}.
    {line,[]}.
    {call_ext_only,2,{extfunc,erlang,get_module_info,2}}.


{function, '-filter/2-lc$^0/1-0-', 2, 1041}.
  {label,1040}.
    {line,[{location,"lists.erl",1286}]}.
    {func_info,{atom,lists},{atom,'-filter/2-lc$^0/1-0-'},2}.
  {label,1041}.
    {test,is_nonempty_list,{f,1044},[{x,0}]}.
    {allocate,3,2}.
    {get_list,{x,0},{x,0},{y,1}}.
    {move,{x,1},{y,0}}.
    {move,{x,0},{y,2}}.
    {line,[{location,"lists.erl",1286}]}.
    {call_fun,1}.
    {test,is_atom,{f,1045},[{x,0}]}.
    {select_val,{x,0},
                {f,1045},
                {list,[{atom,false},{f,1042},{atom,true},{f,1043}]}}.
  {label,1042}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {call_last,2,{f,1041},3}.
  {label,1043}.
    {move,{y,0},{x,1}}.
    {move,{y,1},{x,0}}.
    {trim,2,1}.
    {line,[{location,"lists.erl",1286}]}.
    {call,2,{f,1041}}.
    {test_heap,2,1}.
    {put_list,{y,0},{x,0},{x,0}}.
    {deallocate,1}.
    return.
  {label,1044}.
    {test,is_nil,{f,1046},[{x,0}]}.
    return.
  {label,1045}.
    {line,[{location,"lists.erl",1286}]}.
    {case_end,{x,0}}.
  {label,1046}.
    {test_heap,2,1}.
    {put_list,{x,0},nil,{x,1}}.
    {move,{atom,function_clause},{x,0}}.
    {line,[{location,"lists.erl",1286}]}.
    {call_ext,2,{extfunc,erlang,error,2}}.


{function, '-concat/1-fun-0-', 1, 1048}.
  {label,1047}.
    {line,[{location,"lists.erl",601}]}.
    {func_info,{atom,lists},{atom,'-concat/1-fun-0-'},1}.
  {label,1048}.
    {call_only,1,{f,160}}.
