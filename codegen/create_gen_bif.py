#!/usr/bin/env python3
# takes: atoms.tab
# Prints a Rust source file predefined bif names/arities (also they are
# preregistered by emulator::atom during the startup)
import erlangrt.genop as genop


def main():
    conf = genop.OTP20()
    tables = genop.OTPTables(conf)

    print("""\
//! Generated by codegen/create_gen_bif.py
//! Creates a lookup table of BIF functions
//! Config used: {otp} 
#![allow(dead_code)]

use term::immediate;
use term::lterm::LTerm;
use emulator::funarity::FunArity;

""".format(otp=conf.__class__.__name__))

    print("pub static BIF_MAP: HashMap<LTerm, Vec<FunArity>> = &[\n")

    for a in tables.atom_tab:
        print("pub const {name}: LTerm = LTerm {{ "
              "value: immediate::make_atom_raw_const({index}) }};"
              "".format(name=a.cname, index=a.id))


if __name__ == "__main__":
    main()
